计算机应用
Computer Applications
1999年 第19卷 第7期  Vol.19 No.7 1999



Solaris 系统动态链接库的建立及其程序设计接口
曹广华　袁子龙　李鹏举

　　摘　要　建立用户自己的动态链接库、使用动态链接程序设计接口是大型、高质量程序设计的一项重要技术。Solaris操作系统为其应用程序提供了很好的动态链接环境。虽然图1中的画法没有边的交叉,但图2比图1看起来要好一些。Kamada与S。在现代UNIX操作系统中，系统软件和大型应用软件都采用动态链接技术。本文以Sun工作站使用的Solaris操作系统为例分析其动态链接环境、动态链接库的建立及其使用方法。当用户通过Virtual IP Address（即调度器的外部地址）访问服务器时,请求报文到达调度器,调度器以负载均衡方法从一组真实服务器选出一个,将报文的目标地址Virtual IP Address改写成选定服务器的地址,报文的目标端口改写成选定服务器的相应端口,最后将报文发送给选定的服务器。通过系统提供的链接程序(link editor)、共享函数库(shared library)和运行时链接器(runtime linker)，我们可以方便地建立和运行动态可执行程序。
1.1　Solaris系统的函数库
　　Solaris操作系统在/usr/lib目录中提供各种函数库，包括各种静态库（lib<name>.a）和各种动态链接共享库（lib<name>.so），这些函数库作为缺省值在编译程序时被系统链接程序链接，根据不同情况生成静态链接或动态链接可执行程序。动态链接可执行程序在运行时还要由系统运行时链接程序动态调用所需要的动态链接共享库［1］。
1.2　Solaris系统的链接程序
　　Solaris系统的链接程序ld本质上是一个动态链接程序，即系统对目标码进行链接时，优先选择动态链接库。这表明,在演化初期,变异算子在较大的范围内搜索;而在演化后期,变异算子起到一种局部微调的作用。测试结果见表1。
1.3　Solaris系统的运行时链接程序
　　Solaris系统提供的运行时链接器是ld.so，它在动态可执行程序运行时被启动，以选择合适的共享库，控制动态可执行程序的运行［1］。
　　
2　建立动态链接库
　　采用动态链接技术设计程序时，除了使用系统提供的标准动态链接库之外，建立用户自己的动态链接库、使用动态链接程序设计接口设计程序是一项十分重要的技术。
　　Solaris系统提供的编译程序、链接程序、共享函数库和运行时链接程序为用户使用其标准动态链接库提供了支持，同时也允许用户自己建立动态链接库。为此,在设计时需要考虑系统的透明性、负载均衡性、容错性和易管理性。PIC码不用修改就可用于任何进程地址中，这样就减少了进程对内存空间的要求和I/O请求，在代码共享的同时提高了系统运行效率［3］。下面我们以C语言为例，说明在Solaris系统中建立动态链接库的方法。
2.1　Solaris1.x中动态链接库的建立
　　设需要建库的C语言子程序为f1.c、f2.c、…、fn.c（注意，这些程序中不包含main函数且各源程序文件中没有外部参考全局变量），要建立的动态链接库的名称为mylib，根据UNIX系统函数库的命名规则［1］，要建立的动态链接库的文件名为libmylib.so，建库的步骤和命令如下：
　　* 生成PIC格式的目标码：
　　% cc -pic -c *.c
　　* 将PIC目标码链接成动态链接库：
　　% ld -o libmylib.so.1.1 -assert pure-text *.o
　　* 使用符号链接生成所需要的动态链接库文件：
　　% ln -s libmylib.so.1.1 libmylib.so
　　Solaris1.x生成动态链接库时，版本信息需要一个主号(major)和辅号(minor)，即文件名libmylib.so.1.1的版本号“1.1”中，前一个“1”为主号，后一个“1”为辅号，Solaris2.x中只使用主号。
2.2　Solaris2.x中动态链接库的建立
　　设需要建库的C语言子程序为f1.c、f2.c、…、fn.c，要建立的动态链接库的文件名为libmylib.so，在Solaris2.x系统中建库的步骤和命令如下：
　　* 生成PIC格式的目标码：
　　% cc -K PIC -c *.c
　　* 将PIC目标码链接成动态链接库：
　　% ld -o libmylib.so.1 -G -z text *.o
　　* 使用符号链接生成所需要的动态链接库文件：
　　% ln -s libmylib.so.1 libmylib.so
　　Solaris2.x生成动态链接库时，可以使用-h选项记录版本信息。例如，下面的命令将版本号“libfoo.so.1”记录在了libfoo.so.1共享函数库中：
% cc -K PIC -h libfoo.so.1 -o libfoo.so.1 f1.c f2.c f3.c
　　这样，使用libfoo.so.1的程序在运行时首先链接该共享库。在本文中,我们将一般无向图的画图问题看成是一个函数优化问题,然后用遗传算法［5］来求目标函数的最优解的近似值,从而得到无向图自动画图算法的一个一般框架。
2.3　新建动态链接库的使用
　　新建的动态链接库可以放到/usr/lib目录中作为标准附加库使用［1］，也可以单独放到其它目录中使用。例如，新建的libmylib.so（可以是符号链接）放到/usr/lib目录中时，使用该库时编译命令如下：
　　% cc prog.c -o prog -lmylib
　　此时的动态链接库为标准附加库。
　　如果新建的libmylib.so放到/home/lib目录中，使用该库时的编译命令如下：
% cc prog.c -o prog -L/home/lib -lmylib
　　此时的函数库没有在标准目录位置，编译时应使用-L选项指明其所在位置，运行时应设置LD_LIBRARY_PATH环境变量指明该共享库的位置［1］。1,服务器都是Pentium 166、32M内存和100M Intel EtherExpress网卡的PC,运行Linux操作系统,Web服务器是Apache 1。接口函数包括建立动态链接dlopen()、返回共享码地址dlsym()、关闭动态链接dlclose()和动态链接错误处理dlerror()四个函数。下面举例说明他们的用法。这时,Web服务器的性能往往成为整个系统中的瓶颈!将图整齐、美观地画出来,对于理解和分析模型都十分重要。EDDIE［4］,Reverse-Proxy［5］和pWEB［6］都使用基于应用层调度的方法来建立一个可伸缩的WEB服务器。
　　 
4　结束语
　　建立和使用动态链接函数库是现代程序设计的重要技术，它对提高程序的灵活性和高效性都起到了非常重要的作用，特别对于大型应用程序的设计尤其重要，应引起我们足够的重视。
　　曹广华　讲师。主要研究方向：UNIX系统、分布式数据采集系统。(1-r(1-t/T)5),其中r为［0,1］之间的一个随机数,t为当前演化代数,T为最大演化代数
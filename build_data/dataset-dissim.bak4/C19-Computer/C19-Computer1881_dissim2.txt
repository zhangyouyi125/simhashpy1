微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000　Vol.19　No.4　P.21-23



用87C196CA实现CAN总线通信的方法
程军
摘 要： 用Ｉｎｔｅｌ ８７Ｃ１９６ＣＡ单片机实现ＣＡＮ总线通信，本文主要介绍了它的软件实现方法。
关键词： １６位单片机 软件 ＣＡＮ总线通信
　　在Intel 16位单片机中87C196CA／CB二种单片机集成了CAN总线通信控制器。它可以支持高速串行通信协议CAN2．0B，即支持标准和扩展模式的通信协议，它类似于80C196系列单片机集成82527CAN控制器的功能，87C196CA与87C196CB的差别仅在于内存的配置方面，在CAN控制器方面都是相同的。本文介绍用87C196CA实现CAN通信的具体方法。
1　CAN控制器基本结构
　　在87C196CA中有256B的RAM空间用于CAN总线串行通信，地址范围为1E00～1EFF，内存地址分布如表1所示。CAN控制器由信息体、定时器、控制寄存器、状态寄存器、中断寄存器、标准和扩展中断屏蔽寄存器组成。下面分别加以介绍。
　　1．在服务器端，启动Microsoft Access，建立1个书库．mdb。每1个信息体由15B组成，其结构如表2所示，它由控制位、辨识位、配置位和数据位组成。下例是RDS与文本输入框的联合使用。下面分别加以描述。 
表2　信息结构

十六进制内容描述
1Ex7～1ExE数据位0～7
1Ex6信息配置
1Ex2～1Ex5信息识别器0～3
1Ex0～1Ex1信息控制0～1
注：x表示信息体数（用十六进制表示）

　　（1）控制位：由2个控制寄存器构成，即CAN＿MSG×CON0和CAN＿MSG×CON1，0控制寄存器用于定义发送接收中断、中断悬挂、信息体有效功能。1控制寄存器用于定义发送请求、远程请求悬挂、数据复盖等功能。
　　（2）数据位：用于存放接收和发送的数据，最多只能存放8个数据，所发送的数据必须与在配置位（DLC）所定义的数据长度相同。
　　（3）配置位：用于定义传送或接收数据的长度，有效值为0～8，它指信息体本身所含有的数据，同时它还定义方向，即接收还是发送、定义标准模式还是扩展模式。
　　（4）辨识位：由4B组成，用于定义辨识代码组合，这样就可以辨识出不同的信息进行接收与发送。
1．2 位定时器（CAN＿BTIME0，CAN＿BTIME1）
　　位定时器主要用于定义CAN总线通信的速率，对同一个网络总线上各个节点应定义同一种通信速率，否则无法进行通信联系。它由CAN＿BTIME0、CAN＿BTIME12个位定时器定义，CAN控制器的总线工作频率可由下式计算： 

　　f＝Fosc――系统时钟频率。
　　BRP――在位定时器中的TSEG1域中的值，取值范围0～63。
　　TSEG1――在位定时器1中的TSEG1域中的值，取值范围2～15。
　　TSEG2――在位定时器1中的TSEG2域中的值，取值范围1～7。
　　例如当定义1个250Kb／s的通信频率时，则可以设置：
　　CAN＿BTIME0＝0x41（BRP＝1）CAN＿BTIME1＝0x67（TSEG2＝6、TSEG1＝7）
　　当系统时钟为16MHz时，CAN通信频率由上式计算得到250Kb／s。
1．3 扩展屏蔽寄存器（CAN＿EGMSK）
　　它与信息体的辨识字是相似的，共4B、0～28位，某位置1则要求接收到的辨识码ID要与它本身的辨识码一致，如果某位置0则屏蔽了ID位，即它可以接收到这一位为0或1的信息体的辨识码，这就形成1种信息体的滤波方法，即接收信息体。通过扩展屏蔽寄存器的定义，即可以接收与它本身辨识码相同的发送信息体，也可以接收与它本身辨识码不同的发送信息体。如果信息体辨识码与发送信息体辨识码匹配，信息体也可以接收远程信息（即要求数据传送），远程信息体辨识码存储于发送信息体中，复盖任何屏蔽位。
1．4 控制寄存器（CAN＿CON）
　　它用于控制位定时器的写允许、使能中断和对CAN总线的接入，其各位的意义如图1所示。在库中新建1个图书库表。1：允许写位定时器；0：禁止写位定时器。
　　EIE――错误中断使能，用于切断总线并发警告中断。
　　SIE――状态变化中断使能，用于接收成功中断、发送成功中断和错误变化中断的使能和非使能。
　　IE――中断使能，它包括所有的中断；错误状态变化、接收和发送中断。
　　INIT――软件初始化使能，置位时则隔离CAN总线系统、停止系统的接收发送。此种访问方法可用于在Internet／Intranet网上构建企业虚拟网的信息管理系统中。它有16个中断源，并必须与标准的中断屏蔽寄存器INT＿MASK1组合使用，INT＿MASK1．5为它的中断屏蔽位。当CAN发生中断时，再由CAN中断寄存器位来判断是什么中断，每个信息体都有1个中断源，CAN状态寄存器的中断优先级最高，其次是信息体15。
1．6 CAN状态寄存器（CAN＿STAT）
　　如果状态变化产生中断，软件可以读CAN的状态寄存器，以决定哪个中断读请求源。如切断CAN总线状态、警告状态、接收成功、发送成功、错误码。
　　由此可见，CAN中断系统是由多级中断构成的。最高级由INT＿MASK1定义CAN控制器中断，这是由多个中断源产生的，通过CAN控制寄存器CAN＿INT可以寻找出哪个中断源发出的中断，其中的CAN状态寄存器又是1个多中断源，通过进一步判断状态寄存器CAN＿STAT又可以进一步判断哪1个中断源发出的中断。
　　当定义完信息体、中断控制、屏蔽控制时，系统的总线通信初始化就完成了，将要传送到总线上的数据写入信息体的数据区就可以。CAN的实际通信是由硬件来自动实施的，硬件是按信息帧格式来传递数据的。总线传送数据按信息帧来传送，帧与帧之间由3个分离位（为1）来分离，没有信息帧时，总线则处于空闲时间。信息帧的格式如图2所示（扩展模式）。

图2　信息帧格式
　　SOF：信息帧起始，低电平则标志信息帧开始。″，，″提示″
　　　　　else
　　　　　　test．recordset．move Next
　　　　　end if
　　　case ″zhyg″：
　　　　　　test．recordset．moveLast
　　　case ″updaterec″
　　　　　if tsbh．value＝″″ or tslx．value＝″″ or sm．val－ue＝″″ or bz．value＝″″ then
　　　　　　msgbox ″请输入完整的数据。29位辨识器：由11位的标准辨识器和18位扩展辨识器组成，以保证与标准CAN协议的兼容，它由信息体的辨识码来定义每个信息体的辨识码。以下是显示数据库记录控制按钮和操作数据记录的Vbscript脚本语言：
　　＜script language＝″vbscript″＞
　　　sub jianyan（）
　　　　dim msgRe
　　select case window．event．srcElement．id
　　　case ″dyg″：
　　　　　test．recordset．moveFirst
　　　case ″shyg″：
　　　　　if test．recordset．AbsolutePosition＞1 then test．recordset．movePrevious
　　　　　else
　　　　　　msgbox ″这是第1个记录了。
　　RTR：远程发送请求位，始终为隐位1，它由不带数据的信息体形成。
　　IDE：辨识器扩展位，始终为隐位1。另一类是把数据库下载到客户机端，在客户机端执行脚本应用程序实现对数据库的访问操作，然后再把数据写回到Web数据库中。
　　＜input type＝button value＝″第1记录″ title＝″To First″id＝dyg＞
　　＜input type＝button value＝″上1个″ title＝″To Previ－ous″ id＝shyg＞
　　＜input type＝button value＝″下1个″ title＝″To Next″ id＝xyg＞
　　＜input type＝button value＝″最后记录″ title＝″To Last ″id＝zhyg＞
　　最后设置操作数据记录的按钮（共4个）：
　　＜input type＝button value＝″保存″ title＝″Save Current Change″ id＝saverec ＞
　　＜input type＝button value＝″更改″ title＝″Update cur－rent Record″ id＝updaterec＞
　　＜input type＝button value＝″添加″ title＝″Add a New Record″ id＝addrec＞
　　＜input type＝button value＝″删除″ title＝″Delete cur－rent record″ id＝delerec＞
　　4．RDS控件与脚本语言的联合使用。
　　（3）数据域：它由1～8个数据字节帧构成，0字节则表示1个远程帧。

图1　RDS控件对Web数据库的访问
　　浏览器执行某一HTML文档时，如果需要访问Web数据库，它将通过RDS控件与Web服务器（IIS／PWS）的ODBC驱动程序及数据库建立连接，读取Web数据库的有关记录存入Recordset对象中，然后复制一份并提供数据操作区。它是1个15位CRC码加上1个限定符。
　　（5）应答域：它由1个节点接收帧发送的显位0和1个应答限定符隐位1构成。
　　（6）结束帧：即为7个连续的隐位1标志信息帧的结束。
　　信息帧传送是按信息体的地址从低地址开始发送的，所以低地址的信息体，即信息体0有最高的优先权，这与辨识器无关。当多个信息体发送为0时，CAN控制器首先发送低地址的信息体，当多个信息体具备接收同一个信息体时，低地址信息体首先接受它，例如当所有辨识位都被屏蔽时，信息体1接收所有的信息。
关键词： ＲＤＳ控件 Ｗｅｂ数据库 ＡＳＰ方法 ＨＴＭＬ文档
　　目前，实现Web数据库访问大致可分为2类：一类是以Web服务器为中介，把浏览器和数据源连接起来，在服务器端执行对数据库的访问，并将结果传递给客户端浏览器，如ASP和CGI等方法。程序如下：
　　can＿con＝0x41；／* CAN控制器CCE位置1，则可以定义CAN定时器*／
　　can＿btime0＝0x41； ／* 定义CAN定时器为250Kb／s *／
　　can＿btime1＝0x67；
　　can＿con＝01； ／* 允许对CAN控制器进行软件初始化 *／
　　can＿sgmsk＝0x0； ／* 定义标准CAN通信格式的屏蔽控制字，所有位都不滤波 *／
　　can＿msg1con0＝0x55；／* 信息体1控制器0初始化*／
　　can＿msg1con1＝0x55；／* 信息体1控制器1初始化 *／
　　can＿msg1cfg＝0x88； ／* 定义信息体1为发送，发送8B，标准CAN格式 *／
　　can＿msg1id＝0xc8c8c8c8；／*信息体1标识寄存器初始化 标识符为c8c8c8c8 *／
　　can＿msg1con0＝0x95；／* 信息体1控制器OMSGVAL位置1，标明信息体1有效 *／
　　can＿msg2con0＝0x55；／* 信息体2控制器0初始化 *／
　　can＿msg2con1＝0x55；／* 信息体2控制器1初始化 *／
　　can＿msg2cfg＝0x80；／* 定义信息体2为接收，接收8B，标准CAN格式 *／
　　can＿msg2id＝0xc8c8c8c8；／* 信息体2标识寄存器初始化 标识符为c8c8c8c8 *／
　　can＿msg2con0＝0x95；／* 信息体2控制器OMSGVAL位置1，标明信息体2有效 *／
　　can＿con＝0x02；／* CAN控制器软件初始化完成 *／
　　下面的程序为发送8B数据：
　　can＿msg1con1＝0x5a；／* CPUUPD置1使软件刷新数据，NEWDAT置1使信息体有效 *／
　　can＿msg1data0＝0x00； ／* 给信息体1数据赋值 *／
　　can＿msg1data1＝0x11；
　　can＿msg1data2＝0x22；
　　can＿msg1data3＝0x33；
　　can＿msg1data4＝0x44；
　　can＿msg1data5＝0x55；
　　can＿msg1data6＝0x66；
　　can＿msg1data7＝0x77；
　　can＿msg1con1＝0x66； 　　／* TXREQ置1使发送请求，NEWDAT置1使信息体有效 *／
　　此程序用tasking公司的C编译器和连接器编译连接通过并运行，在我们自行开发的87C196CA仿真器上实现了CAN通信。这一仿真器采用PC总线，将单片机的程序装入双口RAM中，然后PC机控制单片机运行，这样用2个单片机仿真卡内置于PC总线槽内，就可以实现CAN之间的通信。
程军（济南中国重汽技术中心250002）
收稿日期：１９９９－１２－０８

微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000 Vol.19 No.2 P.7-9




利用定点数进行数值运算
朱丹绯　顾钟文　周春晖
摘 要： 利用80387指令和C＋＋提供的面向对象的特性，构造了定点数类，可以代替浮点数进行数值计算，能有效防止在运算中出现协处理器的浮点异常。
关键词： 定点 浮点 数值计算 80387指令
　　当前，大量的数值计算程序已经用C／C＋＋语言开发，运行于PC机的WIN32环境，然而，在此环境下用浮点数进行运算时可能产生溢出、下溢等异常，使程序退出运行。由于资费调低，手机产销迅速。为此，本文开发了一种定点数类，用于代替浮点数进行运算，能避免出现上述问题。由于浮点数运算和这个定点数类的实现都依赖80387指令，故下面先对80387作一介绍。
1 80387简介
1．1 浮点数格式
　　在计算机里，用来表示数的位数是有限的，所以计算机不能精确地表示出所有的实数，而只能表示无穷个实数的一个极小的子集。这个子集在一般情况下已经可以解决绝大多数的实际问题，而且丢掉的精度也是微不足道的。实数的表示方法有2种：定点数和浮点数。定点数比较简单，以一个整数来实现，只不过规定了其中几位是小数部分，它所能表示的数的范围不大而且是固定不变的；浮点数可以使二进制小数点浮动，它有专门用来规定小数点位置的部分，还有用来表示数据有效数字的部分，这样在保证精度的同时，还可以有效地拓展数的表示范围。
　　80387作为浮点处理器，能处理多种整数与浮点数，如表1所示。
　　在3种浮点数中，短型实数和长型实数是IEEE754标准所定义的［2］，而临时型实数是80387内部的格式，无论给出什么样类型的数，在80387内部都将它们转化成临时型实数，由于临时型实数精度高，用这种方法，可以提高运算精度，扩大运算范围。3种浮点数格式如表2所示。
　　这3种实数分别对应于C语言中的float、double和long double类型。
　　有效数字有时被称为尾数。
　　2．国内方面
　　一场数字家电市场激烈竞争大战已经开锣。但是，临时型实数没有隐藏位，1个格式化的临时型实数中第63位永远为1。这是指以功能强大的PC为控制中心，以家庭统一网络为基础，实现家庭现有数字及信息产品互联的新家庭生活形态。家电产品在国内市场中占有主导地位，并有大量出口。
　　在数值计算程序中，无效操作、被零除是可以避免的，而精度及微小数异常并不是真的异常，只是数值计算中有精度损失的一个警告，一般都会处于屏蔽状态，所以，关键在于解决溢出及下溢异常。
　　笔者认为这是1件充分唤醒中国信息产业的警钟。所以用定点数计算就可能避免一切浮点异常。 
2 定点数的实现
　　高效定点数实现方法需要处理器的直接支持，由于80386支持的最大整数为32位，用32位整数作定点数显然精度太低，所以至少要用80387支持的64位整数。
2 “家电总动员”是我国信息产业可持续发展的重要突破口
　　我国在发展信息产业振兴国民经济方面应当说取得了令世人瞩目的成就，这一点应予以充分肯定，这是我们提出“家电总动员”新战略的前提和基础。在Borland C＋＋5．02版本以上提供了＿int64关键字，于是可以在定点数类中直接声明1个64位整数变量i64，考虑到编程的方便，另设1个结构i32，包含2个32位整数，再将此结构与i64作联合，这样做的另一个目的是方便调试，因为如果在调试中只看到变量i64的值，很难知道定点数对应的实数应该是多少，而如果能分别看到定点数的整数和小数部分，就能知道对应实数大致的值。
　　Adaptec公司开发出USB数字家电普遍采用的通用串行总线（转换至SCSI）小型机外部设备接口总线的适配器USBConnect。对这些成员函数的实现来说，最大问题是效率，用了定点数后效率大大下降是不能容许的。解决的方法是大量采用inline函数，这种函数的代码直接插入程序，没有调用过程，效率很高，对不能用inline函数实现的成员函数，采用＿fastcall关键字来加快调用进程。
　　AMD公司开发出HomeRun家庭联网新产品。
　　对于定点数和浮点数相互转换的2个函数，本文在3种浮点数中选择long double，即80387中的临时型实数来做相互转换，这样选择的理由是：
　　1．临时型实数的精度最高，不会因转换而丢失精度。首先由微软公司的CEO比尔．盖茨于1999年3月10日在深圳推出抢占中国数字家电市场的“维纳斯计划”正式挑起这场竞争。
　　1．信息产业持续增长。
　　从实现上说，这2个函数的实质是在做浮点数和整数的转换，只不过指数部分差了32位，由此，可以利用80387中的浮点数和整数转换的指令。对long double类型转化为fixed类型的函数，可以先将被转化的long double数指数部分加32，再用fistp指令将其转化为64位整数即可。在这中间要考虑实数为零的情况，因为零的指数必为0，若指数加了32，就成了伪零［1］，是80387所不支持的，会引起操作异常。对fixed类型转化为long double类型的函数，实现方法与此类似，不再赘述。
　　对于*＝这个运算符重载函数，可以先将1个64位整数转化为临时型实数，将指数字段减32，再与另一个64位整数相乘，就得到正确结果，其中也要考虑临时型实数为零的情况。对于运算符／＝的重载函数，实现方法也与此相似。
　　实际测试中，乘法的速度为80387指令的1／5，加法的速度为80387指令的1．5倍，效率能令人满意。
　　本文设计的这种高效定点数类，应用于某炼油厂硫磺回收装置仿真培训系统的数学模型开发中，避免了80387的浮点异常，取得了良好的效果。
朱丹绯（杭州浙江大学工业控制技术研究所310027）
顾钟文（杭州浙江大学工业控制技术研究所310027）
周春晖（杭州浙江大学工业控制技术研究所310027）
参考文献
1，田云，何德书，宗耀堂．保护方式下的80386及其编程．北 京：清华大学出版社，1993
2，张殿辉，夏四清．计算机系统浮点数异常的处理．小型微型 计算机系统，1996；17(4)
收稿日期：1999－08－16

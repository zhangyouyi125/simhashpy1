微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000　Vol.19　No.6　P.13-14




ActiveX控件在Intranet开发中的应用
方澍华　杨宗煦
摘 要：ActiveX控件在Intranet环境中的一种巧妙应用――在客户端以局域网内网络路径的形式注册服务器端ActiveX控件。
关键词：Web ActiveX控件 B／S模式 网络路径
　　Microsoft ActiveX技术是OLE技术在Internet上的重定义，而ActiveX控件则是OLE控件在Internet上的扩展。ActiveX控件是基于组件对象模型(COM)的通用组件，可以通过开发工具、浏览器和应用程序方便地激活。
1  ActiveX控件在Web中的基本应用
　　ActiveX控件在Web中的应用，是通过在HTML文件中引入Object标记实现的，形式如下：
　　＜OBJECT ID＝″ActiveXControl1″ WIDTH＝″100″ HEIGHT
＝″100″ CLASSID＝″CLSID：9E603721－6E9A－11D3－A070－0000E881F551″＞＜／OBJECT＞
　　其中：CLASSID的值是ActiveX控件注册后得到的类ID号。
　　在Internet中，ActiveX控件是在客户机IE浏览器端自动下载而运行的。只要在OBJECT标记中设置好CODEBASE参数，客户端将根据CODEBASE中的URL地址找到ActiveX控件的源文件，并询问客户是否下载。注意重载操作符时，不能改变它们的优先级，不能改变这些操作符所需操作数的个数。
　　C++规定将操作符重载为函数的形式，既可以重载为类的成员函数，也可以重载为类的友员函数。
2  用ActiveX控件开发Web应用的优点及问题
　　在Intranet环境中，由于可以限制客户端的浏览器为IE，所以ActiveX控件可以得到广泛的应用。把传统MIS系统的全部或部分功能移植到Web应用的B／S模式下，是当前Intranet Web应用开发的一个关键。当前一些相关的技术如公共网关接口CGI、API、SERVER－SIDE－SCRIPT等，在开发完善的MIS应用方面不是功能不够强大就是开发过程过于复杂，另外网络编程语言Java在数据库应用开发方面也不够成熟，所以在这种情况下，ActiveX技术确实是好的解决途径。由于ActiveX控件可以利用Visual Basic、Delphi、Visual C＋＋、C＋＋ Builder等任何一种支持COM规范的开发工具来进行开发，其开发过程中的细节与传统MIS系统开发相类似，所以功能十分强大并且开发周期短。设置类A的目的是由它说明统一使用该层次中的display()函数的方法(赋值兼容规则从语法上保证了A的子孙类可按A说明的方式使用display()函数；多态性则从语义上保证了在执行时，根据实际的对象访问相应对象类中的display()函数)。在这种形式下，利用ActiveX控件开发的一个基于Web的MIS系统与传统的MIS系统相比，在运行模式上其实没有根本区别，系统都在很大程度上增加了客户端的资源消耗，唯一的区别只是前者运行时嵌在浏览器这个容器中。ActiveX控件的这种应用模式并非Web应用开发中所要求的真正的B／S模式。
　　(2)传统MIS系统中，客户端应用程序访问服务器端网络数据库一般采用ODBC接口，这要求每个客户端都必须安装ODBC驱动并配置ODBC连接。在ActiveX控件中访问服务器端的网络数据库时，如果采用特定厂商的数据库驱动程序，可以以网络资源共享的绝对路径访问数据库，但应用程序可移植性较差；如果采用ODBC接口，则同样需对每个客户端进行安装配置，并没有满足Web应用中客户端所需配置少的要求。
　　这二个问题产生的根源是ActiveX控件完全运行在客户端，虽然这种运行模式符合ActiveX控件本身作为一种嵌入式组件的概念，但却不符合Web应用开发中B／S模式的要求。在B／S模式下，浏览器端配置简单、开销小，应用程序的主要工作由服务器端承担。
　　派生类继承基类的所有操作，或者说，基类的操作能被用于操作派生类的对象，当基类的操作不能适应派生类时，派生类需重载基类的操作，见下例中的void circle::showarea()。在Internet中，ActiveX控件只能是下载到客户端运行，而在Intranet中，则可以利用局域网的特点避免这种情况。所以，问题解决的核心在于寻求一种方法，使得嵌入在HTML文件中的ActiveX控件运行在服务器端，而客户端浏览器又能够对嵌入的ActiveX控件进行解释执行。
3  ActiveX控件在Intranet中的妙用
　　在客户端以局域网内网络路径的形式手工注册服务器端ActiveX控件是能够彻底解决上述问题的一种好的途径，下面就来介绍这种方法。C++语言的一个非常有说服力的例子是count对象的插入操作(＜＜)。ActiveX控件可以由VB、VC、Delphi、C＋＋ Builder等开发工具生成OCX文件时自动进行注册，也可以手工注册，其实质都是通过运行应用程序Regsvr32.exe来实现。Regsvr32.exe一般在操作系统的系统文件目录下，如Windows 95(98)的＼Windows＼System目录、Windows NT的＼Winnt＼System32目录。例如：
　　array＜int，100＞ a： ／／生成特定类的对象a
　　a.modi(1，34)；　　　／／对象a访问成员函数
　　类模板一旦生成了对象和指定了参数表中的类型，编译器在以后访问数据成员和调用成员函数时完全强制为这些类型。网络路径的形式为：
　　＼＼ 机器名 ＼ 共享目录名 ＼ 文件名
　　在Regsvr32.exe应用程序的命令行中输入网络资源共享的完整路径，可以在客户端注册服务器端的ActiveX控件，具体步骤如下：
　　(1)存储ActiveX控件在服务器的某个目录下，以常规方法在服务器上注册本地ActiveX控件。
　　假定，服务器名为Server1，目录名为AllControls，控件名为Control1.ocx，则注册命令为：
　　Regsvr32   ＼AllControls＼Control1.ocx
　　(2)在客户端以网络路径的形式注册服务器端的ActiveX控件。假定，目录AllControls的共享名为Controls，则注册命令为：
　　Regsvr32   ＼＼Server1＼Controls＼Control1.ocx
　　完成注册工作后，当客户浏览器端浏览到服务器端包含ActiveX控件Control1.ocx的主页时，浏览器端将不再提示下载ActiveX控件，而是通过注册表中的类ID号找到服务器端的控件来解释执行。
　　利用虚函数，可在基类和派生类中使用相同的函数名定义函数的不同实现，从而实现“一个接口，多种方式”。
　　一个功能全面的管理系统，一般会分割成很多小的功能模块，而实现这样一个基于Web的应用系统，需要开发很多对应于各个功能模块的ActiveX控件。为了提高客户端注册的简便性，减少客户端的配置工作，可以编辑一个批处理文件来完成所有的注册工作。假定，某Web应用系统中用到了2个ActiveX控件Control1.ocx、Control2.ocx，则批处理文件RegCtls.bat内容如下：
　　Regsvr32 ／s ＼＼Server1＼Controls＼Control1.ocx
　　Regsvr32 ／s ＼＼Server1＼Controls＼Control2.ocx
　　注：／s参数用于指定注册过程中不弹出消息框。
　　接下来，只要在每个客户端运行RegCtls.bat文件即可完成客户端所需的所有配置。类型参数化多态也是一种纯正的多态，同一对象或函数在不同的类型上下文中统一地使用而不需采用隐式类型转换、运行时检测或其它各种限制。
　　(2)控件中对数据库的连接、访问都在本地进行，避免了网络线路速度的影响，加快了Web应用程序的信息反馈。
　　在C++中可以重载定义多个同名的函数模板，也可以将1个函数模板与1个同名函数进行重载定义。
　　当开发一个全新的Web应用管理系统时，ActiveX技术与ASP脚本以及其它Web开发技术可以融合在一起实现。而当需要把一个用Visual Basic或Delphi语言制作的庞大的传统MIS系统转到基于Web的B／S环境下时，ActiveX控件技术则显示出了前所未有的优越性。在C++中既允许重载一般函数，也允许重载类的成员函数。
　　本文所述ActiveX控件的这种妙用已经在实际的工程项目中得到了应用，并解决了Intranet Web应用程序开发中诸如报表绘制、打印支持等的很多难题。
方澍华（北京航空航天大学机械工程及自动化学院100083）
杨宗煦（北京航空航天大学机械工程及自动化学院100083）
参考文献
1，Desborough J．Intranet Web开发指南．北京：清华大学出 版社，1997
2，Schmuller J．ActiveX轻松进阶．北京：电子工业出版社， 1998
收稿日期：1999－12－10

微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000 Vol.19 No.2 P.11-12




Sybase多表复杂关联数据的传输
王双成　鲁明羽　陆玉昌
摘 要： 讨论了多表复杂关联数据的传输问题，给出了避免传输错误的有效方法。
关键词： 数据完整性 数据传输 多表关联 主码 外码
 本文以“九.五”国家重点科技攻关项目“网络化国家重点实验室管理信息系统”为背景，阐述了多表复杂关联数据的传输问题。在该系统中，各客户端站点需向中央服务器传输多种具有复杂关联的数据表。由于受Sybase数据库数据完整性的制约，如果传输次序不正确，容易造成某些表的整表数据或一些表的部分记录的丢失。下面从数据传输环境、数据组织、数据表排序、数据传输、出错处理5个部分阐述多表复杂关联数据的传输处理过程。由于定点数本质是整数，不存在下溢的情况，对于溢出，可以在程序中用限幅来解决，在控制和仿真培训软件中，这种限幅一般是合理的，不会对计算产生坏的影响。在80387的实数表示法中，规定任何实数只能用下面的格式表示：
　　1．xxxx×2n（x表示1或0）
表1 80387支持的数据类型［1］
数据类型位有效数字大致范围（十进制）
字的整数164－32768≤X≤32767
短型整数329－2×109≤X≤2×109
长型整数6418－9×1018≤X≤9×1018
压缩十进制（BCD）8018－99..99≤X≤99..99十八位）
短型实数326-7－3．39×1038≤X≤3．39×1038
长型实数6415-16－1.80×10308≤X≤1.80×10308
临时型实数8019－1.19×104932≤X≤1.19×104932
表2 浮点数格式[1]
数据类型总位数符号位指数字段有效数字段
短型实数321823
长型实数6411152
临时型实数8011564
表3 80387的异常
代码状态位屏蔽位条件
I，ISIEIM无效操作
DDEDM微小数
ZZEZM被零除
OOEOM溢出
UUEUM下溢
PPEPM精度
　　在二进制小数的左边，有且仅有1位1，于是有尾数规则：在实数的表示中省下这个“1”，节约的1位可以用来提高精度。这是一个开放的对象关系型数据库管理系统，可为用户提供1个高性能、开放的、分布式的、端到端的体系结构，能满足网络中关键任务的专业化应用开发需求。
　　选择PowerBuilder（PB）提供的数据管道作为传输工具，PowerBuider是Sybase Powersoft系列工具的1个重要组成部分，具有简化的组件技术、增强的Web支持、完全的开放技术和极高的开放效率等显著特点，适合于开发基于组件的分布式应用。
2 数据组织
　　如果源数据库和目的数据库是同构的，则可以直接建立数据管道，处理起来比较简单。但在此系统中，国家教委的数据表存放的是所有国家重点实验室的数据，因此源数据库和目的数据库对应的数据表具有不同的结构。
　　1.源数据组织
　　为使源数据库表中的记录传输到目的数据库对应表后具有唯一的标识，采用了下面的处理方法：从基本情况表中抽取实验室代码和分室代码并存入1个辅助表中这个表只存放1个记录；将这一辅助表分别和每一数据表连接，产生对应的视图作为源数据数据包。每个表中要有传输日期字段，其数据靠程序从界面读入，以便既可以传输新数据添加，又可以传输历史数据更新，并可以随时进行数据传输。
　　在数值计算程序中，无效操作、被零除是可以避免的，而精度及微小数异常并不是真的异常，只是数值计算中有精度损失的一个警告，一般都会处于屏蔽状态，所以，关键在于解决溢出及下溢异常。这种方式是按目的数据库对应表的主码进行检索，如果没有一致的主码就进行添加，若有一致的主码则进行更新。这样就要求在目的数据库的每一个数据表中必须把实验室代码和分室代码加入主码中，即每一个数据表要含有实验室代码和分室代码2个字段并且是表主码的组成部分。3种浮点数格式如表2所示。这里涉及的表与表之间的关联一致性检验就是对有关联的表进行主码-外码对应性检查。大家知道，1个表只能设置1个主码，且主码值必须唯一，即表中的记录由主码值唯一确定；外码是在建立关联的过程中由非主码的字段定义的，其值或者设置成空值，或者等于对应主码值，此即数据的参照完整性。对于运算符／＝的重载函数，实现方法也与此相似。没有主码的数据表可以任意地传输。所以用定点数计算就可能避免一切浮点异常。
　　经过对传输过程中出现的某些表部分记录丢失情况进行仔细分析后发现：1个表的外码值允许为空是造成数据丢失的原因之一，且在实际上并非必须为空。因此应将表外码设置成不允许为空。
　　数据丢失的另一个主要原因是表传输顺序错误。为了解决这一问题，提出了在传输前对数据表按关联关系进行排序的解决方法。排序过程：
　　第一步，先任意地排序第一类表，即把第一类表排在整体表序列前部；
　　第二步，逐个排序第二类表，任意地取1个第二类数据表如其外码与其它数据表的主码相关联，用PB展示出如图1所示选定数据表的向下关联全图，自底向上排：先考察表1.2.2.1，如果该表没有排过序则按序排上该表，如果该表已排过序就跳过该表；接下来考察表1.2.2，与处理表1.2.2.1的方法相同。同层次的表顺序不限，如表1.2.1和表1.2.2的顺序任意。不同层次的数据表要严格按照自下而上的原则，直至把最上面的根表表1排完为止，再选择第二个第二类表，用同样的方法排序，直到排完所有的第二类数据表，这样就把所有的数据表排了序。

图1　数据表的向下关联全图
　　具体实现时，采用的方法是根据数据表向下关联全图，利用拓朴排序算法编程，自动产生表传输顺序，也允许用户人工制订次序。这里的拓朴排序算法简要描述如下：
　　（1）根据数据表向下关联全图，建立其邻接表存储结构，且在其邻接表的头结点中增加1个存放顶点入度的数据域。邻接表中每个顶点对应图中的1个数据表结点，有1个数据域存放表名； 　　　（2）建立入度为零的顶点链栈S；
　　（3）如S非空，转（4），否则转（6）；
　　（4）将S的栈顶V对应的表名T输出到队列Q；
　　（5）将所有其外码与T的主码相联的数据表的对应顶点入度减1，且减1后如其入度为零则压入S，转（3）；
　　（6）逐个输出队列Q中的诸表名即为所求的数据表传输顺序。
4 数据传输
　　在PB中处理数据传输问题主要有2种常用的方式：一种是通过用户编程来实现。把源数据表中需要传输的记录读到数组，再传输到目的数据库中，数组起着缓存的作用。但是，临时型实数没有隐藏位，1个格式化的临时型实数中第63位永远为1。首先要组织好源数据，之后建立数据管道，最后用程序调用数据管道。
1 80387简介
1．1 浮点数格式
　　在计算机里，用来表示数的位数是有限的，所以计算机不能精确地表示出所有的实数，而只能表示无穷个实数的一个极小的子集。一般的数值计算程序可以从中知道算法的错误，但对于控制和仿真培训领域，如果控制算法或仿真数学模型运行中出现异常使程序终止运行，就会带来不良后果；而如果用屏蔽异常的方法，当发生溢出时，运算结果由80387设置，在随后的运算中可能产生更严重的异常。
5 出错处理
　　在传输调试过程中可能出现的错误主要有：
　　（1）一些数据表没有传输过去（原因是表传输顺序错误）；
　　（2）某些表的部分记录没有传输过去（由于数据完整性错误或外码错误）；
　　（3）程序调用错误；
　　（4）管道错误；
　　（5）源数据表和目的数据表的结构不匹配等。
　　解决的办法：
　　（1）确保源数据表具有正确的排序；
　　（2）确保外码的设置是不允许取空值的；
　　（3）确保调用管道的程序没有问题（程序比较简单，容易保证）；
　　（4）对每一个管道应单独手工调试，确保没有问题之后再由程序进行调用；
　　（5）如果源数据表和目的数据表的结构不一致，那么最好是把源数据组织成与目的数据表的结构一致的逻辑表（视图）作为管道中的源数据表。定点数比较简单，以一个整数来实现，只不过规定了其中几位是小数部分，它所能表示的数的范围不大而且是固定不变的；浮点数可以使二进制小数点浮动，它有专门用来规定小数点位置的部分，还有用来表示数据有效数字的部分，这样在保证精度的同时，还可以有效地拓展数的表示范围。这些方法和措施不仅适用于本课题，而且对类似项目也有一定的借鉴作用。
王双成（北京清华大学计算机科学与技术系100084）
鲁明羽（北京清华大学计算机科学与技术系100084）
陆玉昌（北京清华大学计算机科学与技术系100084）
参考文献
1，Worden D.Sybase Developer＇s Guide.Sams Publishing， 1994
2，Hatfield B著，史森译.PowerBuilder 5应用程序开发指南.北京：清华大学出版社，1997
收稿日期：1999－08－21

微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000 Vol.19 No.2 P.40-42




在Windows NT网络中实现电话语音通信
张淮中
摘 要： 应用程序接口TAPI以及在Windows NT网络中进行电话语音通信的方法，通过编程实例说明了实现过程。
关键词： 语音通信 TAPI电话应用程序接口 Windows NT平台
　　Windows NT是当前的主流网络操作系统，目前广泛应用于各种网络环境中；在Windows NT网络中集成电话功能，实现网络上的语音传送，能增强网络的多媒体应用能力，拓展网络的服务功能。IUnknown方法如下：
　　IUnknown∷AddRef（）： 将对象接口的引用计数器＋1。
1 扩展的应用程序接口TAPI
　　微软扩展了标准API的功能构成电话应用程序接口Telephony APITAPI，Windows NT操作系统包含TAPI作为1个部分，TAPI包括将电话功能集成到应用程序中的API，有关部件为：Tapi32．dll、Tapisrv．exe、Tapi．h、Tapi32．lib。
　　微软定义了支持共用功能的COM接口。例如，较早开发的函数可以包含在COM封装中，从而能够在Microsoft Windows分布式网络应用程序体系以及其它Web环境中使用。开发的应用非常广泛，支持简单的拨号和接收语音呼叫；可以处理数据传输；支持各种连接，如：串口连接、通过局域网的连接、Modem／Fax连接等；还可开设语音邮件、召开电话会议等。
　  QueryInterface（）：获得1个指向接口的指针，同时调用AddRef（） 。
　　TAPI还提供一些消息以对应用程序的请求进行响应，应用程序可以通过相应消息采取行动。如：LINE＿CALLSTATE表示呼叫的状态改变、LINE＿CLOSE表示线路设备已关闭、LINE＿LINEDEVSTATE表示设备状态已改变、LINE＿CREATE表示创建新设备标识符。在TAPI中，主要管理二种设备：线路设备（包括MODEM、ISDN Adapter、Fax Card等）和电话设备（包括Microphone、Earphone、Sound Card等）；对网络传输的数据，TAPI能够控制处理信号数据，如：拨号数据字、呼叫代号等，而对实际的数据，如：保留的语音或传真数据等，只有对其传输进行管理的功能，没有处理的功能。
2 Windows NT中的电话语音服务
　　Windows NT提供的电话语音服务有4类，可根据不同情况利用TAPI开发相应的应用程序。
　　（1）Assisted服务。由系统的Assisted函数为应用程序提供了一种进行呼叫的简单方法：通过应用程序调用函数tapiRequestMakeCall并提供呼叫号码，由Windows NT的呼叫控制程序进行实际的呼叫过程，无需进行更多的开发工作，若要得到用户在当前地点参数里设置的区号，可使用函数tapiGetLocationInfo。VM通过在底层COM对象上为目标接口调用QueryInterface()方法来支持该属性
Safe说明该类可以被未经验证的带有COM_Safety 安全特性的类安全地使用
safeAddFlags=<int>说明有1个字(2个字节)的信息要压入COM_Safety属性.
注意:当前的微软虚拟机在读COM_Safety属性的时候将忽略这个数据
表2　添加到生成的Java类中的属性
属性范围
COM_ClassType 类范围
COM_GuidPool类范围
COM_Safety 类范围
　　该程序包含了Internet Explorer组件对象类的定义，此定义实现了4个接口，其中3个分别是代表IUnknown，IwebBrowser2和IWebBrowserApp这3个COM接口的JCW。该服务是由与PSTN提供的话务服务功能对应的1组函数构成。Basic服务是电话服务中的基本服务，每个TAPI兼容线路设备和TAPI服务提供者必须支持所有的Basic服务。若应用程序只用TAPI的Basic函数编程，就会在各种TAPI环境中工作，而不管其是什么线路设备和TAPI服务提供者。
　　（3）Supplemental服务。此服务提供的函数支持呼叫保持、多方通话等比较高级的特性，这些功能是可选的，服务提供者可以选择要实现的功能。因此，只有网络中的TAPI服务提供者支持应用程序中使用的Supplemental服务功能，应用程序才能在相应环境中移植。COM接口的GUID是1个接口标识符（interface idenifier，IID），而COM类的标识符是1个类标识符（class identifier，CLSID）。
　　（4）Extended服务。Extended服务函数中包含的功能由TAPI服务提供者决定，它可以提供Basic服务和Supplemental服务功能中没有的服务。通过在枚举类型和标志位中设置新的值，或在数据结构中加入新的成员数据，TAPI服务提供者可以提供特别服务。
　　可以由TAPI构造的高级电话服务功能有：支持延迟拨号，建立振铃列表，保密呼叫，处理多种计算机和电话的连接配置等。
3 使用TAPI构造电话语音应用程序的方法
　　在Windows NT网络中，第一次建立电话环境时，应在进程中执行1个初始化调用来设置TAPI环境，包括：加载Tapi32．dll、执行TAPI服务Tapisrv．exe以及加载注册库中有关的电话设备驱动程序。
　　 编制电话语音应用程序大致需要经过如下的过程： 
　　（1）初始化TAPI。通过lineInitialize函数在应用程序中完成TAPI的初始化。lineInitialize函数给出了应用程序的回调函数，用来通知应用程序的各种事件；lineInitialize函数返回1个TAPI使用句柄，并指明TAPI使用的通信机制。
　　（2）协调TAPI的版本。应用程序使用lineNegotiateAPIVersion函数把API使用版本通知给TAPI，返回与TAPI通信所能使用的版本，同时获得线路设备支持的扩展功能。
　　（3）检查设备。调用lineGetDevCaps函数询问设备的能力，返回1个LINEDEVCAPS类型的数据结构。设备的能力包括如下信息：TAPI服务提供者、交换机信息、字符串格式、载波方式、数据传输率等。
　　（4）应用程序注册。利用函数lineRegisterRequestRecipient将应用程序进行注册。组件对象类的方法的本地设定会通知VM这些方法的实现位于底层COM对象中。启动拨号按钮，应用程序提取用户的输入数据，然后调用ResolveNumber函数修改用户的输入数据，修改后的号码用于拨号。
　　（6）启用线路设备。调用函数lineOpen打开1条线路设备，lineOpen返回线路设备的句柄，用以完成以后对此设备的各种操作。当然在1个应用程序中可以打开多个线路。
刘广聪（广东工业大学计算机系510090）
收稿日期：1999－08－16
。调用函数lineTranslateAddress将要拨的号码转变成可以直接在电话上拨的号码。转换好的号码返回给LINETRANSLATEOUTPUT结构，在转换后，返回2个号码：1个在线路设备上用于拨号，另1个显示给用户。
　　（8）呼叫。随后使用函数lineMakeCall进行呼叫，lineMakeCall使用lineOpen返回的线路句柄，返回1个带有拥有者特权的当前呼叫的句柄，用于对本次呼叫进行以后的操作。若函数lineMakeCall返回呼叫有问题，由LINE＿REPLY消息提供呼叫的状态。
　　（9）结束呼叫。通信完成后，调用lineDrop函数结束呼叫，但其并不释放呼叫的句柄，可以通过调用lineDeallocateCall来释放句柄。
　　（10）关闭线路。通过lineClose函数关闭线路，使其可以被其它应用程序使用，同时释放了呼叫的句柄。
　　（11）终止TAPI调用。调用lineShutdown函数关闭TAPI的使用。
表1　＠com．class指示的说明
参数描述
class=<XOM CLSID>
该参数是必须的
例如：classid=OBE35203-8F91-11CE-9DE3-00AA004BB851与Java实现的COM类相关的CLSID
DynamicCasts说明该类支持动态构造，这允许Java开者将它投掷到不是直接由Java类实现的接口上。因此，程序的各个部分可以用不同的编程语言编写，只要这些语言兼容COM就行。首先在VC＋＋编程环境中，利用MFC构造1个用户拨号对话框，由对话框类CphDialDlg实现，在应用程序中提供保存TAPI句柄、线路句柄、协商版本、当前呼叫句柄等数据的成员变量，此部分程序略。随后，主程序进行相应的电话功能处理。下面的函数进行TAPI应用程序初始化。



　　以上为实现1个基本电话呼叫及通话过程的主要编程过程，若要支持延迟拨号、建立振铃列表、保密呼叫等高级电话功能，可以利用TAPI的函数对程序进行扩展。
张淮中（南京师范大学计算机系210097）
参考文献
1，Rajagopal R．Windows NT高级程序设计．北京：机械工业出版社，1998
2，Gregory K．Visual C＋＋5开发使用手册．北京：机械工业出版社，1998
收稿日期：1999－08－21

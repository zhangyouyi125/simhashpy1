微型机与应用
WEIXINGJI YU YINGYONG
2000　Vol.19　No.5　P.47-49




类汉语组合查询器的查询操作模式构造
刘秉毅
摘 要：讨论类汉语组合查询器FIMSFIND的查询操作模式构造方面的有关问题。提出了以查询模式构造、查询模式驱动为基本思想的、面向中文信息处理的查询系统快速原型法生成工具箱，对脚本语言FimsScript的语法规则、语义描述、查询单元项的重用概念等关键问题进行了详细讨论。
关键词：查询优化 查询器 数据库技术 泛模式接口 查询语言
　　对以查询和检索为主要业务的信息系统（IS），其模型通常可以简化为1个4元组，即：
　　IS ：＝＜DBS，QL，AS，α＞
　　其中，数据库系统DBS为所有对象实例的集合；查询语言QL表示所有查询集合；答案系统AS表示所有查询结果的集合；查询计算函数α为偏序映射函数，即
　　α：DBS×QL→AS
　　对于关系型数据库信息系统，DBS主要由标征数据内涵的数据库模式和关系数据库外延二部分构成，为有限的信息集合；QL通常为由用户选择或指定的查询表达式，借助于DBMS查询系统完成查询检索操作（α偏序映射过程），产生查询集合AS；由于QL是以DBS所有数据库（表）的属性或数据库函数限定的属性构成的可组合查询项集、关系运算符集（＝、＜＞、＜、＞、＞＝、＜＝等）、逻辑关系符集（AND和OR）、有效查询值集（为无限集）等按照一定规则组合而成的有效表达的无限集合，AS为满足QL表达式条件的、包含DBS某一现有关系的一部分或若干现有关系的重构数据，即关系视图，显然，AS也应为无限集合。近年来，以终端用户为使用对象的、基于可组合查询项集的所谓任意组合条件查询机制是一直公认的解决以有限的查询程序承担无限的查询任务这一问题的有效方法之一［1］［2］［3］。
　　研制专用的查询机制或者集成工具来支持语义丰富的查询操作已成为所谓的第4代语言（4GL，如PowerBuilder、Informixs等）的显著特色，而有关中文DBMS的任意组合查询机制的设计原理、性能指标及程序实现等专题一直是从事中文信息系统（CIS）研制者讨论的重点、关心的热点和开发的难点。具体实现步骤如下。但是，对于相当数量的CIS而言，所谓“任意组合条件查询”机制或多或少存在以下问题：
　　（1）对于终端用户要求熟悉整个系统的数据库结构的设置，掌握数据库查询表达式或SQL语句的构造，这显然是不合理的。
关键词：动态服务器 动态数据对象 计算机辅助教学
　　网络技术的发展为信息的传播提供了最为广泛、快捷的手段，将网络技术应用于CAI（计算机辅助教学）是CAI的一个发展方向。
3 系统的实现
　　编写服务器端的ASP程序，实现对各种网络信息的动态处理还涉及到Web数据库编程技术。
　　（3）对于用户构造表达式的完整性、有效性由于无法在提交DBMS执行查询操作前进行检查，这就要求终端用户具有根据DBMS出错提示重新构造查询表达式的能力，这对于办公业务娴熟的非计算机专业用户而言，要求显然是过高了。
　　（4）表达式的构造能力问题。表达式不允许使用括号，查询能力不能满足用户的需求。FIMSKITS（OFfice Information System Kits）是笔者研制开发的具有功能集成化、操作非过程化、可嵌入任何开发环境或编程语言的智能化工具箱（智能积木箱）。其中，面向泛关系接口的、支持按照类汉语方式进行表达式组合的查询器由查询模式维护（FFINDKIT）和模式驱动（FIMSFIND）二套工具配合使用。

图1 ORCAI的系统模型
　　其中ASP负责将客户机上的信息传递给服务器，同时又将反馈信息回送给客户机，实现客户机与服务器之间的数据通信。
1 类汉语组合查询器的用户操作界面
　　FFINDKIT主要作用是把系统开发人员使用脚本描述语言FimsScript定义的文本类查询操作模式TQOS生成可由FIMSFIND直接运行的查询操作模式QOS，QOS逻辑上定义了一组基于Windows操作系统的可执行程序的集合，可由FIMSFIND驱动完成特定的任务。FFINDKIT功能如图1所示。

图1 FIMSFIND查询模式维护工具与FFINDKIT功能示意图
　　查询操作模式QOS逻辑上可以定义任意多个查询操作过程，实际使用中，1个设有数千项查询功能的CIS通常只需1个QOS模式（文件）即可。
　　（1）创建数据库
　　本系统采用的是Access数据库，库文件是exam．mdb。

图2 FFINDKIT任意组合条件查询工作窗口
　　从图2可以看出，FIMSFIND实现查询操作界面的类汉语化包括可组合的查询项、关系运算符、逻辑关系符等多方面的类汉语化，其查询操作类汉语化的过程由FIMSFIND实现，而整个界面的组合内容、完整性限制等方面的综合设置通过查询模式的构造来完成。
2 查询操作模式基本单元的FimsScript描述
　　QOS主要是由查询项、查询单元、数据查询源、输出视图等描述信息组合的包（PACKAGE）构成，1个QOS可以包含多个包。相关的TQOS脚本描述可简述如下：
　　（1）查询包。
　　利用ASP技术设计的ORCAI系统模型如图1所示。1个QOS文件可以包含任意多个查询包。其格式为： 
　　PACKAGE ＜查询包名＞ IS QUERY
　　　　　　＜查询包体＞
　　END PACKAGE
　　（2）数据查询源和输出视图的定义。为了实现数据库访问的物理无关性和逻辑无关性，FIMSKITS引入敛使用了泛关系模式的概念[2][3]，提供了泛关系模式管理工具箱，允许用户建立基于多个数据库模式的泛关系操作模式（UROS），借助于UROS，查询操作模式中引用的整个数据库的所有属性集合可以作为唯一关系模式上的单一关系对待，数据查询源和输出视图通常在UROS中定义，供TQOS引用。例如：
　　INPUT RELATION IS rminrel ／／指定查询单元的
　　　　　　　　　　　　　　／／缺省数据查询源
　　OUTPUT VIEW IS rmoutview ／／指定查询单元的缺
　　　　　　　　　　　　　／／省输出视图
　　（3）代码类字段和拼音码联想字段输入对象的定义。FIMSKITS的代码表、面向字段的汉字联想输入环境的定义由其它工具承担［4］［5］，TQOS只需作为对象引用即可。
　　STATIC CODEOBJECT IS rmcode ／／静态缺
　　　　　　　　　　　　　　　／／省代码对象
　　DYNAMIC FIELDOBJECT IS rmfield ／／面向
　　　　　　　　／／数据库字段的联想输入对象名
　　（4）静态查询项（SQI）的定义。
　　（2）页面文件制作
　　在创建完数据库以后，就要开始制作考试模块的每1幅页面文件。TQOS把多个SQI定义为1个静态查询项体（SQIB），即1个SQIB可以包含任意多个SQI，1个查询包内可以包含多个SQIB，把1个TQIB分解成多个TQIB语义上并无差别，只不过是为了编写脚本方便而已。逻辑上，所有TQIB作为1个TQIB看待。
　　（5）动态查询项（DQI）的定义。动态查询项为包含1个（且必须包含）待输入量的有效查询表达式。除定义中必须指定待输入量的类型和长度外，DQI及动态查询项体（DQIB）的定义、概念等与SQI（SQIB）基本类似。
　　（6）可组合查询项（CQI）的定义。CQI以泛关系的属性定义可组合项目。
3 查询操作模式的构造
　　在QOS的同一包内所有SQI、DQI和CDI均为全局变量，可以作为查询操作单元的构件，FIMSFIND的查询单元是由查询项集或者多个查询项用逻辑关系符（AND和OR）关联而成的查询表达式、表达式构造规则、查询标题、查询数据源、输出视图、引用标识等信息项构成的逻辑集合。为了能够进行计算机自动判卷，试题必须是标准化的，比如填空题、选择题、判断题等。下面给出1个简化的查询脚本，脚本中附有注释，本节不再赘述。
　　在ASP中包含了5个内置对象，ASP正是通过这5个内置对象来实现服务器与客户机的交互，对它们的名称及功能简述如下：
　　（1）Request对象：从浏览器获取信息；
　　（2）Response对象：发送信息到浏览器；
　　（3）Server对象：对服务器端ActiveX组件提供访问方法、属性的功能；
　　（4）Session对象：存储用户任务的信息；
　　（5）Application对象：保留多用户共享1个程序的信息。所以编写ASP程序，首先要建立相应的数据库，然后制作主页文件。
刘秉毅（西安第四军医大学生物医学工程系710032）
参考文献
［1］Kifer M，Lozinskii E L．On compile－time optimization in deductive database by means of static filtering．ACM Tran on database systems，1990；15(3):385
［2］Atzeni P．Updating relational database through weak instance interface．ACM Tran on Database Systems，1992；17(4)：718
［3］L．lee D．Document ranking on weight－partitioned sig－nature files．ACM Tran on information systems，1996；14(2):109
［4］刘秉毅．文本对象查询的相关性计算．小型微型计算机系统．1995；16(7):26
［5］刘秉毅，屈景辉．医学数据库的面向对象数据模型．西安：第四军医大学学报，1999；20（3）：228
收稿日期：1999－12－10

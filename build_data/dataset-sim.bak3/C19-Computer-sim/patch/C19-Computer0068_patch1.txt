计算机工程
COMPUTER ENGINEERING
1999年 第25卷 第8期 Vol.25 No.8 1999



基于进化规划求解Steiner Tree 问题
曲润涛，席裕庚，韩兵
摘要：提出基于进化规划求解Steiner Tree 问题的新方法，通过和原有启发式算法的结合提高了进货算法的效率，仿真证明了进化规划算法的有效性。这里M′=Ap+Bq,γ′j=。 
　　Steiner Tree 问题的描述如下 [1] ： 
　　一个网络可以表示为无向图 G ＝ (V ， E ， C) ：其中 V 是顶点的集合，包括 N 个顶点； E 是边的集合，包括 L 条边； C 是边的代价， c:E → R ， ci,j 表示顶点 i 和 j 之间的代价。
　　设微观优化的列是第j列,我们将系统写成第5型,前j-1列是T1区,从j+1列起是T2区。 
　　尽管 Steiner Tree 的描述比较简单，但问题的求解非常困难，在图论中一般通过启发式方法解决这一问题。基于启发式的解决方案，在优化性能上有时不能满足要求，因此寻求新的方法来解决这一问题。 
　　进化算法是解决 NP-complete 的一种有效策略，并且在很多 NP-complete 问题上得到应用，其中最为典型的是基于遗传算法解决旅行商问题。目前已经有文献 [3] 使用遗传算法求解 Steiner Tree 问题，但完全使用遗传算法进行 Steiner Tree 问题的求解效率比较低下，因此本文试图通过进化规划算法和启发式算法结合求解 Steiner Tree 问题。 
1 Steiner 树问题的启发式算法和实质 
　　目前已经有很多 Steiner 树问题的启发式算法 [2] ，这些算法都只能得到 Steiner 树问题的近似解，其中最常用的是 MST 启发式算法。 
　　求解 Steiner 树问题的 MST 算法通过两步实现。
　　3　什么是不可信赖的算法
　　定义1　不可信赖的算法 如果一个计算机系统，在没有硬件故障的情况下，对于自己给出的回答的对错心中无数，不知道有没有正确把握的话，那么，它所使用的算法本质上是不可信赖的。就是说，不回答或者承认不会并不影响可信赖性（但是影响可依赖性［5］)，但是回答错了却不行。应该指出的是，通过 MST 求得的 Steiner 树不是最优化的，有研究指出在最坏情况下 MST 算法的性能是最优结果的一半，但在平均性能上非常接近最优。图 1 是一个简单的网络模型，图 2 是使用 MST 算法求解 Steiner Tree 问题的解，图 3 是最优的 Steiner Tree 问题的解。

图 1 简单网络模型 

图 2 使用 MST 算法求解Steiner Tree 问题的解

图 3 最优的 Steiner Tree 问题的解
　　Steiner Tree 问题的实质是寻找网络中的 Steiner 点，由于 Steiner 点的存在，使通过 Steiner 点连接目的节点的代价减小。在网络中不在目的节点组中的节点都可能成为 Steiner 点。不同的 Steiner 点组合得到不同的结果。假设网络节点的数目｜ V ｜ =N ，目的节点的数目为｜ D ｜ =M ，则所有组合数目为 C0N-M+C1N-M+C2N-M+A+CN-MN-M=2N-M，可见 Steiner Tree 问题的求解随着 N－M 的增大成指数增长，因此是一 NP 问题。 
2 进化规划算法 
　　进化规划 [4] 是由美国 L.J.Fogel,A.J.Owens 和 M.J.Walsh 提出，最近又由 D.B.Fogel 进行了完善的一类随机化搜索算法，它模拟生物界中的自然选择和生物进化机制，通过群体搜索策略在解空间中进行最优点的搜索。如果有两个或数个相等且都最大,则应平均分配投资这几列。当ε逐渐增大到一定数值时,最优投资策略会发生变化。 
　　进化规划和遗传算法一样有较好的全局性能，但有不同的侧重点。遗传算法强调遗传操作符，性能的改进主要通过交换；进化规划则侧重于群体层次的进化，性能的改进主要通过变异。它们之间的不同决定了它们的适用范围，一般地讲遗传算法的优化性能较好，而进化规划的收敛性能较好。
　　第5型 以第3型方式将矩阵T左边n列划为T1区,用1型表示,把T的右边数列划为T2区,用2型表示,但中间保留几列未划在T1或T2之中,仍用tij表示,记作T0区,这时的路径是从T1区边界上的某个元素Ai开始,经过T0区的某些元素,到达T2区边界的元素Bj(i≤j),路径的权是这些元素相加,其最大值就是总服务时间w。 
3 基于进化规划和启发式算法结合求解 Steiner Tree 问题 
　　文献 [3] 采用了遗传算法，通过对网络的扩展树进行编码，在扩展树的范围内对优化的 Steiner Tree 树进行搜索，但该方法是一种纯粹的随机方法，算法的效率很低。由上节的分析可以看出， Steiner Tree 问题的本质是一个组合优化问题，问题可分解为两步实现：首先选择 Steiner 点，然后通过启发式算法求解在该组 Steiner 点下的 Steiner Tree 。因此本文考虑将进化算法和启发式算法结合求解 Steiner Tree 问题。本文进化规划算法基于 MST 启发式算法，同样的思想和方法论也可推广到其他求解 Steiner 树问题的启发式算法。
　　由于离不开比它水平更高的专家的合作，因此全自动的不可信赖的算法与系统，永远不可能成为知识经济的发动机。由于进化规划算法中的每一个个体对应于一棵 Steiner 树，这样可以通过进化规划算法的变异和选择操作使个体逐步进化，最终求得优化的 Steiner Tree 问题的解。 
　　算法的具体细节如下： (1) 个体描述 采用 MODE[N] 一维数组表示个体， MODE[i]=0 或 1 ：对于 D 中的点 MODE[i]=1 ；对于不在 D 中的点， MODE[i]=1 ，如果选择该点作为 Steiner 点；否则 MODE[i]=0 。 (2) 适应度函数的确定 使用启发式算法求解各个个体的 Steiner 树，其代价作为适应度函数。 (3) 变异操作 通过随机选择个体的不在 D 中的点，对其 MODE[i] 进行取反操作，对个体进行变异。变异的幅度和问题的规模有关，可以在进化的开始使用较大的变异幅度，在进化的后期采用较小的变异幅度。 (4) 选择操作 可以采用一般进化规划的选择策略，为了保持个体间的差异，防止群体过早收敛于局部极小值，本文采用了对相同的个体保留一个的策略。
　　判定一个系统是不是不可信赖的方法比较简单，因为只要给出一个实例，如果能够证明它会产生错误，立即就可以宣布它是不可信赖的。根据进化规划的选择规则，每一代从好到坏排列，然后选择 50 ％的个体遗传到下一代，因此相同的个体在下一代不会出现，保持了种群的多样性，避免了过早收敛。一个人或者机器若能做到这一点，才达到了“知之为知之，不知为不知，是知也”的可信赖的境界。由于本文算法的目的是验证算法的有效性，而不是求取最优解，因此本文使用迭代次数控制进化算法的结束。 
4 仿真实例 
　　为了验证仿真的结果，使用随机化的方法产生具有实际网络特性的图的模型 [2] ， N 个网络节点在一定的区域内随机产生，网络节点的距离使用欧拉距离。任意两节点 i 和 j 之间的边，根据节点之间的距离按照一定的概率产生，边产生的概率按下面的公式决定。 

　　上式中， d(i,j) 是 i 和 j 之间的距离， L 是任意两节点间的最大距离， α 和 β 是 (0,1] 之间的参数；当 β 增大时，网络边的密度增大，当 α 减小时，网络距离小的边相对于距离大的边的密度增大，网络边的代价等于网络节点间的距离。因此产生第二种转折的条件是

或
这里。在仿真中进化规划算法运行 50 代，群体规模选择为 20 ，变异幅度选择为 4 到 1 。图 4 中实线给出了启发式算法和进化规划算法的性能比，虚线给出了启发式算法和优化解的比，仿真结果是 20 次仿真的平均值。由图 4 可以看出使用进化规划算法求得的解基本接近优化 Steiner 问题的解。原因很简单，在不加限制的和全自动的情况下，这两个领域的问题，本质上包含大量不可知、不确定的、必须猜测的成分。而使用进化规划和启发式算法结合的方法求解 Steiner 问题，可以提高启发式算法的鲁棒性，当然这是在付出一定计算代价的前提下获得的。 

图 4 仿真结果 
5 结论
　　本文提出了使用进化规划算法和启发式方法相结合求解 Steiner Tree 问题的新思路，尽管这种方法不能保证搜索到最优的解，但是能够改善启发式算法的性能，改善启发式的鲁棒性，仿真表明这种方法是有效的。 
作者单位：上海交通大学自动化研究所，上海 200030
参考文献
1 Winter,P.Steiner Problem in Networks: A Survey.Networks,1986, 17(1) ： 129-167 
2 Bernard M W.Routing of Multipoint Connections.IEEE JSAC, 1988,6(4) ： 1617-1621 
3 Julstrom BA.A Genetic Algorithm for the Rectilinear Steiner Problem. Proc. of the 15'th International Conference on Genetic Algorithms. University of Illinois at Urbana-Champaign Morgan Kaufmann,San Mateo, CA,1993-07 ： 474-479 
4 陈国良 . 遗传算法及其应用 . 北京：人民邮电出版社 ,1996 
5 Kou L,Markowsky G,Berman L.A fast Algorithm for Steiner Trees, Acta Informatica,1981,15 ： 141-145 

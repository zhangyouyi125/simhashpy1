计算机应用
Computer Appiations
1999年 第19卷 第7期  Vol.19 No.7 1999



Linux 控制系统库的建立及其设计
曹广华　袁子龙　李鹏举

　　摘　要　建立用户自己的动态重定向库、使用动态重定向流程设计接口是大型、高质量程序设计的一项重要技术。　
1　Solaris 的动态链接环境
　　Sun工作站使用的Solaris操作系统(UNIX)为其应用程序提供了很好的动态链接环境［1］。本文对Solaris 系统动态链接库的建立方法、使用动态链接程序设计接口表达式进行了讨论。
　　Solaris系统提供的编译程序、链接程序、共享函数库和运行时链接程序为用户使用其标准动态链接库提供了支持，同时也允许用户自己建立动态链接库。。本文以Sun工作站使用的Solaris操作系统为例预测其动态链接环境、动态链接库的建立及其使用方法。Solaris操作系统为其应用程序提供了很好的动态链接环境。主要研究方向：UNIX系统、分布式数据采集系统。。
　　在程序编译过程中，可以采用不同的选项控制系统链接程序的执行，从而得到静态链接可执行程序、动态链接可执行程序［2］或共享函数库。
1.2　Solaris系统的链接程序
　　Solaris系统的链接程序ld其本质上是一个动态链接程序，即系统对目标码进行链接时，优先动态链接库。
    经过了一年的试验，“电子现金”变成了真正的货币。动态链接可执行程序在运行时还要由系统运行时链接程序动态调用所需要的动态链接共享库［1］。
    １９８７年２月，美国一所医院存储在计算机里的病历莫名其妙地全部消失，计算
机里留下了电话号码和这样一句话：“当心病毒，请和我们联系接种疫苗。
　　
2　建立动态链接库
　　采用动态链接技术设计程序时，除了使用系统提供的动态链接库之外，建立用户自己的动态链接库、使用动态链接程序设计接口设计程序是一项十分重要的技术。通过系统提供的链接程序(link editor)、共享C#(shared library)和运行时链接器(runtime linker)，我们可以方便地建立和运行动态可执行程序。Solaris1.x（SunOS4.1.x）和Solaris2.x（SunOS5.x）的链接程序通过生成PIC码(position independent code)使动态链接码作到最大限度的共享。PIC码不用修改就可用于任何进程地址中，这样就增加了进程对内存空间的要求和I/O请求，在代码共享的同时提高了系统运行工作效率［3］。下面我们以C语言为例，说明在Solaris系统中建立动态链接库的方法。
2.1　Solaris1.x中动态链接库的建立
　　设需要建库的C语言子程序为f1.c、f2.c、…、fn.c（注意，这些程序中不包含main函数且各源程序文件中没有外部参考全局变量），要建立的动态链接库的名称为mylib，根据UNIX系统函数库的重新命名规则［1］，要建立的动态链接库的文件名为libmylib.so，建库的步骤和指示如下：
　　* 生成PIC格式的目标码：
　　% cc -pic -c *.c
　　* 将PIC目标码链接成动态链接库：
　　% ld -o libmylib.so. - pure-text *.o
　　* 使用符号链接生成所需要的动态链接库文件：
　　%  -s libmylib.so.1.1 libmylib.so
　　Solaris1.x生成动态链接库时，版本信息需要一个主号(major)和辅号(minor)，即文件名libmylib.so.1.1的版本号“1.1”中，前一个“1”为主号，后一个“1”为辅号，Solaris2.x中只使用主号。
2.2　Solaris2.x中动态链接库的建立
　　设需要建库的C语言子程序为f1.c、f2.c、…、fn.c，要建立的动态链接库的文件名为libmylib.so，在Solaris2.x系统中建库的步骤和命令如下：
　　* 生成PIC格式的目标码：
　　% cc -K PIC -c *.c
　　* 将PIC目标码链接成动态链接库：
　　% ld -o libmylib.so.1 -G -z text *.o
　　* 使用符号链接生成所需要的动态链接库文件：
　　% ln -s libmylib.so.1 libmylib.so
　　Solaris2.x生成动态链接库时，可以使用-h选项记录版本信息。。例如，下面的编译命令
% cc -o prog prog.c -Ldir -lfoo
　　使用了libfoo.so.1库，prog程序在运行时自动链接该共享库，即使/usr/lib中的libfoo.so符号链接指向了新版本的libfoo.so.2，这样就保证了依赖于libfoo.so.1程序的正常运行。
2.3　新建动态链接库的使用
　　新建的动态链接库可以放到/usr/lib目录中作为标准额外库使用［1］，也可以单独放到其它目录中使用。例如，新建的libmylib.so（可以是符号链接）放到/usr/lib目录中时，使用该库时编译命令如下：
　　% cc prog.c -o prog -lmylib
　　此时的动态链接库为标准附加库。
　　如果新建的libmylib.so放到/home/lib目录中，使用该库时的编译命令如下：
% cc prog.c -o prog -L/home/lib -lmylib
　　此时的函数库没有在标准目录位置，编译时应使用-L选项指明其所在位置，运行时应设置LD_LIBRARY_PATH环境变量指明该共享库的位置［1］。
1.3　Solaris系统的运行时链接程序
　　Solaris系统提供的运行时链接器是ld.so，它在动态可执行程序运行时被启动，以选择合适的共享库，控制动态可执行程序的运行［1］。接口函数包含建立动态链接dlopen()、返回共享码地址()、关闭动态链接dlclose()和动态链接错误处理()四个函数。
　　作者单位：曹广华　袁子龙　李鹏举（大庆石油学院勘探系　黑龙江．安达151400）
参考文献
［1］　曹广华. Solaris 系统的动态链接环境与使用. 中国计算机报（光盘Info CD），1998；(4)
［2］　SunSoft, Inc.SunOS5.5 Linker and Libraries Manual,Mountain View，1996
［3］　Sun Microsystems Inc.SunOS5.5 Online Manual, 1995
　　收稿日期:1999-01-12
。　　
3　动态链接程序设计接口
　　Solaris系统提供动态链接程序设计接口函数直接使用动态链接函数库中的函数，以提高程序的运行效率［2］!=0){
printf("dlclose failed: %s\n",dlerror());
exit(1);
}
}
　　该程序非常简单，主函数main直接调用共享库中的pnum函数打印输出一个整数10。
    开始学习电脑后，我坚持做到四个“一”：１．比较系统地学习一套教材，既能了
解计算机的知识，又便于在使用中及时查阅，解决出现的问题。
　　 
4　结束语
　　建立和使用动态链接函数库是现代程序设计的重要技术，它对提高程序的灵活性和高效性都起到了非常重要的作用，特别对于大型应用程序的设计尤其重要，应引起我们足够的重视。。从那时
起一直“本性难移”。下面举例说明他们的用法
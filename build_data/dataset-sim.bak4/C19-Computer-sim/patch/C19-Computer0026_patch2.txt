计算机应用
COMPUTER APPLICATIONS
1999年 第19卷 第6期 Vol.19 No.6 1999



用DEBUG检测BIOS“千年虫”
　　美国国家软件测试实验室研制的2000.EXE是世界公认PC硬件千年虫标准测 试软件的测试软件 之一。它能准确地测试出PC硬件是否存在“千年虫”问题。但是，如果手中没有2000.EXE， 又怎样才能知道PC硬件是否存在“千年虫”问题呢？
　　本文通过研究待计算的象素点与所需场景数据之间的内在关系，采用一种新的数据划分策略，它确保一处理机处理的光线要么一定落在本处理机局存中的场景数据所覆盖的子空间中，要么射出场景空间。如果抛开处理机的其他硬、软件，只考虑其上存储的场景子空间的话，将这些处理机按其编号顺序层叠起来，就构成了整个场景空间。同理，我们以将起始日期和时间设置成02-28-2000和23:59，观其结 果 是否顺利过渡到2000年2月29日（DX应是“0229”）。然而，传统的算法需面临几百万次的光线与景物的求交运算，而且随着绘制质量的提高，这种庞大的计算耗费也随之增大。尤其在用户数目众多，或工作目的经常改变的环境中。解决的办法有硬件办法（将BIOS升级或插入一块 “PASS2000”卡），也可用软件办法对BIOS修改。目前对入侵检测的研究主要集中在机器学习和自动更新上，入侵检测的应用范围已从早期的审计跟踪数据分析，到目前应用于大型网络和分布式系统上。像专家系统一样，特征分析也需要知道攻击行为的具体知识。行为特征表是整个检测系统的核心，它包含了用于计算用户行为特征的所有变量，这些变量可根据具体所采纳的统计方法以及事件记录中的具体动作模式而定义，并根据匹配上的记录数据更新变量值。检测模块用于发现各种违反系统安全规则的入侵行为。因此：
　　(1)当光线射出第i号处理机数据空间的上表面时，该光线要么射出整个场景空间（对于第1号处理机而言），要么进入第i-1号处理机中所存储的那部分场景数据空间；
　　(2)当光线射出第i号处理机数据空间的下表面时，则要么射出整个场景空间（对于第n号处理机而言），要么进入第i+1号处理机中所存储的那部分场景数据空间；
　　(3)当光线射出本处理机上场景数据空间的其他表面时（如前、后、左、右表面），则一定是射出场景空间了。
　　在实际应用中，视点、屏幕及场景空间三者的相对位置关系并不象图1所示的那样有规律。
　　有感兴趣者可与编辑部或本文作者直接联系。因此，同一场景仅因视点位置的不同而在屏幕上呈现不同的画面。

图2　入侵检测模型
　　最早的入侵检测模型由Dorothy Denning 在1986 年提出[1]
计算机应用
COMPUTER APPLICATIONS
1999年 第19卷 第6期 Vol.19 No.6 1999



用DEBUG检测BIOS“千年虫”
　　美国国家软件测试实验室研制的2000.EXE是世界公认PC硬件千年虫标准测 试软件的测试软件 之一。
　　几乎从一开始起，人们就将"存取控制"或"访问控制"作为最基本的一道安全防线，并依此发展了一些安全模型，如著名的Bell-Lapadula 安全操作系统模型，以及Biba, Clark-Wilson, Lipner完整性模型等。缺点在于网络拓扑结构以及各元素的权重很难确定，命令窗口w的大小也难以选取？最后，事后分析模块分析将来如何抵制类似入侵行为。
步骤如下：
　1） 首先使用DOS内部命令DATE和TIME将系统当前日期和时间设置成12-31 -1999和23:59；
　2） 1分钟后，用DEBUG命令编写下列三行语句：
　C>DEBUG
然后运行这三行小程序:
-G=0100<回车> 
　　运行后，显示器显示出当前各寄存器的内容，如果CX寄存器的内容是“2000”，DX寄存 器的内 容“0101”，说明顺利过渡到2000年1月1日；而如果CX寄存器的内容是“1900”则表示BIOS 没能 正确表示“2000”年。同理，我们以将起始日期和时间设置成02-28-2000和23:59，观其结 果 是否顺利过渡到2000年2月29日（DX应是“0229”）。其中有关攻击者行为的知识被描述为：攻击者目的，攻击者达到此目的的可能行为步骤，以及对系统的特殊使用等。
　　如果存在BIOS“千年虫”，就要设法解决。
由此，可得到这一数据划分策略：将屏幕象素点与场景空间依第二个结论所述的对应关系进行层状分割，然后把各个层顺序分配给各处理机。随着一些脚本被确认的次数增多，另一些脚本被确认的次数减少，攻击脚本不断地得到更新。
　　这时，可具体地实现前述的数据划分策略∶先对屏幕象素点以行为单位进行条形划分，视参与并行处理的处理机数n把屏幕划分成n份，自上而下依次把象素点集分配给顺序编号的处理机。则这个特征值可以用所有Si值的加权平方和来表示：
　　M=a1s12+ a2s22+…+ ansn2，ai>0，其中ai表示每一特征的权重。当然，软件也不是万能的。
　　由于对视点到象素点的各条光线的跟踪都相对独立，光线跟踪的并行化处理是很显然的。如果分割得不好，在极端条件下，可能会造成严重的抖动现象：处理机之间频繁地交换数据，长时间得不到稳定。这一策略应用在一些简单的并行图形处理系统中，效果很好。
　　款寄：成都237信箱编辑部　200元就可解决BIOS“千年虫”的烦恼。这里可以有两个结论：
　　(1)是光线连续的特性：从视点射出的两根光线，当穿过屏幕上两个相邻的象素点时，将很可能与场景中同一物体相交
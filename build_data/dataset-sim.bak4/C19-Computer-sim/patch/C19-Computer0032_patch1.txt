计算机应用
Computer Applications
1999年 第19卷 第7期  Vol.19 No.7 1999



基于事件驱动状态机的多线语音应用程序设计
刘宝旨

　　摘　要　本文介绍了事件驱动状态机的工作原理，在此基础上，给出了一种多线语音应用程序设计方案。
作者单位：浙江大学CAD & CG国家重点实验室　浙江.杭州（310027)
参考文献
［1］　唐治锋，等. KCPIS的空间数据模型与用户界面. 测绘学报，1996；25(1):63-66
［2］　李　霖，李德仁. GIS中二维空间目标的非原子性和尺度性. 测绘学报， 1994；23(3):315-321
［3］　崔伟宏. 空间数据结构研究. 科学出版社，1995，11
［4］　龚建雅. 整体SIS的数据组织与处理方法. 武汉测绘科技大学出版社，1993
［5］　江泽涵. 拓扑引论. 科学出版社，1981
［6］　罗杰斯．D．F. 计算机图形学的算法基础. 科学出版社，1987
［7］　Hanan Samet. Application of Spatial Data Structures. ADDISON-WESLEY PUBLISHING COMPANY, 1990
收稿日期:1999-06-20(修改稿)
。在我国,计算机声讯服务系统的研究分为两类［2］：一类是以硬件为主的计算机电话语音卡的开发和研制;另一类是以软件为主的高级开发平台及应用程序的研究。本文介绍的一种声讯服务系统的实现方法则属于第二类。

2　状态机
　　在声讯系统中，常采用有限状态机模式［3］来实现各种功能。状态机是一个事件驱动的程序模型，其处理条件和相关动作的逻辑都被定义在一个表中，该表描述了应用程序中所有可能的处理状态及驱使应用程序从一个状态转到另一状态的事件。
2.1　状态及其类型
　　状态是有限状态机在某一时刻的状况，它是由状态表给出的。系统给出与功能相适应的完整的状态图，它与事件表一起，使系统得以运转。
　　在有限状态机中，每一个状态有两种过程：一种CURRENT状态过程，准备状态正常工作的环境和条件，并将evtcode 返回给主控函数，完成状态转移等。另一种NEXT状态过程，执行该状态对应函数，实现语音处理功能，并将errcode 返回给主控函数。其形式化描述如下：　　
struct state
{
int process();/*状态处理器函数、状态转移*/
int next();
/*完成初始化（RWB重新赋值）、基本语音操作处理*/
}

　　状态类型分为:语音处理状态(比如放音、录音、访问数据库等)、信令状态(对应系统处于收发信令的状态，如摘机、挂机等)及其它状态 (如空闲状态)。
　　用户可根据应用系统功能的扩展随时向有限自动状态机增加状态，如：语音信箱、传真信箱、设置密码访问权限等。
2.2　事件及其类型
　　事件是系统的外部输入信号或内部驱动信号。事件类型有：
　　自然事件：系统运行中自然发生的事件。然而不幸的是，X.500系列协议并不支持TCP/IP协议。

图1　LDAP协议模型示例
　　在LDAP版本1和版本2中，服务器如果发现了操作所需的参考节点，会继续跟踪执行协议操作，它只向客户返回最终结果。主要研究领域为计算机图形学、电子线路设计。虽然一条弧可能在一个或几个多边形的列表中出现，但是每一条弧只存贮一次。
4　算法分析
4.1　已有的算法概述
　　如图1所示，搜索组成多边形2的弧，若当前结点为结点2，要搜索决定下一个组成多边形2的结点时，由于在结点2 处有弧c3、弧c5两条弧与结点2相连，首先必须计算弧c3、弧c5的方位角，再分别计算它们与弧c2的夹角，取夹角最小者为下一段组成多边形的弧c5，得到下一个结点7。为了解决这一问题，在版本3中允许服务器向客户端返回指向其它服务器的参考指针。　　
3　多线语音应用程序设计原理
3.1　事件队列、事件表
　　事件队列用来识别和响应同时在多个通道上发生的行为。它就象一个管道,多个来源的事件流进同一管道。事件队列为每一个事件提供一个独特的位置，同时还保存最近发生事件的历史记录，从而允许应用程序处理同时发生在多个通道上的事件。
　　事件队列的操作基于FIFO。当应用程序使用gtevtblk()函数从事件队列中读一个事件时，最早的事件从事件队列中移出并且被置入事件块EVTBLK。EVTBLK是一个数据结构，它用来保存一个来自于事件队列的事件。
　　事件队列记录了来自于驱动程序的事件。应用程序通过设备类型、板号、事件发生的通道号来识别事件，并通过调用gtevtblk()函数以及时的方式连续地服务于事件队列。快速地处理事件以便应用程序对用户的输入保持响应是很重要的。
　　事件表给出了系统可能发生的各种事件，从而保证了整个状态机正常、连续、稳定地运行。
3.2　状态转移表
　　状态的转移是由相关事件驱动的。在状态转移表中，每一个状态都规定了其基于的事件发生后状态机转向的另一个状态，如果发生的事件与第一状态不存在逻辑关系，状态转移表的下一个状态将统一被看作一固定的错误状态来处理。状态转移表举例如下：
　　current state　　　　event　　　　　　　　next state
　　Play Message　　　Rings Received　　　　　Error
　　　　　　　　　　Off-hook Completed　　　Error
　　　　　　　　　　Line Disconnect　　　　　Go On-hook
　　　　　　　　　　End of File on Play　　　　Line Idle
　　　　　　　　　　...　　　　　　　　　　...
　　
3.3　多任务函数
　　多任务函数及其实现:多线语音应用程序能同时在多通道上执行任务，其执行并发操作的能力是由语音软件的多任务函数实现的。当多任务函数被调用时，他会返回控制权给程序以便在从执行函数到完成的这段时间里，应用程序能同时执行其它操作 ，比如，开始执行一个其它通道的函数。多任务函数一般在通道级上执行，比如自动拨号、语音播放等，它不影响系统中的其它通道。
　　多数多任务函数在通道上执行耗时较长的输入/输出操作，这正是语音软件将控制权返回给调用程序执行其它操作的原因。依次类推，搜索得到组成多边形2的所有弧及结点。这些数据可以分别用弧-结点表、弧坐标表、弧的邻接表、多边形标识表、多边形-弧表等表格表示。如果你试图在忙通道上执行一个多任务函数将发生E―MTACT错误。一旦当前多任务函数结束，你才可以在这个通道上执行下一个多任务函数。
　　识别和响应多任务函数：多线语音应用程序能够响应同时发生在多个通道上的行为。通道代表一串事件，它允许应用程序识别和响应通道上发生的特殊事件。
　　解别名参考DerefAliases――指示了别名对象在搜索中如何被处理。一般情况下，事件常被称为结束事件，因为大部分事件表示操作结束。
　　属性attributes――返回的特定属性列表。多任务操作一旦在软件中发出一道指令，该任务立即提交给语音卡，由其在后台完成该任务，同时，程序控制权已转回应用软件的下一语句。简单地说，就是将播放这样耗时长的操作放在后台，由语音卡完成。而前台仅仅完成界面输入、多任务函数的调用以及一些必须独占CPU但耗时极短的单任务的执行。
3.4　状态机逻辑流程图
　　状态机逻辑流程图是状态转移表的图形表示，一般地,它分为事件驱动、当前状态和下一个状态三大处理模块。图示如下:　　


图1
　　在系统中，每一个通道定义一个状态机。大多数情况下，所有的通道将有同样的状态逻辑，并且所有的通道可以复制一样的状态机结构。应用程序使用状态机来管理每一个通道的程序流。
　　实际执行的程序流主要由表中的数据而不是程序的逻辑决定的，这反映了事件驱动的原理。
　　通道状态机的建立步骤：
　　为每一个通道列出所有可能的状态；
　　列出所有可能的改变通道状态的事件；
　　创建一个状态转换表，该表为每一个状态定义了基于当前发生的事件的下一个状态；
　　利用状态转换表，设计处理事件的程序流程。
3.5　状态机的扩充性
　　事件驱动的状态机具有良好的开放性,根据用户的要求可对其增加相应的状态,以完成功能扩展。对于增加的某个状态,应根据状态机的事件将其加入状态转移表中，其具体状态处理仍然要分为当前状态和下一个状态, 并给出对应状态的状态出口处理。以密码设置为例介绍状态增加后的转移流程图如下：
　　状态处理描述：
　　
4　结束语
　　利用上述设计方法,我们开发出一个综合性的医疗信息声讯系统，该系统除了具备一般的声音录制和回放功能外，利用状态机的扩充性，通过增加状态，使用户可以通过电话访问文本信息，通过电话查询数据库等。如果接入互联网，经过适当的改进，可以实现电话访问电子邮件的功能。
　　刘宝旨　讲师，硕士。

图3　由多服务器组成的一个信息目录树
　　假设如图3所示的目录树中搜索子树“O=EDU，C=CN”，请求发往已连接服务器HostA，则将有如下返回响应：
　　SearchResultEntry for O=EDU,C=CN
SearchResultEntry for CN=Manager,O=EDU,C=CN
SearchResultReference {
ldap://hostb/OU=People, O=EDU，C=CN
ldap://hostc/OU=People, O=EDU，C=CN
}
SearchResultReference {
ldap://hostd/OU=Roles, O=EDU，C=CN
}
SearchResultDone (success)
2.3.5　修改操作
　　修改操作允许客户请求服务器代替自己在目录中对入口进行修改。
　　作者单位：刘宝旨（山东济宁医学院计算机中心　山东．济宁 272113）
参考文献
［1］　王晶如,等.计算机电话综合系统的构成与应用.现代电信科技, 1997；(7)
［2］　张延平.电话语音系统的集成和设计.世界电信，1997；(2)
［3］　Voice software reference for MS-DOS.Dialogic Corporation, 1995 
　　收稿日期:1999-01-07(修改稿)

微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000　Vol.19　No.6　P.8-9,24




Windows 9x 准实时通信与控制系统设计
马卫东　王志颖
摘要：在 Windows 9x 中开发设计与底层硬件有关的实时、准实时通信与控制软件系统的方法。对 Windows 9x 设备驱动程序VxD编程、动态连接库接口、Win32 程序设计、任务调度亦进行了较为深入的探讨。
关键词：Windows 9x 　准实时通信　设备驱动程序　事件　线程　任务调度
　　Windows 9x是运行在80386及其后继产品上的通用桌面计算机图形用户界面操作系统。它支持抢先式多任务、多线程、虚存管理、局域网络、TCP／IP协议、Internet等丰富的功能，已成为应用最广泛的桌面操作系统。
　　但Windows 9x是为通用桌面计算机设计的操作系统，并不是为实时任务设计的，因而无法通过简便的程序设计方法直接创建实时通信与控制任务。由于在工业、交通、国防等许多测控部门都要求进行实时任务处理，许多原来在DOS系统开发的实时任务处理程序亦存在如何移植到Windows 9X平台上来或重新实现的问题，本文就这些问题进行了探讨。
1  Windows 9x操作系统结构简述
　　Windows 9x运行在80x86保护模式下，其操作系统核心代码(如线程调度、存储管理、设备驱动等程序)运行在拥有特权级的核心态(Ring 0级)，操作系统的其它代码(如GUI程序等)和用户进程运行在用户态(Ring 3级)。其基本结构如图1所示。

图1  Windows 9x操作系统结构图
　　Windows 9x操作系统能够同时运行MS－DOS程序、Win16程序和Win32程序，彼此间互不干扰，并发执行。这里建议在Windows 9x下开发应用程序，首选Win32程序。Windows 9x为Win32应用程序提供了32位高达4GB的全线性虚拟地址空间，这对一般应用来讲提供了足够大的可用内存(尽管计算机物理内存的容量在一般情况下要小得多)。
　　Windows 9x操作系统由其核心、设备驱动程序和大量的动态链接库及应用程序组成。Windows 9x内核与设备驱动程序运行在保护模式的Ring 0级或称为核心态，而一般应用程序与动态链接库运行在Ring 3级或称为用户态。熟悉80386保护模式体系的人都知道，Ring3代码不能直接调用Ring 0代码。Windows 9x给Win32应用程序调用设备驱动程序提供了一个标准调用，即用设备文件句柄和硬件设备驱动程序通信。设备文件句柄通过标准Win32 API调用CreateFile，然后可以使用ReadFile与WriteFile从设备中读写内容，使用DeviceIoControl控制设备驱动程序的具体操作。
　　在Windows 9x操作系统中与硬件设备打交道的程序代码必须运行在核心态(Ring 0级)。事实上这些代码就是Windows 9x中的设备驱动程序，运行在用户态(Ring 3级)的代码必须通过核心态(Ring 0级)代码才能访问硬件。通常即使在用户态(Ring 3级)执行的所谓输入输出指令(in，out等)实际上也隐含调用了核心态(Ring 0级)代码得以执行的。
　　所以，在Windows 9x中开发设计与底层硬件有关的实时通信与控制软件系统是和如何构造良好性能的设备驱动程序息息相关的。下面的程序Word01．prg实现了这些要求。事实上，在许多测控部门并不要求严格的实时控制，而仅需要秒级或毫秒级的响应控制时间，这里称之为准实时通信控制系统。对准实时通信控制系统有一种简便有效的实现途径，即构造一个标准的设备驱动程序VxD及一组通信控制动态链接库API，使得对设备测控代码由运行在用户态的应用程序完成，保证响应时间在毫秒级。下面简单的例子说明如何在VFP应用软件运行中将数据库中的数据交给Word来完成1个报表的制作。当一个进程被创建的同时也创建了1个主线程、0个或多个从线程，每个线程必须从属于一个优先级类，并指定其优先级。程序中用CreateObject（）函数启动Word，并新建1个Word工作稿（用通常方式或模板方式均可），先设置报表的标题，然后根据数据库的字段与记录在这个文稿中编程设置1个表格，打开数据库table1．dbf，取得该表的记录数，将数据表table1．dbf的记录数据逐条送到Word文稿的表格中（同时计算合计：各费用项目的合计--各季度开支的合计以及全年开支的合计），在Word中稍加修改这个报表，并用templ．doc文件名存盘。因此，一个优先级中有几个级别，包括16个实时级别、15个变量级别、1个系统级别和1个空闲级别。
　　Win32提供了若干种同步对象(如临界区、互斥量、信号量和事件)，以便让线程相互之间能够同步。通过将同步对象和优先级配合使用，可以巧妙地设计和实现多个线程的并发操作，其中有一个高优先级线程时刻准备处理外部突发事件，一旦有事件到来(事件由底层的设备驱动程序激活)立刻投入运行。这时可以使用OLE自动化服务在VFP中调用Excel或Word来完成这种特殊任务（VFP数据库应用软件作为客户，Excel或Word作为服务器）。这样就实现了准实时通信与控制，其实现原理如图2所示。这时可以使用OLE自动化服务在VFP中调用Excel或Word来完成这种特殊任务（VFP数据库应用软件作为客户，Excel或Word作为服务器）。
表1 科研经费开支情况表
费用项目一季度二季度三季度四季度合计
科研材料1500200020004000　
科研出差3000300040004000　
其它费用15001200140001100　
合计　　　　　

　　我们希望在VFP的这个项目运行时，调用Word来制作这个数据表的“科研经费开支情况报表”，并在处理时自动计算合计数，最后将报表以Word文件存盘。限于篇幅，下面就几个关键问题作些讨论。
2.2.1 事件对象与线程同步
　　一个线程使自己与其它线程同步的方法就是使自己睡眠。在此之前，它必须告诉操作系统一旦有什么“特殊事件”发生，它必须被唤醒以便继续执行。操作系统在使该线程睡眠后将一直监视这一“特殊事件”是否发生以及何时发生，并在它发生时唤醒该线程并使线程在所有就绪状态线程中按优先级调度得以继续执行。此时，该线程就使得其执行与事件的发生取得了同步。这时可以使用OLE自动化服务在VFP中调用Excel或Word来完成这种特殊任务（VFP数据库应用软件作为客户，Excel或Word作为服务器）。
表1 科研经费开支情况表
费用项目一季度二季度三季度四季度合计
科研材料1500200020004000　
科研出差3000300040004000　
其它费用15001200140001100　
合计　　　　　

　　我们希望在VFP的这个项目运行时，调用Word来制作这个数据表的“科研经费开支情况报表”，并在处理时自动计算合计数，最后将报表以Word文件存盘。事件一般使用CreateEvent函数创建，可以采用全局唯一的有名事件或进程内部使用的无名事件，事件一般可用SetEvent等函数触发。
2.2.2 设备驱动程序中触发Win32事件
　　在设备驱动程序中触发Win32事件要考虑许多实现细节并需要采用汇编语言实现。限于篇幅，这里简单介绍其核心调用：
　　VxDcall ＿VWIN32＿SetWin32Event
　　其功能是设置指定的事件对象为发信号状态。这时可以使用OLE自动化服务在VFP中调用Excel或Word来完成这种特殊任务（VFP数据库应用软件作为客户，Excel或Word作为服务器）。
　　为简单起见，假定在1个VFP项目中有关于科研经费开支情况的数据表：kyjf．dbf（其中不录入合计数），如表1所示。如果调用成功，则在EAX寄存器中返回非零值，否则为失败。
　　表示VxD事件对象的句柄存入EAX中，1个VxD句柄是1个由Win32函数OpenVxDHandle创建的ring 0句柄(详见2.2.3节)。
　　注意，该服务仅在当前虚拟机是系统虚拟机时才能够被调用。
2.2.3 Win32与核心对象句柄的转换
　　在Windows 9x提供的kernel32.dll动态链接库中，有一个未公开的API调用即OpenVxDHandle，它的作用就是将在Win32程序中使用的句柄转换为核心设备能够使用的句柄。于是在核心运行的代码与Win32中运行的代码可以操作同一个对象。下面的程序Word01．prg实现了这些要求!＝NULL)
　　｛
　　　　lpfnDllFunc1＝(LPFNDLLFUNC1)GetProcAd－dress(hDLL，″OpenVxDHandle″)；
　　if(！lpfnDllFunc1){ ／／handle the error
　　　　　　FreeLibrary(hDLL)；
　　　　　　return 0；
　　　　｝
　　else
　　　　｛ ／／call the function
　　　　uReturnVal＝lpfnDllFunc1(hSource)；
　　　　｝
　　｝
　　}
2.2.4 设备驱动程序的编制
　　编制设备驱动程序主要使用Win32 DDK，当然也有一些第三方厂家提供的较为便宜的集成化开发工具。有关设备驱动程序的编制需要较多篇幅来介绍，这里就不细述了。
3  结束语
　　在Windows 9x中开发设计与底层硬件有关的实时、准实时通信与控制软件系统是一项很有意思的工作。下面的程序Word01．prg实现了这些要求。
马卫东（中国工程物理研究院计算机应用研究所　621900）
王志颖（中国工程物理研究院电子工程研究所）
收稿日期：1999-12-28

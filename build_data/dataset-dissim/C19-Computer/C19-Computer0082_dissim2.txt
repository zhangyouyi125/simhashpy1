计算机应用
Computer Applications
1999年 第19卷　第8期 Vol.19　No.8 1999



Delphi 3.0中的多线程编程技术
王　红　赵国红　
1　前言
　　Windows95是基于线程的多任务操作系统，它支持两种形式的多任务机制，一种是基于进程的，这也是Windows从一开始就支持的多任务类型。进程是指正在执行着的程序。在基于进程的多任务环境下，多个程序可以并发地执行。第二种多任务类型是基于线程的。线程是进程的一个执行流，多个线程可以并发地执行于同一个进程中。Delphi3.0充分利用了Windows95的多线程机制而提供了对线程编程的支持，这也是Delphi3.0与Delphi1.0的重大区别之一。利用这种机制能编写出很高效的程序。
　　既然多个线程可以并发地执行于同一进程中，那么协调线程间的执行顺序，以避免对临界资源的使用而引起冲突就十分重要。
2　Delphi3.0中线程对象
　　在Windows95操作系统下，编写基于线程的程序可以利用应用程序接口函数（API），也可以使用Delphi3.0中线程对象（TThread对象）。线程对象可使编写多线程程序更简单、高效、易读。线程对象（TThread)提供了许多特性和方法（成员函数），只要根据需要对这些函数和方法重写，就可以在程序中实现多线程机制。下面对TThread对象的方法和特性进行详述。
2.1　线程对象的特性
　　Free on Teiminate特性：布尔型，只可在运行时使用。当线程结束时，该特性决定是由VCL（可视构件）自动清除线程对象还是由你自己负责清除。当为True时，自动清除。默认值为False。
　　Thandle特性：线程句柄，API中大多数线程函数需要使用该句柄。
　　Priority:线程的优先级特性，只能在运行时使用，后文中有详述。
　　(4) 数据处理能力较弱。
　　Suspended特性：布尔型，用于决定线程是否挂起，当值为True时，挂起线程。
　　Teuminated特性：布尔型，且是受保护的(Protected)，只读。该特性决定线程是否停止执行，如该特性值为True时，线程执行结束。
　　Thread ID特性：线程标识符，有的API线程函数使用该标识。
4 实践中需要注意的问题 
　　当然，这样的体系结构并不是完美的。
　　Execute过程　该方法开始一个线程的执行，你必须在线程类中，重写该过程，Execute方法返回时，终止线程的执行、释放线程所占资源，并调用Onteinate事件过程。同时，由具有丰富采掘知识和经验、并对决策支持系统有较深刻理解的专业人员负责数据采掘和知识发布的工作，使得数据采掘的优势得以保障和发挥。
　　Resume过程　该方法恢复一个被挂起的线程的执行。
　　Suspend过程　该方法挂起一个线程的执行，它和Rosume方法是配对的。
　　Synchronize过程　在Delphi3.0的多线程编程中，各种VCL构件都是临界资源，只能由主线程使用，其它的线程要使用这些VCL构件，必须使用Synchronize方法，避免多线程与VCL构件的冲突，该过程带一个TThreadMethod类型的参数。
　　Teiminate过程　该方法设置Teiminated特性为True，并终止你的线程的执行。
　　WaitFor函数　该方法等待线程执行的终止，然后返回ReturnValue特性的值，因此，在调用该函数后，必须确保线程的退出。另外，如果线程使用了Synchronize方法，则不要在主线程中调用Wait For，因为这样一来易引起死锁，或导致Ethread例外的发生。这些知识是隐含、事先未知和潜在有用的。Onterminate事件发生在线程的Execute方法已经返回，TThread结束线程之前，该事件驱动只可在主线程使用，可以调用各种VCL方法和特性。
3　创建Delphi3.0中的线程对象
　　Delphi3.0环境中，线程对象是始视对象Tobject的直接派生类，它和其它的Delphi3.0构件和对象不同，不能在程序中直接使用，而必须从TThread对象中产生一个派生类，并对其中的某些成员函数进行重写以覆盖（Override）TThread对象中的方法，完成自己的功能。在Delphi3.0中可以直接书写代码创造自己的线程类，也可能和Delphi3.0的线程生成器来创建原始的公用代码，而后再在此基础上修改。
4　线程的启动、终止和优先级
　　线程的启动和终止是线程生命周期中的起点和末点，在线程的生命周期内还有它的各种状态，例如挂起和恢复。然而 , 传统的决策支持系统往往无法为广大企业经营人员充分利用，更无法体现数据采掘技术的优越。其二，线程被创建后，处于挂起状态，而不被立即执行，要想执行，必须调用线程的Resume方法。至于为什么会挂起，与它的构造函数有关。
4.2　线程的终止
　　线程的终止分为以下几种情况：一为自然终止，即线程执行完后动结束线程；其二为强制终止，即在线程正在执行时，我们强制调用线程的Terminate过程；其三为在执行线程中发生了Ethread例外从而引起线程的终止。只要有浏览器，就可以通过 TCP/IP 协议访问 Web 服务器，用户可以在任何地方的任何计算机上使用决策支持系统。
　　相对于传统决策支持系统体系结构，新型框架具有其不可比拟的优点。
　　3) 使决策支持系统能处理规模庞大、形式复杂，甚至存在质量问题的数据 
　　企业在长期经营过程中积累起来的大量数据是企业的宝贵财富，能为决策支持提供重要的依据。这样固定的知识来源，使决策支持系统无法适应环境的变化，很容易因应用的发展而淘汰。
　　tpIdle：这是线程的最低优先级，只有当系统闲置时，该优先级的线程才被执行。
　　tpLowest：该优先级比正常优先级（tpNormal）低2个点。随着应用网络化的需求，Client/Server 技术也被用在 DSS 中。
　　tpHigher：该优先级比正常优先级高一个点。
　　tpHighest：该优先级比正常优先级高2个点。
　　tpTimeCritical：线程的最高优先级。考虑到用户耐心有限，Knowledge Server 还应定期生成一些用户会经常查询到的知识，或分析处理时间较长的知识，等待用户的查询。
作者单位：王　红　潍坊高等专科学校计算机系　山东．潍坊(261041)
　　　　　赵国红　山东省水利厅南办　山东．济南(250013)
　　收稿日期:1999-02-02

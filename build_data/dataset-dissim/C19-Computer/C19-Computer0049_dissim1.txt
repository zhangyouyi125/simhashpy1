计算机应用
Computer Applications
1999年 第19卷 第7期  Vol.19 No.7 1999



Solaris 系统动态链接库的建立及其程序设计接口
曹广华　袁子龙　李鹏举

　　摘　要　建立用户自己的动态链接库、使用动态链接程序设计接口是大型、高质量程序设计的一项重要技术。这便给观众一种跨越时空的感觉。导航图相当于虚拟实景空间的一幅地图，虚拟实景空间中各个视点的位置以及用户当前的位置等均动态绘制在导航图中。虚拟实景空间具有如下的优点：
　　・不需要硬件加速就能在PC机上实时运行。在现代UNIX操作系统中，系统软件和大型应用软件都采用动态链接技术。本文以Sun工作站使用的Solaris操作系统为例分析其动态链接环境、动态链接库的建立及其使用方法。　
1　Solaris 的动态链接环境
　　Sun工作站使用的Solaris操作系统(UNIX)为其应用程序提供了很好的动态链接环境［1］。而超越于现实时空又恰恰是虚拟现实系统的特性之一。
1.1　Solaris系统的函数库
　　Solaris操作系统在/usr/lib目录中提供各种函数库，包括各种静态库（lib<name>.a）和各种动态链接共享库（lib<name>.so），这些函数库作为缺省值在编译程序时被系统链接程序链接，根据不同情况生成静态链接或动态链接可执行程序。动态链接可执行程序在运行时还要由系统运行时链接程序动态调用所需要的动态链接共享库［1］。
1.2　Solaris系统的链接程序
　　Solaris系统的链接程序ld本质上是一个动态链接程序，即系统对目标码进行链接时，优先选择动态链接库。例如，如果系统在/usr/lib目录中同时存在静态数学函数库libm.a和动态数学函数库libm.so，则命令%cc prog.c -o prog -lm自动链接libm.so，生成动态链接可执行程序。
　　在程序编译过程中，可以采用不同的选项控制系统链接程序的执行，从而得到静态链接可执行程序、动态链接可执行程序［2］或共享函数库。
1.3　Solaris系统的运行时链接程序
　　Solaris系统提供的运行时链接器是ld.so，它在动态可执行程序运行时被启动，以选择合适的共享库，控制动态可执行程序的运行［1］。
　　
2　建立动态链接库
　　采用动态链接技术设计程序时，除了使用系统提供的标准动态链接库之外，建立用户自己的动态链接库、使用动态链接程序设计接口设计程序是一项十分重要的技术。
　　Solaris系统提供的编译程序、链接程序、共享函数库和运行时链接程序为用户使用其标准动态链接库提供了支持，同时也允许用户自己建立动态链接库。本文介绍了HVS系统的空间模型，系统组成以及实现。PIC码不用修改就可用于任何进程地址中，这样就减少了进程对内存空间的要求和I/O请求，在代码共享的同时提高了系统运行效率［3］。下面我们以C语言为例，说明在Solaris系统中建立动态链接库的方法。
2.1　Solaris1.x中动态链接库的建立
　　设需要建库的C语言子程序为f1.c、f2.c、…、fn.c（注意，这些程序中不包含main函数且各源程序文件中没有外部参考全局变量），要建立的动态链接库的名称为mylib，根据UNIX系统函数库的命名规则［1］，要建立的动态链接库的文件名为libmylib.so，建库的步骤和命令如下：
　　* 生成PIC格式的目标码：
　　% cc -pic -c *.c
　　* 将PIC目标码链接成动态链接库：
　　% ld -o libmylib.so.1.1 -assert pure-text *.o
　　* 使用符号链接生成所需要的动态链接库文件：
　　% ln -s libmylib.so.1.1 libmylib.so
　　Solaris1.x生成动态链接库时，版本信息需要一个主号(major)和辅号(minor)，即文件名libmylib.so.1.1的版本号“1.1”中，前一个“1”为主号，后一个“1”为辅号，Solaris2.x中只使用主号。这种虚拟空间具有照片质量的视觉效果，称为虚拟实景空间。当用户俯视时，全景图象向上移动。例如，下面的编译命令
% cc -o prog prog.c -Ldir -lfoo
　　使用了libfoo.so.1库，prog程序在运行时自动链接该共享库，即使/usr/lib中的libfoo.so符号链接指向了新版本的libfoo.so.2，这样就保证了依赖于libfoo.so.1程序的正常运行。在实际应用过程中，两种方法可以任选，在起始与终点图象中各象素点景深变化不大时，用图象插值法可得到比较好的效果。例如，新建的libmylib.so（可以是符号链接）放到/usr/lib目录中时，使用该库时编译命令如下：
　　% cc prog.c -o prog -lmylib
　　此时的动态链接库为标准附加库。
　　如果新建的libmylib.so放到/home/lib目录中，使用该库时的编译命令如下：
% cc prog.c -o prog -L/home/lib -lmylib
　　此时的函数库没有在标准目录位置，编译时应使用-L选项指明其所在位置，运行时应设置LD_LIBRARY_PATH环境变量指明该共享库的位置［1］。　　
3　动态链接程序设计接口
　　Solaris系统提供动态链接程序设计接口函数直接使用动态链接函数库中的函数，以提高程序的运行效率［2］。接口函数包括建立动态链接dlopen()、返回共享码地址dlsym()、关闭动态链接dlclose()和动态链接错误处理dlerror()四个函数。下面举例说明他们的用法。链是单向的，每一个关联实际上由两个链描述，如VPS1与VPS2之间的位置关联可以等价于链Lp1(V1，V2，Property(p1))和链LP2(V1，V2，Property(p2))!=0){
printf("dlclose failed: %s\n",dlerror());
exit(1);
}
}
　　该程序非常简单，主函数main直接调用共享库中的pnum函数打印输出一个整数10。程序中的说明行详细说明了接口函数的使用方法。当用户仰视时，全景图象向下移动。
　　曹广华　讲师。主要研究方向：UNIX系统、分布式数据采集系统。
　　作者单位：曹广华　袁子龙　李鹏举（大庆石油学院勘探系　黑龙江．安达151400）
参考文献
［1］　曹广华. Solaris 系统的动态链接环境与使用. 中国计算机报（光盘Info CD），1998；(4)
［2］　SunSoft, Inc.SunOS5.5 Linker and Libraries Manual,Mountain View，1996
［3］　Sun Microsystems Inc.SunOS5.5 Online Manual, 1995
　　收稿日期:1999-01-12

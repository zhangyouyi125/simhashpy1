计算机工程
Computer Engineering
1999年　第25卷　第9期　Vol.25 No.9  1999



更实际的民构并行计算模型
黄伟民　陆鑫达　钟　嵘
　　摘　要　通过结合多种代表性并行计算模型，给出异构环境中的HBSP模型和程序开销计算方法．采用基于消息长度的线性模型具有通信开销的计算更精确、程序和算法在异构环境中的设计灵活、且可解除原有BSP模型对h-relation的限制等优点．当构成BSP计算机的各处理机速度相同原有BSP算法达到最优(即各处理机上所分配的计算量与通信量完全均衡)时,HBSP模型等同于原有模型.
　　关键词　异构计算；BSP模型；并行计算模型
More Practical Heterogeneous Parallel Computing Model
Huang Weimin, Lu Xinda, Zhong Rong
(Dept.of Computer Science of Shanghai Jiaotong Univ., Shanghai200030)
　　Abstact　In this paper, severtal standing parallel computing models are combined and Heterogeneous Bulk Synchronous Parallel(HBSP) model is proposed. The communication cost prediction is made more precisely based on liner model of message length, and the restriction on h-relation of original BSP model is canceled to make the algorithm and program design in HBSP more flexible. The HSBP model is same as the orignal when processor speed of BSP computer is all the same and the original BSP algorithm is optimized(e.g.the computation load and communication load are totally balanced).
　　Key words　Heterogeneous computing;Bulk synchronous parallel model; Parallel computing model
　　由多个独立计算系统通过网络构成的异构系统群，可以转变成一个一致的、功能强大的和较高性能价格比的并行计算资源。近年来，异构并行计算在高性能科学计算和通用应用领域受到广泛研究。在异构网络计算中，常采用消息传递编程模型，即一个并行程序由一组相互协作的进程组成，每个进程都完成相同的任务，在执行时交换消息。消息传递编程具有较强的功能，可以设计出高效和可移植的并行程序，但缺乏理论指导，需要编程人员将数据和计算量手工分配到各个处理器上，源码中需显式增加用于处理器之间通信的例程。这三种模式都只在建设数据集市或数据仓库的过程中考虑用户的需求。
　　关键词　数据仓库，数据集市，元数据
THE IMPLEMENTATION STRATEGIES OF DATA WAREHOUSE
Yang Guang　Zhang Lei　Ai Bo
Beijing University of Posts and Telecommunications, Beijing 100876
　　Abstract　This paper first introduces the concepts, Data Mart and Metadata, then analyzes and compares six implementation strategies of Data Warehouse. At the end of the paper a typical architecture of Data Warehouse is presented.
　　Keywords　Data warehouse, Data mart, Metadata
　　　　为了解决企业中普遍存在的“数据监狱”和“数据贫穷”现象，为企业决策分析人员方便、迅速地提供更准确、高质的信息，已成为企业当前迫切需要解决的问题。具体的编程方法、正确性检查、性能分析等方面仍然处于经验阶段，且易于出错。从编程模型的角度来看，需要一种更自然和简单的计算模型来解决这一问题。以下结合多种代表性计算模型，给出适合于异构网络计算环境的程序设计和开销计算方法。
1 并行计算模型
　　并行计算模型是一个将高层次特点与低层次特性分离开来的界面，提供在其上进行编程的特定操作，对其下所有结构中每个操作的实现作出要求。

图5　“有反馈的自顶向下”模式
3.5　“有反馈的自底向上”模式
　　在“有反馈的自底向上”模式（见图6）中由于采取的是先建设部门数据集市，再以各部门的数据集市为基础建立全局性数据仓库的方式。抽象性是由于模型提供的操作比底层结构所提供的操作高级得多，简化了软件结构，减少了软件设计的困难。稳定性是由于软件设计可以基于一个长时间保持稳定不变的标准接口，不用考虑并行计算机结构的变化。同时，模型形成了每个并行机实现时所基于的固定起点(程序转换系统、编译和运行系统)。这个全局的数据仓库将提供给用户一个一致的数据格式，一致的软件环境。PRAM中的处理器分配任务后，将并行地完成各自的局部计算，在遵守不同的并发读写限制(如EREW，CREW和CRCW)的前提下，可任意读写共享存储单元，然后同步地开始下一个局部计算。
3.1　“自顶向下”模式
　　“自顶向下”的开发策略(见图2)是指从原来分散存储在企业各处的OLTP数据库中的有用数据通过提取（extraction）、清洁(clean)、转换（transformation）、聚集（aggregation）等处理步骤建立一个全局性数据仓库。
1.2 BSP模型
　　在BSP模型(Bulk Synchroneous Parallel)中，计算由一系列全局同步分开的长度至少为L的超步组成。在每个超步中，每个处理器均执行局部计算，并通过网络接收和发送至多h条消息(称为h-relation)，然后作同步检查，以确定该超步是否完成。

图4　平行开发模式
　　“平行开发”与“自顶向下”模式的区别在于它满足了企业中的各个部门希望在较短时间内建立本部门的决策支持系统的要求，使他们不用等待全局性数据仓库建立好之后才建立属于自己的数据集市。BSP模型主要由3个参数表示，分别是：p为处理单元的数目；g为整个系统的计算能力与网络传送消息的通信能力的比值，更形式化一些，系统需要gh个时间单位来完成h-relation操作。第二阶段部门数据集市把自身的需求变化反馈给全局性数据仓库，全局性数据仓库再做出相应的变化。
1.3 LogP模型
　　LogP模型主要由4个参数描述：L：消息从源到目的地的延迟；o：处理器发送/接收一条消息所需的额外开销；g：处理器可连续发送或接收消息的最小间隔；P：处理器数目。LogP模型中计算也是一系列的超步，超步内消息一旦到达，处理器就可计算，不必等特，超步间无显式同步操作，每个处理器均利用点到点消息传递方式实现隐含的同步。在这个模式中用户的新需求的反馈分为两个阶段。这些来自不同操作数据库系统的数据在经过提取(extraction)、清洁(clean)、聚集(aggregation)、转换(transformation)等操作后被存入数据仓库。但是在开发的过程中人们发现了一些问题。
1.4 LogGP模型
　　LogGP模型[1]是对LogP模型的扩展。在只有短消息时，LogP可以准确地预测通信性能，但对长消息却不能。LogGP模型将LogP模型和一个用于描述长消息的线性模型结合起来，增加了一个参数G，用以描述发送长消息时的网络带宽。一些算法(如FFT、排序等)设计分析和实验数据表明，这个扩展可以准确地预测长短两种消息的通信性能。LogGP的算法与LogP的优化算法相比，执行速度和性能有较大提高，但随着模型的进一步复杂化，LogGP上的算法设计和分析也更为复杂。
1.5 并行计算模型小结
　　与BSP相比，LogP在三方面有所不同：(1)LogP采用基于pairwise同步的消息传递方式；(2)LogP增加参数o，以表示发送消息时所需额外开销，而BSP中除应用于单个消息通信外，这个参数一般可以忽略；(3)LogP模型中的g是从局部的角度来定义的。

图1　元数据管理环境
3　数据仓库的实现策略
　　随着数据仓库技术的发展，如今数据仓库的实现策略已从原先的“自顶向下”模式（The Top Down Model）发展到了以下六种模式。两者相比，BSP模型更具有结构性，也更加简单。LogP模型似乎更为灵活，却要求很强的设计技巧，使算法和程序设计的复杂性难于控制。研究表明[2]，BSP和LogP模型可以有效地相互模拟，使用更简单的BSP编程方式基本不会对性能造成影响。同时，对LogGP的研究发现，实现长消息的最简单办法是将发往同一处理器的几个消息合并成一个消息。这与BSP模型的一个主要特点不谋而合，即发往另一个处理器的消息并不立即发出，等到超步结束时，将几个消息合并后一次发出。从文中对数据仓库、数据仓库的结构的论述中可以得出这样一个结论：数据仓库不是对原有的面向应用的操作型数据库的替代；数据仓库和操作型数据库在企业的信息环境中承担不同的任务，发挥不同的作用；数据仓库主要应用于决策分析，而原有的操作型数据库主要用于日常事务处理。从总体上看，对计算模型的研究在经历了从PRAM->BSP->LogP->LogGP的过程之后，又重新回到BSP，对BSP的概念和优缺点有了更深刻的认识和了解。
2　元数据（Metadata）
　　数据仓库中存储着几百G B的数据。BSP程序由于其超步的结构使消息传递操作不会出现死锁，同时在正确性、性能分析和编程方法上都简单易行，很适合异构环境下的消息传递编程。但仍存在要求机间通信满足h-relation条件、g的测算不够精确、在异构环境下不再适合等问题，以下给出适合于异构网络计算环境的BSP模型和开销计算方法。
2 异构环境中的BSP模型和开销计算
　　异构BSP模型(HBSP)中计算由一系列连续的超步组成。数据集市的结构和数据仓库类似。对于异构计算系统P={P1，P2，…，Pp}，其中处理机数p=|P|,处理机速度参数集合S={S1，S2，…，Sp}，任务分配W={w1，w2，…，wp}，通信量分配集合H={h1，h2，…，hp}。令Sj为处理机Pj的计算速度，bj为处理机忙闲度，s'j=sj・bj为实际计算速度。wtj=wj/s'为处理机Pj完成任务wj所需时间，gt为发送一个字节消息所需时间，Lt为完成Barrirer同步所需时间。
　　这样，每个超步的开销由两部分组成：每个处理器上所进行的本地处理的最大开销(包括局部计算和机间通信开销)和超步结束时barrier同步的开销。
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　(1)
第i个超步的执行时间T(x)=Tlocalproc+Tsync=
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　(2)
　　在异构BSP模型中，参数L是根据交换空消息然后实现Barrier同步的超步来测算的。
　　数据仓库系统是以数据仓库为核心，通过数据提取工具、数据转换工具、查询工具、报表工具、分析工具、数据发掘工具等，满足用户对信息的各种需求。[S]：检测两个一维数组A[n]和B[n]相乘的开销，其中n远远大于每个处理器的cache大小，大部分计算操作可在cache内完成，这样求出处理器速度的上限(可多次循环以减少误差)。
许多现有的并行计算机对于长消息提供特殊的支持，发送长消息的带宽要远大于发送短消息的带宽。考虑到这些因素，更精确地，在异构BSP模型中，将消息大小引入通信开销中，用一个线性公式来描述发送n字节长消息所用的时间：t=t0+tB.n，其中t0是将一个消息发往目标处理机的通信启动开销时间，tB是每字节所用时间。实验数据(图1和表1)表明，这个扩展可以准确地预测消息的通信性能。
　　〈例1〉由(SunE450,SunCreator,SunUltarSparc,SunUltraSparc等)多种机器通过100Mb Ethernet构成的异构计算系统，采用MPI通信原语MPIsend和MPI-Recv来测试不同性能处理机间的通信速度和通信启动开销，得到以下测试结果示意图。
　　从图1和表1中可以看出，3种不同性能处理机间分别交换3种不同数据类型的消息，通信时间基本是通信消息大小的线性函数，各个不同处理机间的通信启动开销基本相同，当发送消息的类型变化时(从char,integer到double)，表示通信速度的斜率基本与消息大小保持一致。需要注意到，通信启动的开销时间与发送2500字节的消息所需时间基本相同。这就需要重新考虑通信与计算的重叠在异构网络环境中的实用性，重叠最多可以使并行计算的速度加倍，实际加速比远小于此，大部分并行算法的计算量比通信量增加得快，所以在设计程序和算法时应合并发往相同处理器的消息。

图1 异构处理机系统中机间通信结果示意图
表1 异构系统机间通信不同类型消息的斜率

处理机斜率
发送消息类型：char发送消息类型：integer发送消息类型：double
Sun USparc-Sun Creator0.1143210.4054830.756228
Sun USparc-Sun USparc0.1124040.3995760.746370
Sun E450-Sun USparc0.1184140.4054830.756047

　　在一个超步中，设处理机Pi需要发送的消息集合为H={h1,h2,…,hk}，其中hi表示消息的长度，一般情况下消息数目k与问题规模相关，显然有k>>p。令h0是将一个消息发往目标处理机的通信启动开销，g是每字节所需操作开销(需要注意到，这里所定义的g小于原有BSP模型中的g)，则每条消息开销为h0+hi.g，从而Pi的通信开销为。由于BSP程序是在所有结果都计算出来以后再进行处理机间的消息传递操作，因此可将发往相同处理机的消息合并成一个大的消息包，则通信启动开销可以减少到不超过p-1次，使得通信开销小于等于。
　　不失一般性，假设处理机集合P={P1,P2,…,Pp}通过相同的网络连接而构成一个BSP计算机，各处理机的通信速度g基本相同。设处理机实际速度参数S'={S'1，S'2，…，S'p}，令，显然处理机完成Barrier同步所需时间Lt通常是由速度最慢的处理机的完成时间所决定，即Lt=L/Smin'。
　　令P*=(P1*,P2*,…,Pp*)，其中Pi*=Si*/Smin'，得出：
　　
　　通信启动开销(p-1)・h0只与处理机数目相关，在问题规模扩大时可以忽略，为简单和易于应用，
　　可使：　　　　　　　　　　　　　　　　　　　　　　　(3)
　　根据异构BSP模型，得出编写高效异构BSP程序的策略：
　　(1)由于每个超步中的Barrier同步必须等待最慢的进程，要使T(x)最小，就应使各处理机的本地计算时间和处理机间通信时间之和尽量均衡。
　　定义1：在BSP计算机上执行的一个计算任务，其分配到某个处理机Pi的计算子任务中，本地计算开销与处理机之间通信开销之比称为该计算任务在Pi上的本地性水平，记作αt。
　　定义2：使BSP计算机的p个处理机达到相同任务完成时间的任务分配W，所对应的在处理机P1,P2,…,Pp上的本地性水平 {α1，α2，…αp}，称为 {Pi} 的临界本地性水平，记作
{αci}。 

　　　显然有：{
　　　　　　　　　Wi/Pi*+hi.g=Wj/Pi*+hj.g　　　i,j p
　　上式成立时的任务分配W达到P1,P2,…,Pp的临界本地性水平，T(x)最小。
　　(2)使超步的数目最小化，因为可以减少L的次数。
　　(3)合并发往相同处理器的多个消息，使每个超步的通信启动开销至多为p-1次。
3 结束语
　　这里给出异构计算环境中的BSP模型(HBSP)和程序开销计算方法。原BSP模型要求处理机间通信满足h-relation关系，HBSP模型中则不再有此限制，为算法和程序设计提供更多的自由。在处理机速度相同的情况下，即P*i=1(i=1…p)时，且各处理机上所分配的计算量与通信量完全均衡时，(1)和(3)式可转化为BSP的标准开销模型：
　　C(x)=max wi+max hi.g+L=w+h.g+L
　　Ti=Tcompi+Tcommi+Tsyni=(w+h.g+L)/S
　　其中：{pj的本地计算时间}，{pj的机间通信时间}，S为构成BSP计算机的单个处理器的执行速度。
　　即：当构成BSP计算机的各处理机速度相同且原有BSP算法达到最优(即各处理机上所分配的计算量与通信量完全均衡)时，异构BSP开销模型等同于原有模型。数据库及数据仓库是信息系统和决策支持系统的基础设施，没有完善的数据库或数据仓库，再好的分析工具也发挥不了作用
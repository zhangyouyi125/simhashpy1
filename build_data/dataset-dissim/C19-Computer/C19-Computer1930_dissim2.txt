微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000　Vol.19　No.6　P.38-40




Java和JavaScript在WWW信息服务中的应用（二）
刘东波
摘要：JavaScript、Java applets和JavaBeans在WWW应用开发中的作用及其相互关系。(2)对组和用户的访问权限控制、目录与文件的共享等操作都不能完成。Netscape Navigator3以及更高版本的Web浏览器提供了一种称为LiveConnect的方法，用来实现JavaScript与Java applets之间的通信。因此，在必要时可以同时采用这二种语言来开发高效的Web应用。
3.1 用JavaScript访问Java
　　在JavaScript脚本中可以直接调用Java包中的Java方法。例如：
　　＜SCRIPT LANGUAGE＝″JavaScript″＞
　　java.lang.System.out.println(″Display a String in Java Console!″)
　　＜／SCRIPT＞
　　以上JavaScript脚本执行的结果是在Java控制台窗口中显示字符串“Display a String in Java Console”。
　　当然还可以在JavaScript脚本中访问Java applets方法和变量。(2)对组和用户的访问权限控制、目录与文件的共享等操作都不能完成。
　　服务器上的管理工具是ConsoleOne，这是一个基于Java虚拟机的图形化管理工具，解决了以往服务器运行时除了监视外无事可做的情况。例如，Navigator 3.0对应于Java＿30，Navigator 4.04对应于Java＿404。
　　(3)首先装载applet：要访问1个Java applet的变量和方法，必须首先完全装载applet。
　　(4)通过applet对象访问Java applet：JavaScript通过它的applet对象来访问Java变量和方法。applet对象有NAME属性，但没有方法和事件处理器。事实上，applet对象是document对象的属性，可以通过名称来访问不同的Java applet。
3.2 用Java Applet访问JavaScript
　　LiveConnect同样提供了Java applet访问JavaScript对象和函数的方法。为此，应注意以下几点。
　　(1)使用＜APPLET＞标记的MYSCRIPT属性：要使Java applet能够访问JavaScript脚本，必须在＜APPLET＞标记中设置MYSCRIPT属性。假如没有指定MYSCRIPT属性，当Java applet试图访问JavaScript时会产生异常，显示错误信息，并停止运行。
　　(2)将netscape.javascript包导入Java applet：要使Java applet能够访问JavaScript对象和函数，必须把netscape.javascript包中的JSObject和JSException类导入Java applet中。
　　(3)用JSObject类的getWindow（）方法创建JavaScript窗口句柄：要用Java applet访问JavaScript方法和函数，必须首先取得与加载当前Java applet窗口相关联的JavaScript Window对象的访问权，然后才可以访问Navigator层次结构中创建的其它对象。
　　(4)通过JSObject类的getMember（）方法访问JavaScript对象：JSObject类的getMember（）方法用来访问作为JSO－bject对象属性的对象和数值。该方法取一个String类变元，表示要访问的对象或数值。
　　其间可以选择是否备份原来的系统文件。由于系统安装后ConsoleOne是设成自动加载的，为解决上述问题，可用控制台命令nwconfig修改autoexec.ncf文件，将其中加载ConsoleOne的命令startx.ncf去掉，需要时再用控制台命令startx加载。
　　而语句：
　　textvalue＝（String）text.getMember（″value″）
则把HTML文本框中的值赋给Java的textvalue变量。
　　(5)通过JSObject类的eval（）方法访问JavaScript方法：JSObject类的eval（）方法用来调用JavaScript对象的方法，并将该方法返回的值提供给Java变量。例如，下面的语句：
　　win.eval（″alert（＼″这是一个从Java applet发出的警告！＼″）″）将显示1个警告对话框。
　　JSObject类还有许多其它的方法，这里不再介绍。
4  用JavaBeans开发WWW应用
　　JavaBeans是Java语言软件组件结构的规范。编写JavaBeans与编写一般的Java对象并无多大差别。事实上，当一个Java对象的所有数据域都是私有的，并且只能通过所谓的访问者方法进行访问时，这个Java对象就是一个JavaBean。
　　从编写Java对象到编写JavaBeans只有一步之遥。通过让Java和JVM自动处理复杂性，JavaBeans组件结构的设计显得非常简单。用IPX／NETX方式上网将不能获得Novell的NDS服务，性能大打折扣；16位ODI方式中如果不加载NDS模块（在Net.cfg文件中设置加载NDS.VLM）其效果与IPX／NETX方式相近（除ODI方式支持不同帧以外），而且这2种上网方式都还存在一个共同的问题，那就是不论用什么用户上网，其映射的网络盘都一样（只映射SYS：、SYS：PUBLIC：和SYS：SYSTEM3个盘），也就是说用户的注册脚本失效。访问者方法又分为获取方法和设置方法，分别用来获取和设置JavaBeans的属性值。
(2)事件：JavaBeans在内部使用Java事件模型，同时也使用事件与其它JavaBeans或应用程序进行通信。正是通过事件进行的通信，使得用户能够把相互独立的JavaBeans连接成应用程序。
(3)内查：JavaBeans的内查(introspection)是外部对象分析JavaBeans，以展示其属性、公共方法和事件的功能。
(4)定制：用户可通过定制功能来修改JavaBeans的属性。可以通过属性编辑器修改属性，也可以直接调用设置者方法修改属性。
2  工作站问题
　　NetWare 5.0支持DOS、Windows 95／98／NT工作站。只有通过定制机制显式地修改了属性值时才发生改变。(3)它对于服务器卷、目录和文件的浏览和管理并不像对NDS对象那样要先进行用户的认证才允许操作，安全性不设防。
　　JavaSoft支持把已经编写好的所有Java applets转换为JavaBeans。这些参数和设置的默认值在客户程序安装完后就自动生效，需要根据应用和网络环境的实际情况进行优化和设置，否则就可能会出现应用程序运行性能的下降。
　　与PicApplet.java对应的JavaBean源程序清单（PicBean.java）如下：
　　package ldb.applet；
　　import java.awt.Graphics；
　　import java.awt.Image；
　　import java.net.URL；
public class PicBean extends java.applet.Applet｛
　　private Image imagePic；
　　public void init（）｛
　　　try｛
　　　URL url＝new URL（getCodeBase（），″ldb／applet／picture.jpg″）；
　　　imagePic＝getImage（url）；
　　　｝
　　catch（Exception e）｛
　　　｝
　　　｝
　　public void paint（Graphics g）｛
　　　g.drawImage（imagePic，0，0，this）；
　　　｝
　｝
　　上述源程序经过编译即可得到字节代码PicBean.class。而PicBean.class要和图像文件picture.jpg一起打包进到1个JAR文件（如picbean.jar）中。另外，目前的32位可加载模块不支持无盘启动，即使在工作站内存上开设1个虚拟盘将启动文件全部复制进去也不能启动，加载至Client32.NLM模块时即死机。如第3节的picapplet.html源代码所示，applet的窗口大小在显示该applet的HTML代码中的＜APPLET＞标记中设置。由于Windows 95／98／NT本身的NetWare网络客户、IPX／SPX兼容协议、文件及打印机共享程序与Novell工作站的要求不完全兼容，系统的拨号网络、DCOM95、MFC42.DLL以及部分内置音频／视频驱动程序也可能与Novell工作站程序不兼容，所以，如果冒然安装Novell客户软件，很可能会造成系统网络功能失效，严重时还会导致不能启动。
　　＜HTML＞
　　＜HEAD＞
　　＜TITLE＞JavaBean＜／TITLE＞
　　＜／HEAD＞
　　＜BODY＞
　　＜APPLET CODE＝″ldb.applet.PicBeanclass″ ARCHIVE＝
　　　　　　　　　　　　　　　　　　　　　　　picbean.jar
　　WITH＝120 HEIGHT＝120＞
　　＜／APPLET＞
　　＜／BODY＞
　　＜／HTML＞
5  结束语
　　仅仅能在Java与JavaScript之间交互是不够的，应该学会在什么场合选用什么工具。Java通常适用于以下场合：
　　(1)当需要进行网络访问时，Java可以用多种协议工作，如HTTP、FTP等。JavaScript在这方面受到一些限制。
　　(2)当HTML、窗口和图像映像提供的交互能力不够时，Java可用于实现编辑器、电子表格、动画和图形操纵等工具。
　　(3)当任务中的算法需要一个更为完善、健壮、面向对象的编程和开发环境时，选择Java是明智的。
　　相比之下，JavaScript更适合于为网页元素（如Links、Forms、图像等）增加交互性。由于JavaScript能够直接访问HTML文档大部分元素的对象和方法，故适用于以下场合：
　　(1)向窗口加入客户端的交互性。因为Java不能直接和FORM等网页元素进行交互，所以无法实现窗口验证、动态更新等交互性操作。而这恰恰是JavaScript的长处。
　　(2)快速实现简单算法。以32位ODI方式启动的工作站，连网和协议都不占用基本内存，在扩展内存中也占用很少（只加载IPX协议时仅为3KB），充分体现出其连网的效率与灵活性。但ConsoleOne还存在以下问题：(1)由于Java虚拟机的运行效率问题，它不仅占用内存多（要占用25MB），而且运行速度慢（CPU在200MHz以上才不明显）。不过，转换后的applets只能在Java1.1兼容的浏览器中运行。笔者认为，JavaBeans是今后Java程序设计的发展方向，新的浏览器几乎都兼容Java1.1，假如不需要花费太多精力，还是把applets转换为JavaBeans更好。
　　对于Windows 95／98／NT工作站，首先要安装客户端软件Novell Client for Windows 95／98／NT
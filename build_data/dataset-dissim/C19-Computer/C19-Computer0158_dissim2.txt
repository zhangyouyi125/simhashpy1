微型电脑应用
MICROCOMPUTER APPLICATIONS
2000　Vol.16　No.1　P.62-63



处理消息环中消息的一种安全方法
刘华蓥　韩建民　王桂华
摘　要：本文阐述了Windows下消息映射函数中检测并处理消息的一种安全方法，并给出了程序实例。
关键词：消息　消息环　消息映射机制　GetMessage PeekMessage DispatchMessage▲
一、消息、消息环和消息映射机制
　　Windows 中应用程序和应用程序之间、应用程序和用户之间的通信是靠消息来实现的。首先计算整份试卷中图幅为四分之一页试题的整页数，只要将该图幅试题数除以4取整即得，然后确定合适的插入点依次在每页插入四道题进行排版。Windows中的消息是以一定的规则排列起来，这就是消息环。消息环的结构是一个队列，即“先进先出”。题库的维护和使用都很方便 。
　　消息映射机制是windows编程的基本机制之一，它的优点是编程的结构化；但它也有缺点，就是在处理一个消息的过程中不能检测是否有其它的消息。例如在程序中有一段重复显示动画，或传输文件等时间比较长的操作，如果进程允许被用户中断或终止，进程就必须间或地检测并处理用户发来的消息。其中试题章节、试题特征(每一章节试题根据特征分成若干类)、试题难易程度、优先权(根据教学要求和试题特点确定选择的先后顺序)是查询所需的关键字段。
　　由于用VB编程排版打印复杂，本题库采用在VB中用Auto CAD软件自带的Lisp语言编写排版打印程序，然后在Auto CAD中调用此Lisp程序进行排版打印。但点阵图形所占存储空间比矢量图大得多，上千道试题的图形如果采用点阵格式必将占居庞大的存储空间，使运行速度降低；再者点阵图形无法修改，题库只能设计成封闭型，给题库的维护和使用带不不便。■
作者单位：张国珠(杭州电子工业学院 310037)
参考文献：
［1］张宏 标准试卷自动处理系统概述，管理信息系统，1997.7
［2］左晓明，顾锋，计算机辅助制图试题库管理系统的研制与探讨，江西科学，Vol.16增刊
收稿日期：1999-8-20
。所以用PeekMessage比较安全，PeekMessage用法如下：
　　BOOL PeekMessage (1pMsg, hWnd, wMsgfilterMin, wMsgFilterMas, wRemoveMsg);
　　该函数的功能是检测发送给hWnd窗口并且值在wRsgFilterMin和wMsgFilterMax之间的消息，如有，则将消息放入lpMsg指向的MSG结构中。
　　由于用VB编程排版打印复杂，本题库采用在VB中用Auto CAD软件自带的Lisp语言编写排版打印程序，然后在Auto CAD中调用此Lisp程序进行排版打印。
　　如指定消息没有找到，PeekMessage返回0，否则返回非0值。如果hWnd为NULL，则检测属于本应用程序的所有窗口的消息，如wMsgFilterMin和wMsgFilterMax都为0，则检测发送给指定窗口的所有消息。但由于一般数据库管理系统不支持矢量图形，使矢量图形的管理比较困难。
二、图形的存储格式及数据库管理系统选择
　　选择图形试题存储格式和管理图形试题的非图形信息数据库是开发初期首先遇到的问题。前两个函数是把消息放入消息环中，而DispatchMessage则直接将消息发送到应该处理此消息的窗口，并且等待将这个消息处理完才返回，所以应该用DispatchMessage来发送消息。
三、处理消息的安全方法
　　为了安全检测和处理消息环中的消息，需注意以下几点：
　　首先，在消息环中可能有很多消息，所以检测消息时应一直检测下去直到没有消息为止。
　　其次，如果在处理本消息过程中又做了关闭本程序窗口的操作，若不滤掉关闭窗口的消息直接发送出去，而DispatchMessage语句本身又不在函数的末尾，则会导致内存渗漏，窗口关闭了，但程序还在内存中，且无法再对它进行操作。因此，当进程检测到关闭窗口的消息时应先用goto语句到本函数的末尾，再发送关闭窗口的消息。
　　第三，如果再次在消息环中检测到本消息，并且发送了出去，则会导致二次进入本程序体，从而导致混乱。解决办法是设置一个布尔变量，若该布尔变量为真则表示正在处理本消息。在函数首对此布尔变量进行检测，如为真则直接返回；否则设置为真，处理此消息后在函数尾将它设置为假。
四、程序实例
　　下面举例说明一下，如何在应用程序中安全地检测、处理和发送消息。
　　假设正在处理的消息是ID―EDIT―UNDO, 其中TranslateAccelerator函数的功能是将 加速键翻译成菜单命令并直接将此消息发送到窗口，TranslateMessage函数的功能是将虚拟键消息翻译成字符消息，因与本文无关，不做过多介绍。
　　void D1View::OnEditUndo0
{//IsEditUndo 在头文件中的C1View类中定义为BOOL型
//如IsEditUndo为真，表示正在处理ID_EDIT_UNDO,则不执行任何操作，直接返回
if(IsEditUndo)return;
//将IsEditUndo设置为真，表示正在处理ID_EDIT_UNDO
IsEditUndo=TRUE；
MSG msg1
MSG* msg=&msg1;
BOOL bb,bbb;
　　　……
do{ bb=::PeekMessage(msg,NULL,O,O,PM_REMOVE);
　　bbb=FALSE;
　　//接收到此消息证明用户选择了系统菜单的关闭窗口的命令
if(msgmessage==WM_SYSCOMMAND)&&(msgwParm==SC_CLOSE)
{bbb=TRUE;goto eee;}
//接收到此消息证明用户选择了File/Exit命令
else if ((msgmessage==WM_COMMAND)&&(msgwParam==ID_APP_EXIT))
{bbb=TRUE;goto eee;}
//接收到此消息证明用户在窗口的右上角的叉号上单击了一下
else if ((msgmessage==WM_NCLBUTTONDOWN)&&(msgwParam==HTCLOSE))
{bbb=TRUE;goto eee;}
else
{if(::TranslateAccelerator(m_hWnd,AccelTable,msg)==0)
　　{　::TranslateMessage(msg);
　　　 ::DispatchMessage(msg);}}}while(bb);
　　　……
//将IsEditUndo设置为假，表示已处理完ID_EDIT_UND
IsEditUndo=FALSE;
eee:if(bbb==TRUE)
　　{::TranslateMessage(msg);
　　 ::DispatchMessage(msg);}}
五、结束语
　　消息映射机制是Windows下应用程序的重要组成部分，本文论述了Windows下应用程序开发中对消息进行检测和处理的一种安全方法。
　　试卷模型中每道试题的选取也依赖于产生随机数。■
作者单位：刘华蓥(大庆石油学院计算机系 安达 151400)
收稿日期：1999-07-12

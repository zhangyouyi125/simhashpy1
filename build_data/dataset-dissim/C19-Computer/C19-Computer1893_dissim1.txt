微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000　Vol.19　No.4　P.58-59



优化Ｖｉｓｕａｌ Ｂａｓｉｃ查询的方法
姚卫新
摘 要： Ｖｉｓｕａｌ Ｂａｓｉｃ允许用户使用结构化语言ＳＱＬ从Ｊｅｔ ｄａｔａｂａｓｅｓＭＤＢ文件中取出数据，本文提出了一些优化查询操作的方法。
关键词： 查询 ＳＱＬ语言 优化设计
　　在Visual Basic程序设计中不可避免地要用到查询。本人在总结了多年的使用心得后，全面介绍了查询优化的方法。如果采用直接输入坐标绘制点，然后在点旁用文字标注其高程的话，则文字标注定位不好，而且命令切换频繁，速度非常慢。连接（JOIN）使用的字段必须有相同或兼容的字段。
2　压缩数据库
　　压缩数据库有二点好处：（1）随着数据库中数据量的增加，原有的优化方案可能不再有效，压缩数据库可以最大限度地克服这个缺点。（2）随着数据库中数据量的增加，它就变得比较“零碎”，压缩数据库可以把1个表的数据集中到硬盘的连续页中，提高顺序扫描的执行速度。其中Visual Basic 被称为客户机（Client），是首先开始对话的应用程序；AutoCAD被称为ActiveX服务器（Server），是响应客户机的应用程序。下面的代码其实可作为一段连接AutoCAD的通用代码，也可加上其它错误处理代码，使之更完善。如下例，查询1（Query1）是第2个SELECT语句的输入：
　　Dim DB As Database
　　Dim RS As RecordSet
　　Set DB＝DBEngine．Workspaces（0）．Opendatabase（″Biblio．MDB″）
　　DB．CreateQueryDef（″Query1″，″SELECT IIF（Au＿ID＝1，′Hello′，′Goodbye′） AS X FROM Authors″）
　　Set RS＝DB．OpenRecordSet（″SELECT * FROM Query1 WHERE X＝′Hello′″）
　　查询1中的IIF（）表示式不能被优化，所以第2个SELECT语句中的WHERE条件也不能被优化，故整个查询就不能优化。
　　Graphical（图形）对象即实体是可见的对象，如Line、Point、Circle等等，都是在图形文档中所能见到的具体图形元素。
　　本程序在Visual Basic 5．0企业版上（操作系统为Windows 98）调试通过。
　　例：下面的查询效率较低，因为SUM的字段在Ord表中，而GROUP BY的字段在Cust表中。
　　SELECT Cust．CustID，
　　　　　　FIRST（Cust．CustName）AS CustName，
　　　　　　SUM（Ord．Price）AS Total
　　FROM Cust INNER JOIN Ord ON Cust．CustID＝Ord．CustID
　　GROUP BY Cust．CustID
　　例：下面的查询效率较高，因为SUM和GROUP BY的字段均为Ord．CustID，它们来自同一个表。
　　SELECT Ord．CustID，
　　　　　　FIRST（Cust．CustName）AS CustName，
　　　　　　SUM（Ord．Price）AS Total
　　FROM Cust INNER JOIN Ord ON Cust．CustID＝Ord．CustID
　　GROUP BY Ord．CustID
5　分组字段越少越好
　　GROUP BY中的字段越多，查询花费的时间越长。使用FIRST（）累计函数有助于减少GROUP BY语句中字段的个数。
　　效率低的例子：
　　SELECT Cust．CustID，
　　　　　Cust．CustName，
　　　　　Cust．Phone，
　　　　　SUM（Ord．Price）AS Total
　　FROM Cust INNER JOIN Ord ON Cust．CustID＝Ord．CustID）
　　GROUP BY Cust．CustID，Cust．CustName，Cust．Phone
　　效率高的例子：
　　SELECT Ord．CustID），
　　　　　　FIRST（Cust．CustName）AS CustName，
　　　　　　FIRST（Cust．Phone）AS Phone，
　　　　　　SUM（Ord．Price）AS Total
　　FROM Cust INNER JOIN Ord ON Cust．CustID＝Ord．CustID）
　　GROUP BY Ord．CustID
6　在连接前嵌套GROUP BY语句
　　如果连接二个表并且用其中1个表中的字段进行分组，把该SELECT语句分解为2个查询语句更为高效。把带有GROUP BY子句的SECECT语句作为1个嵌套查询加入到上层查询的非分组表中。AutoCAD也有1个文件acad．tlb存储了类的信息。
　　然而，如果有1个表相对比较小（占1－2页面），就不必要对该表建索引。这样读到内存中的页比较少，所以，是否对表建索引要看情况而定。它为AutoCAD图形及非图形对象操作提供入口，因为每个特定对象的操作都是在AutoCAD某个绘图文档中进行的。如果需要它们的详细信息，可在AutoCAD的在线帮助中找到。另外，这二个操作略有不同：COUNT（*）计算返回的所有行，COUNT（［字段名］）仅计算该字段名不为NULL的行。AutoCAD也有1个文件acad．tlb存储了类的信息。
11　避免LIKE中的通配符在开头
　　如果使用LIKE操作符来寻找匹配的行，通配符不能在开头位置，否则索引不起作用。下面的例子索引起作用：
　　Like ″Smith″，Like″Sm*″
　　而下面的例子索引不起作用：
　　Like ″*sen″
　　Like ″*sen*″
12　使用中间结果表（临时表）
　　使用语句建立临时表，尤其是当查询结果要被其它的查询使用时，应尽量使用临时表，其效果非常显著。
13　避免NOT IN与子查询一起使用
　　NOT IN与子查询一起使用效果非常差，最好将其转化成嵌套查询或使用OUTER JOIN。创建这些对象是通过它们的相应方法AddEntiname来实现；也允许使用如Copy、Erase、Move等等的方法来实现对实体的编辑
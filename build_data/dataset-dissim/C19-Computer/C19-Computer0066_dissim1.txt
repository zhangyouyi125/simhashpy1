计算机应用
Computer Applications
1999年 第19卷　第8期 Vol.19　No.8 1999



分布式对象在软件系统集成中的应用
郑无疾　张建军　朱山风
　　摘　要　分布对象是一些灵敏的软件模块，它们可以位置透明，语言独立和平台独立地相互发送消息。本文主要探讨将分布式对象技术应用中出现的各种问题及其解决方法。
　　关键词　分布式对象，系统集成，组件
DISTRIBUTED OBJECT TECHNIQUES
IN SOFTWARE SYSTEM INTEGRATION
Zheng Wuji　Zhang Jianjun　Zhu Shanfeng
School of Computer Scinece, Wuhan University，Hubei.Wuhan 430072
　　Abstract　Distributed objects are intelligent software models. They can send messages to each other transparently with location language and platform. In this paper, we focus on the questions and solutions related to distributed object technology.
　　Keywords　Distributed object, System integration, Component
1　背景
　　传统的Client/Server结构对Client和Server的角色划分相当清晰，将整块软件切分为二：一部分运行在Client端，一部分运行在Server端，通过如远程过程调用（RPC）机制来实行简单的互操作，协同工作完成任务。
　　随着计算机网络技术的飞速发展，特别是Internet/Intranet爆炸式的规模扩充，各种业务开始在Internet上进行。在这些业务对网络计算提出了更高的要求的情况下，第一代的Client/Server结构开始暴露出不足之处：首先，这种结构对Client和Server的角色分工过于严格，而实际情况是在许多网络应用中，分不清谁是Client，谁是Server，两者界限非常模糊，如网络医疗会诊；其次，基于RPC的互操作直接将Client和Server连接起来，并没有中间机构来处理请求。
2　分布式对象
　　第一代的Client/Server系统多是针对局域网的。 

图 3 流出 VC 变成未用 VC 的过程 
　　使上游节点的正在使用的流出 VC 变成未用 VC 的过程如图 3 所示。由于对象技术有处理复杂系统的能力，人们将对象技术引入了分布环境以解决面临的这些问题［1］。
　　传统的对象可以被看作是封装了数据和作用于这些数据的操作的自包含的实体。 
　　(2) 当下游节点收到一条 RECLAIM 信息，它将相应的流入 VC 打上“未用”标记，并向下下游节点发送 RECLAIM 信息同时向上游节点返回一条 RECLAIM-ACK 信息。对象技术通过将相关数据及操作与系统的其它部分隔离，而使得系统的构建与维护工作变得容易。
　　传统的对象只“驻留”在一个程序之内，在程序编译时也不会分裂成多个实体。如图 1 所示。通过中间件（Middleware）包含的标准通讯协议，由各种不同的语言编写和由不同编译器编译的对象可以无缝地进行通信以构成一个完整而健壮的系统。这样的对象框架保证了分布对象间的高度透明的互操作性。 
　　(3) 一旦上游节点收到 RECLAIM-ACK 信息就将该 VC 标记为“未用”。我们称这些独立的对象模块为组件。显然这可减少交换机间的控制业务量。这些对象组件成分可以是由一些不同的开发者相互独立地使用不同的语言或工具构造的。 
　　这种优化仅在这些节点起作用，它们的 TCP 流的前向路径对称 ( 即该流的正向的流入端口正是它的反向流出端口 ) 。组件用于实施应用领域内的一些有限的服务，它可以和其它组件一起构成完整的应用。组件的粒度可大可小；组件具有良好的接口，同经典对象一样，组件只能通过其接口来访问；组件的实现与其接口是分离的，组件可以使用对象、过程式代码或封装现有的代码实现；组件是系统无关的，可以作为对象跨越地址空间、网络、语言、操作系统和工具来调用；组件还可支持封装、继承和多态等对象特性。总之，组件是可复用的，自包含的，独立与具体应用的软件模块。
　　目前使用较多的组件标准是CORBA（Common Object Request Broker Architecture）和DCOM(Distributed Component Object Model)。CORBA是对象管理集团(Object Management Group, OMG)在其对象管理结构(OMA)框架之下以对象请求代理(ORB)为核心制定的分布对象标准。它定义了对象之间通过ORB透明地发送请求和接收响应的机制，保证了在分布异构环境下对象之间的互操作性［2］［3］［4］。
关键词：IPSOFACTO；IP交换；交换路径
IPSOFACTO--IP Switching over Fast ATM Cell Transport
Xu Fei,XuXiaoming,Yang Yupu,Sun Hairong
(Dept.of Automation,Shanghai Jiaotong University,Shanghai 200030;
State Key Lab.of Optical Communication,University of Electronic and Science technology,Chengdu 610054)
【Abstract】In this paper a techonology of setting up path through an ATM switch without signaling system and reflection IP flows to an ATM switch is presented.The function of IPSOFACTO is to reflect IP flows to an ATM switching path.
【Key words】IPSOFACTO;IP Switching;Switching path
　　ATM 技术本身是一种新的网络体系，目前达到标准化并已实现的主要是低层通信支持环境：物理层、 ATM 层和 AAL 层，相当于 OSI 物理层和链路层的协议。DCOM中主要使用ActiveX组件作为其对象。在将来，Java对象也可能会被作为其对象。和CORBA一样，DCOM中的接口是和功能分开的。


图2　DCOM组件结构
　　微软使用了基于DCE(Distributed Computing Environment)的IDL (Interface Definition Language)来达到这一目的。由于这一IDL和CORBA和DCE的不兼容性，将严重限制这一标准和其它标准的互操作性［1］。
4　软件系统集成
　　根据应用需求，将若干软件系统集成在一起协同工作。 
　　如果上游节点在一定的时间内未收到 RECLAIM-ACK 信息，将向下游节点重发 RECLAIM 信息。而要拆卸这条 ( 即将其标记为“未用” ) ，可通过发送 FIN 分组和 FIN 的应答分组到交换控制器 ( 而不是交换路径 ) 来实现，也就是说，这些分组被用作“控制”信息了。
　　由于计算机应用软件系统的规模越来越大，复杂性越来越高，从零开始开发这样的软件系统显得很不现实。在组件标准的支持下，我们可以充分利用已有的可用软件资源，包括自己本地开发的，市场上可以买到的以及其它公用软件资源作为软部件进行系统集成，也就是要将这些软件进行“粘结”，实现它们之间的互用和互操作，实现客户化，满足应用要求。随着软件产品市场上各种各样的商品软件的出现和接口的标准化，用系统集成的方法开发应用软件已显得越来越重要了。
　　系统集成涉及到软件系统结构、技术和市场等诸多因素。 
　　(3) 一旦上游节点收到 RECLAIM-ACK 信息就将该 VC 标记为“未用”。
　　与传统的定制式应用软件开发相比，软件系统集成的人员结构亦将发生新的变化。软件开发人员将分化两部分，一部分是软组件/部件制作人员，另一部分是应用系统分析和装配人员。应用开发人员结构的演变如图3所示。


图3　应用开发人员结构演变
　　目前，在软件工程的各个方面正发生巨大的变化。在可以预见的将来，软件自动化也将对软件的生产过程产生巨大的影响。
　　软件系统集成将面向对象技术作为其基础。但是，软件系统集成的要求更高。如何在已经成为事实的组件标准上建立一个实用的软件系统集成开发流程，在这一方面的作者试图提出一些方法［2］。 
　　IPSOFACTO 与传统的 ATM 网络支持 IP 的方案 ( 如 IPOA 、 LANE 等 ) 一样，解决了 ATM 网络支持传统数据通信业务的问题，并表现出了其优越性，但它也不能为不同的用户提供特定的服务质量 (QOS) ，即不支持多媒体通信。 
　　对于 PIM “控制”分组与数据分组的区别是 IP 信头的协议号。对已有的软部件进行有效管理。
　　CSCW(Computer Supported Cooperative Work)是当前计算机研究中的一个热点。目前，此类工具多用在非计算机领域的创作、研究和开发工作中。我们将尝试把CSCW的概念、方法引入软件系统集成的集成开发环境中。
作者简介：郑无疾　张建军　朱山风　均为硕士研究生。研究方向：分布并行处理系统。
作者单位：郑无疾　张建军　朱山风　武汉大学计算机科学与技术学院　湖北.武汉（430072）
参考文献
　［1］　Scoff.M.Lewandowski. Frameworks for Component-Based Client/Server Computing. ACM Computing Surveys, 1998;30(1)
　［2］　P.J.Houston, F.G.Wilkie, T.J.Anderson. Component-based development. CORBA and RM-ODP. IEE Proceedings Software, 1998；145(1)
　［3］　陈　滢,樊惠娟,王能斌. 分布对象技术综述. 计算机科学, 1997;24(3)
　［4］　汪　芸,兑继英,顾冠群.开放分布式处理的新发展-CORBA规范,计算机科学, 1997;24(3)
　　收稿日期:1999-02-08

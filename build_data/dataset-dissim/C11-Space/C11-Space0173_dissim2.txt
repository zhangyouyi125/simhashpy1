宇 航 学 报
JOURNAL OF ASTRONAUTICS
1998年  第3期   No.3 May   1998
科技期刊
反编译在航天工业中的应用*

赵　蕾　吴　岩　王开铸
(哈尔滨工业大学计算机系319信箱*哈尔滨*150001)
　　摘　要　本文论述了反编译作为一种程序验证的工具在航天工业中的重要地位和应用;介绍了反编译的背景知识;给出一个实用的反编译系统DCPL的设计模型和关键技术及其一个运行结果示例以说明反编译器的功能。
　　主题词　反编译　软件工具　程序验证　程序可靠性
APPLICATION OF DECOMPILATION 
TO AEROSPACE INDUSTRY

Zhao Lei　Wu Yan　Wang Kaizhu
(Department of Computer Science and Engineering 
BOX 319,Harbin Institute of Technology*Harbin*150001)
　　Abstract　In this paper,the significance and application of decompilation as a program verifying tool in Aerospace Industry is discussed;the background knowledge of decompilation is introduced;a model of a practical decompiler DCPL is presented as well its result to show its function.
　　Key words　Decompilation　Software tool　Program verification　Program reliability
1　引　言
　　航天工业是各国竞相发展的一项事业。航天器的各部分都离不开计算机的控制,各种控制软件、计算软件、分析软件等等在航天器的设计与应用中起着重要地位。
　　1996年6月4日阿里亚娜-5型火箭发射失事,使欧共体蒙受25亿美元以上的损失。本实验研究中使用中断来处理数据采集和实时控制。此软件是从阿里亚娜-4型火箭的软件系统中移植过来的,由于5型火箭上增加了新机构,而4型火箭的软件不能对这些新机构发出的信号进行分析和处理,从而导致火箭控制失灵。由于阿里亚娜-5型火箭发射的失事,使软件可靠性和正确性问题再度摆到软件开发者面前［1］。反编译器作为一种有效的程序验证的工具使人们再度意识到它在航天工业中的重要性及实用性。本文介绍了反编译器的功能、产生背景和它在航天工业中的应用,并给出了我们正在研制的一个实用反编译系统DCPL的体系结构及关键技术,最后给出其一个简单的运行示例。
2　反编译的背景知识介绍
2.1　反编译的定义
　　反编译可以看成是编译的逆过程,即将以机器语言形式存在的目标代码翻译成与其功能等价的高级语言形式的代码的过程［2］。归一化处理对网络权值训练非常重要,其能够有效提高网络学习速度,减少训练时间。
2.2　反编译的产生背景
　　反编译(Decompilation)一词第一次出现于1960年。显然这是一静态过程。
2.3　反编译在航天技术中的应用
　　反编译发展至今,其应用领域主要体现在软件维护和软件安全性［2］两方面。用于软件维护时,主要是恢复丢失的源代码、将软件移植到新的硬件平台、重新结构化旧有软件等等。用于软件安全性时,主要是针对安全性要求极高(safty-critical)的软件,发现其中是否有病毒,或是否有隐藏的窃密程序(Trojan)。
　　西方各国早已将反编译技术用于航天事业和尖端工业,如:IBM为NASA的航天飞机研制的反编译器［3］;澳大利亚电子研究实验室研制的针对类Pascal语言的反编译器［4］;欧共体ESPRIT计划中的反编译研究,如英国的核工业部使用反编译技术验证大量的safty-critical软件,以提高软件的正确性［5］;我国从80年代初开始反编译的研究并且已逐步形成自己的产品［6］,但尚未见将反编译技术应用于航天技术的报导。
　　用于航天的软件系统通常不经过编译优化以避免不必要的软件错误,反编译此类软件的难度相对减小。可以通过将内存映象的反编译结果与原始输入(源程序)相比较来验证软件的正确性,如果二程序完全等价,则编译结果可靠(反编译可靠的前提下)。选用多层前向网络实现,设计每个网络含一个输入节点,一个输出节点,根据样本数量,选用8个隐节点。同样也可通过比较原始程序和反编译结果在程序功能空间中的拓朴结构是否完全一样,来判定反编译是否做到了输出结果与原始程序功能等价,这通常要经过大量的测试。
3　一个实用反编译系统DCPL的体系结构
　　DCPL是我们研制的一个反编译系统,其设计吸收了编译技术中的成熟理论。
3.1　DCPL体系结构
　　下图给出了DCPL的模型。它以可执行文件作为输入,输出与其对应的C语言程序。


图2　DCPL体系结构
3.2　DCPL各模块的功能
　　(1)预处理器:是DCPL的基础,以可执行文件作为输入,将其部分反汇编,根据程序的启动代码,提取出相应的数据段和代码段,存储在中间文件中。
　　(2)库函数识别器:是对中间文件的一遍扫描。根据库函数特征表识别出文件中所有库函数和用户自定义函数的入口。
　　其中位置传感器采用电位器,角位置传感器满量程输出为5V,对应180°位置,最小电压分辩率为0.01V,控制信号和位置传感器信号经过HY-1232数据采集板进出计算机。索引函数的形式为:index(len,n)=w1*len+w2*n;其中len和n分别为函数主体的长度和它所调用辅函数的次数。用一指针数组指向各个特征链的头结点,数组的下标值是索引函数作用于各个特征结点上的结果;同一个链上的各个结点的特征值经索引函数作用后其值相同;链表内部,各结点依照使用频率顺序存放。
　　(3)控制流分析器:根据反编译控制流文法,以语法制导的方法进行控制流的分析和归约,生成控制流模块的机内表示形式及其结构文件。首先选择区间［-0.5,0.5］内的20个均匀分布的速率样本(单位rad/s)训练网络权值,测试信号为速率0.1rad/s的低速斜坡信号,比较补偿前后系统的跟踪精度,在跟踪过程中再给出定位信号,试验结果如图4(a)和图4(b)所示,其中,图4(a)是补偿前的误差曲线,图4(b)是补偿后的误差曲线。用移进-归约策略和模式匹配方法相结合进行分析和归约。
　　(4)数据流分析器:根据库函数识别器提供的库函数参数信息和函数返回值信息、控制流分析器得到的基本块划分信息进行变量恢复。具体实现时分两步走:<1>变量定值-应用信息的收集和综合
　　为每个变量构造定值-应用链。其模型是双向链表,如下图所示:


图3　定值-应用链的一个结点模型
定值-应用链是记录变量定义和使用信息的数据结构,其define指针指向定义它的语句,use指针指向在它被重定义之前所有使用它的语句(即该变量出现在赋值语句右边的情况)。定值-应用链可以推理相关联的简单类型变量的类型(字符型、整型等)。即可由电枢电流换算出扰动力矩F(ω)。求精过程利用了汉语处理中的分词思想。将同时出现次数超过阈值的一组内存单元和寄存器绑在一起,形成一个token(一个复杂的数据类型),阈值可根据结果进行调整。这是一个反馈过程,用于恢复复合数据类型(数组、结构等),规则型如:call a［］-＞initiate array;exist(loop,index si,base bx)-＞assign array;(add ax,adc dx)-＞addition long等等。接口板提供32路单终端的数据采集通道,其性能达到±0.03%的精度和12位的分辩率。
　　(5)优化器:将前几个模块生成的结果进行综合分析,去除冗余变量和中间语句,如中间变量和指令,进行语句的合并和流程的结构化。
　　(6)翻译器:将前述模块生成的机内表示形式翻译成C语言程序形式,输出给用户,完成反编译的任务。
3.3　系统的一个运行结果举例
　　下面是一个简单的C语言程序以及其目标代码的反汇编形式和应用于DCPL的输出结果。本实验研究中使用中断来处理数据采集和实时控制。近几年各国因航天器的软件可靠性较差导致的种种航天发射失败所造成的不必要的人员伤亡和财政浪费,使得软件正确性验证日益显现出重要性。
　　采用式(5)给出的权值调整方法,在实验中发现有两点不足。我国在该课题上的研究尽管起步较国外晚,但现已取得了长足的进展。经济国内反编译同行的研究和实践,现有的反编译系统基本达到了验证简单程序的要求,但要反编译大规模的软件,诸如用于航天计划中的软件,还需要深入的研究。将反编译技术应用于航天领域以提高航天器材的可靠性,航天发射的成功率,航天器运行的正确性,确实是一个很有前途的研究方向。

(5)
　　反馈误差学习控制是一种在线控制方法
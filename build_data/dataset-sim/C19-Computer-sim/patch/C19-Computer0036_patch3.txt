计算机工程
COMPUTERENGINEERING
1999年　第25卷　第7期　Vol.25　No.5　1999



界面类对象测试建模技术研究
顾玉良　王立福
摘要　目前,大量OO应用软件彩用图形界面,对这类软件的测试尚缺乏有效的技术支持。分析了这类软件的特点，基于用户-应用系统交互和应用系统-系统环境交互的视角，提出了一种界面类对象状态测试建模技术，从面支持这类软件的测试。
关键词　面向对象软件测试测试建模状态模型
The Technical Research of Test Modeling of User Interface Object Class
Gu Yuliang Wang Lifu
Dept.of Computer,Capital Normal Univ.Beijing 100037
Computer Dept.of Beijing Univ.Beijing 100037
Abstract：Until now,there is few technical support to testing of OO software with GUI.Based on features of interaction between user and application system and features of interaction between application system and system environment,the paper prompts a techinique of state modeling of the user interface objects.
Key words：Object-oriented software testing;Testing modeling;State model
　　测试建模建立被测对象的模型,被测对象模型可以根据规约建立,也可以根据程序源代码生成。原则上,功能和行为模型应该根据规约建立,但是,规约通常缺少支持测试的特性,同时,规约一般具有多义性和矛盾性。虽然许多面向对象方法提供了(功能)行为建模的方法,但在实践中,有相当数量的软件没有完整的文档,难于为测试提供必要的支持。
　　目前,测试建模技术对建立可控制性和可观察性缺乏支持;在如何支持集成和系统测试等方面缺乏研究[1][5]。
　　状态转换图是描述行为模型的常用工具。球体、立方体、圆柱等简单的模型,可以利用这些辅助函数来实现,如函数auxSolidSphere(GLdouble r)，绘制一半径为r的实心球体。
　　为解决以上问题,本文提出了一种界面类对象状态建模技术,以支持具有图形界面的面向对象软件的测试。因此建立链表结构TXT记录装配部件的信息，链表结构DXF记录一部件中同材质的体素集的信息，链表结构POLYLINE记录体素的信息。从用户角度来看,用户界面可以看作是应用系统本身。进一步说，用户与应用系统的交互是由窗口系统控制的，类库扩充了这种控制机制。在应用系统的每个界面类中，包含了处理用户交互消息的方法。当应用系统执行时，系统的用户与窗口进行交互，导致系统环境产生并传递相应的用户交互消息，由应用系统的界面类对象进行处理。所以，应用系统的界面类对象通过系统环境，最终与用户发生交互。如果某些界面类对象与另一系统的界面类对象通信，它们就组成不同应用系统之间的边界。
　　直接对系统环境、类库对象和非界面类对象建模非常困难，且难于控制模型规模。为此，考察界面类对象的行为，通过界面类对象来看应用系统的行为，据此实现应用系统的测试。我们所介绍的这种方法，相信会对其它类似系统的图形建模提供借鉴。
2　界面类对象交互状态模型
　　界面类对象交互状态模型是一种对象状态模型，它描述了对象类中所有对象的共同的行为。其中包括两个基本概念:交互状态表达界面类对象等待用户交互所处的阶段，在一个交互状态下，界面类对象可以等待不同类型的交互;状态转换表示界面类对象从一个交互状态到下一个交互状态的变化过程，由消息到达事件触发，体现对象的动态特性。界面类对象交互状态模型用下面定义的OSN(Object State Net，本文称为子网)表示。
　　定义1 OSN是一个五元组(P，T，F，p0，M0)，它满足如下条件：
　　(1)　P 是有限位置集；
　　(2)　T 是有限变迁集；
　　(3)　p0∈P，M0={p0}是初始标识，称p0是初始位置；标识是包含一个位置的集合；
　　(4)　OSN没有孤立元素，P≠￠,T≠￠，A≠￠；
　　(5)　Fс(P×T)∪(T×P)是关系集合；
　　(6)　任何位置至少有一个前继和一个后继，即：对p∈P，有*p≠￠，p*≠￠；
　　(7)　任何变迁至少有一个后继，有且仅有一个前继，即：对t∈T，有*t≠￠，t*≠￠，且如果ョp1∈*t，p2∈*t，则p1=p2。
　　这里，用位置表示界面类对象的交互状态;变迁表示界面类对象的状态转换;p0表示界面类对象创建完成后的初始状态，在该状态下，对象准备响应消息。这里，我们用一个ASP服务器组件实现之。
　　对一个OSN，如果其中包含的变迁数|T|=n，根据定义1(6)(7)，可以得到|P|的上限，|P|≤n。证明方法如下：把该OSN中从T到P的所有关系去掉，于是,对p∈P，存在多于一个t∈T与p对应，所以，|P|≤|T|，即|P|≤n。由于|T|的数量较少，所以，|P|+|T|的数量较少。一个应用软件的界面类数量也较少，从而使模型的规模得到了有效控制。主要研究方向：起重机CAD及计算机仿真技术。可以把这些都安装在同一台机器上，这样可以在单机上方便地编程、调试。
　　(3)　触发序列完整性规则 一个完整的触发序列导致子网从p0到p0的1次或多次环行，它是子网执行的必要条件。但是OpenGL只能通过其基本图元来绘制几何模型，不具备实体造型能力。但是用这些函数建立复杂的三维实体模型非常困难。
4　在ASP页面中使用服务器组件
　　下面将建立一个ASP页面以测试我们的Server SideComponent。
　　关键词　ASP，服务器组件，Web页面，图形显示
1　ASP服务器组件
　　ASP服务器组件（Server Side Component）实际上是运行在服务器上的一个DLL，它可以完成常规DLL胜任的任何任务。为了增加材质信息，将同一材质的体素作为同一DXF文件输出，这样多个体素集组成一个部件形体。所以，把非界面类对象、相关类库对象、系统环境看作是界面类对象之间、界面类对象与用户之间通信的“信道”，在其中传递两类与实际消息序列等价的消息：
　　(1)　用户交互消息(UM，简称交互消息)
　　用户交互消息由用户与系统交互动作导致，传递到界面类对象并触发其状态转换。本文用一个ASP服务器组件实现了Web页面上的随机图形显示。可能导致界面类对象产生消息的事件包括: 界面类对象交互状态转换事件和生存周期状态转换事件。这里，我们用一个ASP服务器组件实现之。
　　进入状态是一个瞬态，表示对象创建的初始状态。
　　在该工程中建立ASP页面，点击菜单File | New ，在New 对话框中选Files | Active Server Page ，并指定其名字：Randimage.asp。
　　一个界面类对象处于暂停状态时，存在于内存中，但当前不能响应UM消息，可以响应IM消息。ACIS技术允许对实体做更完整更精确的描述，在建立复杂实体时，仍需对基本体素做布尔操作，但计算机内不再使用CSG树，而是利用ACIS机制生成实体的B-rep表示。对处于活动状态的对象发Pause消息，则该对象进入暂停状态，对象当前状态被保存。
　　一个界面类对象处于活动状态时，可以响应用户交互消息和界面类对象消息。在任何时刻，同类的对象中，只有其中一个处于活动状态。但是，DXF文件考虑的仅仅是几何、拓扑信息，而没有材质这样的物理信息，一个部件往往由不同材质的零部件组成，因此在真实感图形显示时必须有材质信息。
　　终止状态是一个瞬态，表示界面类对象从系统中消失。对处于活动状态或暂停状态的对象发Stop消息，该对象进入终止状态。
4　界面类对象状态建模步骤
　　采用以下的步骤进行界面类对象状态建模:
　　(1)　识别界面类 在文档和源代码中识别出界面类的集合，每个界面类采用平面化表示，用一个子网OSN表示该界面类的对象的交互状态模型。为了增加材质信息，将同一材质的体素作为同一DXF文件输出，这样多个体素集组成一个部件形体。然后分析界面类的方法，如果其处理过程包含交互状态，则按如下方法在该子网中生成若干相关的变迁和位置：
　　・标识变迁t∈T。为了方便测试，拷贝几个图形文件到Images文件夹中，文件类型可以是浏览器支持的任意图形文件，如GIF、JPG、BMP等。真实感显示还要求部件的材质信息。对于已经标识的变迁，存在等待该交互类型的状态和转换发生后的状态，如果相应的位置尚未生成，则生成之。每个变迁可以有若干后继，但只可以有一个前继。所以，我们在最近研制的起重机部件装配仿真系统中用AutoCAD作为造型软件。
　　・连接位置和变迁。根据上面确定的关系，生成关系e∈A，连接相关的位置p∈P和变迁t∈T。
　　(3)　确定子网之间的消息关联对一个OSN，考察所有已标识的变迁。如果该变迁的发生可能导致其它子网的变迁发生，则定义一个IM消息，把该变迁与目标变迁相关联。如果该变迁的发生可能导致其它界面类对象的生存周期状态转换，则根据该转换的类型，定义相应的预定义消息IM，把该变迁与目标子网相关联。
　　在该界面类对象的生存周期状态转换图中，对于4个预定义消息引起的状态转换，分别生成可能导致的IM消息，并根据消息把该子网与目标子网或目标子网的变迁相关联。
　　POLYLINE实体描述中的信息包括：形体的所有顶点坐标；组成三角形面片的顶点号，顶点按符合右手法则的顺序排列。在确定消息时，可能目标子网还没有生成，则该工作在目标子网生成后继续。如果不把Images映射到物理路径则组件找不到该文件夹，无法正常工作。
　　界面类对象生存周期状态转换图和交互状态转换图体现了界面类对象区别于非界面类对象的一些重要特性:
　　・容易确定各个用户交互类型及对应状态；
　　・用户交互导致了界面类对象的状态转换，通过模拟用户交互，可以驱动界面类对象(可控制性)。
　　由于简单地用图元来绘制各部件或者重新开发一个几何造型系统不现实，所以只有考虑采用现有的造型软件建立几何模型，例如，用户可以通过其它建模工具3D MAX、AutoCAD等来辅助建立三维实体模型数据库。
5　相关工作
　　基于以上技术，实现了一个支持具有图形界面的面向对象软件测试的原型系统JB-OOTE。这里，通过介绍测试执行系统，说明界面类对象状态模型如何支持和实现被测对象控制和观察机制。测试执行系统的结构如图2所示。

图2　测试执行系统
　　模拟执行器是测试执行工具的核心部分。在测试执行时刻，模拟执行器在界面类对象状态空间内模拟被测对象的运行，与被测对象同步。对应于每一个界面类对象，生成一个对应的模拟对象，用三元组<对象标识，对象值状态标识，子网标识>表示。
　　目前支持ASP的有IIS（Internet Information Server，WinNTServer 4.0自带）和PWS（Personel Web Server，用于Win95环境）。布局调整要求部件的变换矩阵数据。对于模拟系统中当前活动的子网，其每个位置是一个检查点，在每个检查点上，可以由测试脚本定义所需的检查，由模拟执行器实施相应的检查。并要求安装Visual InterDev中的Server Components：FrontPage Server Extensions、 Active Server Pages和ClientComponents：Visual InterDev Client。但一旦我们的Web页面设计完成，这个图形也就确定下来。可以把这些都安装在同一台机器上，这样可以在单机上方便地编程、调试。不同之处是：它由ASP页面调用、并以Web页面为交互对象，读入用户的输入（Web页面上各输入域的值），处理后返回结果到Web页面。
　　不需要专门在程序中建立复杂的控制逻辑，用程序插装工具对方法进行插装；在界面类中增加了用于对象值状态检查的方法DoCheck(...)，检查的内容由测试设计决定。原型系统把源代码转换为测试代码，除了必要的状态检查的方法代码由用户编写，其余工作可以由原型系统自动完成。测试代码不改变源代码的结构，从而保证源代码的逻辑完整性和一致性。完成后的代码如下：
<%@ LANGUAGE="VBSCRIPT" %>
<html>
<head>
</head>
<body>
<h5>测试randimage 组件，随机显示一个图形文件<h5>
图形文件路径: <%=server.mappath("images")%><br>
<%
set ox=server.createobject
("randshowfile.randimage")′实例化组件
ox.filepath=server.mappath("images")
%>
<img src="<%=ox.filepath&ox.show%>">
<%set ox=nothing ′使用后释放组件%>
</body>
</html>
　　由于Web页面使用的路径（URL）都是虚拟路径（VirtualDirectory），必须使用server.mappath()将其转换到物理路径（Physical Directory）。
6　结束语
　　针对具有图形界面的面向对象软件的测试，本文提出了一种界面类对象状态建模技术。该技术体现了对象封装、通信和动态特征，使得对象状态易于识别，模型规模容易控制，并且支持建立被测对象的控制和观察机制。
*本项研究得到国家"九五"重点科技攻关项目资助
作者简介：顾玉良 男，34岁，博士生，主研领域为软件工程和软件测试
作者单位：顾玉良　首都师范大学计算机系北京100037
　　　　　王立福　北京大学计算机系北京100037
参考文献
1　Arnold TR,Fuson WA.Testing in a  Perfect World.Comm.of ACM,1994,37(9)：79
2　Binder RV.State-based Testing.Object Magazine,1995,5(4)：78
3　Binder RV.The FREE  Approach for System Testing.Object Magazine,1996,5(9)：73
4　Hsia P.Testing of Object-oriented Programs.YIGA'97 Seminar：65
5　Murphy GC,Townsend P,Wong PS.Experiences with Cluster and Class Testing.Communication of ACM，1994，37(9)：39
收稿日期：1998-08-03

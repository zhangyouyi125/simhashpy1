计算机应用
COMPUTER APPLICATIONS
1999年 第19卷 第6期 Vol.19 No.6 1999



PowerBuilder的若干公用对象设计
李振华　吕国斌　墙芳躅
　　摘　要　在PowerBuilder开发过程中，将常用操作做成公用对象，并存入公用库（.pbl）中，这种设计方法有利于提高程序的可重用性和可维护性。设计公用对象的一种方法及其设计实例在本文中作了探讨。
　　关键词　PowerBuilder，公用对象，公用库
引言
　　PowerBuilder作为主要的数据库前台开发语言，已得到了广泛的应用。但在实际的开发过程中，特别是在大型的开发项目中，某些操作总会多处重复出现，比如查询、打印等操作，几乎在每一个窗口里都会出现。如果每出现一次这样操作都相应的为其写一次程序的话，那么，这些不同窗口中的程序是相似的甚至是重复的，这既增加了程序的编写工作量，又增加了程序的维护工作量。一种可行的方法是将这些常用操作做成公用对象，并存入公用库（.pbl）中，这样，在程序设计时便可直接地调用或使用这些对象。这种做法既提高了程序的可重用性和程序编制效率，又提高了程序的可维护性。
1　设计思想
　　公用对象的设计难点在于其通用性的设计：能普适几乎所有的操作要求，同时其程序设计又必须保持独立。
　　算法1：　数组位置转为多维空间位置矢量
　　Procedure Vector2Index(Vector V(v0,……vN-1))
{ index = 0; //N是数据立方的维数
for (i=0; i<N-1; i++)
{
index += vi; 
index *= (｜DI+1｜+1);
} //end for
index += vN-1;
return index;
}
3　数据立方的存储方案
　　当数据立方的维数增加时，查询代价迅速增加。当然，采用此种方法，设计的关键就在于传递参数的选择及其处理。
2　几个设计实例
　　以下将要讨论的几个公用对象按其性质可以分为两类：窗口和自定义控件。相应的，它们的使用方式也不相同，公用窗口需带参数的调用；而控件则可直接在父窗口中被使用。G为一聚集函数。
2.1　窗口类
2.1.1　查询窗口
　　查询窗口的设计流程是：在获取了被查询数据窗口的有关参数后，即弹出本窗口，由用户在本窗口
中构造出检索表达式（或称条件表达式，同where子句），并将此表达式回送原数据窗口进行过滤，并在原数据窗口中得到用户所需的查询结果。
　　在使用查询窗口前，需知道被查询窗口的有关参数。
左　硕士研究生。
　　. 数据窗口参数获取函数
　　本函数获取数据窗口以下参数：所有的字段名及其数据类型和标识。
　　定义如下:
　　入口参数：数据窗口控件名（类型Reference）。新的需求将对数据仓库和数据集市的数据模型产生影响。只不过，数据集市中的数据是专为某一部门或某个特定商业需求所定制的。
i―ColCount = Integer(dw―1.Describe(′DataWindow.Column.Count′))[ ZK)〗 
　　其中dw―1为欲检索的数据窗口对象。
　　② 建立循环，以第1步得到的字段个数为循环次数，依次得到数据窗口中每个字段的字段名及其数据类型和标识，并将它们存入字符串中。
　　相关语句如下：
　　取字段名：
s―ColName = dw―1.Describe(′#′ + String(i) + ′.name′)
　　取字段类型：
s―ColType = dw―1.Describe(′#′ + String(i) + ′.coltype′)
　　取字段标识：
s―ColText = dw―1.Describe(s―ColName + ′―t′ + ′.text′)
说明：在生成数据窗口时，系统缺省地将字段标识的名字定为字段名+′―t′
　　上述语句中的dw―1为入口参数，i 是指第几个字段。
　　③ 返回此字符串。
　　. 查询窗口
　　定义如下:　　
入口参数：字符串（系上述公用函数返回结果）。从理论上说，决策支持所需的数据都应该包含在这个全局数据库中。
　　窗口中主要控件为一数据窗口和一命令钮（见图1）。

图1　公用查询窗口示例
　　数据窗口控件用于构造检索表达式，它对应的数据窗口对象以入口参数（即原数据窗口有关参数）为数据源（其数据源设计为外部（External）），其结果集（Result Set）由以下四项组成：
　　① 字段标识――由入口参数提供，在窗口open事件中生成，编辑形式为下拉列表框，其显示值（Display Value）对应于入口参数中s―ColText，其数据值（Data Value）对应于入口参数中s―ColName。从理论上说，决策支持所需的数据都应该包含在这个全局数据库中。
　　③ 检索值――此项由用户填入。
4　数据仓库系统的结构
　　企业建设数据仓库的最终目的是让企业的经营管理者能够方便地使用数据仓库这一集成的决策支持环境以获取有价值的信息，帮助经营管理者对不断变化的环境做出迅捷、准确的判断和找出相应的对策。数据库及数据仓库是信息系统和决策支持系统的基础设施，没有完善的数据库或数据仓库，再好的分析工具也发挥不了作用。
　　有关的程序设计主要有：
　　本窗口open事件：
　　① 获取传入的参数。并将它们传入数据窗口标识字段的编辑形式中。
dw―1.Modify(′#1.values = "′ + Message.StringParm + ′"′)
　　注意传入参数Message.StringParm须符合编辑形式的定义格式。② 如第1步操作无误，则在数据窗口是插入一空行，等待用户的输入。
　　软硬件环境　Win95 +Pentium 200 CPU，32M内存。
　　命令钮clicked事件：
　　③ 删除空行。
　　④ 计算当前数据窗口中行数。如为空，则返回空值。
　　算法1：　数组位置转为多维空间位置矢量
　　Procedure Vector2Index(Vector V(v0,……vN-1))
{ index = 0; //N是数据立方的维数
for (i=0; i<N-1; i++)
{
index += vi; 
index *= (｜DI+1｜+1);
} //end for
index += vN-1;
return index;
}
3　数据立方的存储方案
　　当数据立方的维数增加时，查询代价迅速增加。此返回的字符串即为所需的检索表达式。
2.1.2　打印预览窗口
　　本窗口对数据窗口如下参数作定义：边界、纸张尺寸、打印方向、预览缩放比例，并作相应输出。
　　定义如下：
　　入口参数：数据窗口对象　　　返回值：无
　　窗口除数据窗口控件外，其余主要的控件可分为两类：参数设置类、操作类。
　　数据窗口是原数据窗口的一个拷贝。本窗口的所有操作都是针对此拷贝数据窗口进行。元数据可以帮助数据仓库管理员更好地管理仓库中的数据，例如数据仓库管理员可以利用元数据追踪非法的数据处理到它的数据源，并可进行深入调查。否则须重新排序，或消除重复单元。
　　操作类控件一般为命令钮或检查框。
　　有关的程序设计主要有：
　　本窗口的open事件：
　　① 取入口参数，并据此产生本数据窗口数据源。
　　测试内容　建立数据立方，作聚集计算、使用采掘周期规律。有关参数有：边界、纸张尺寸、打印方向、页数。di0是0，di1 是1，依次类推。用Modify函数实现。
　　以边界参数设置为例：
　dw―1.Modify("datawindow.print.margin.top="
+em―top.text+&
"datawindow.print.margin.bottom="+em―bottom.text+&
"datawindow.print.margin.left="+em―left.text+&
"datawindow.print.margin.right="+em―right.text)
　　② 重新计算页数。

图2　“自顶向下”模式
3.2　“自底向上”模式
　　“自底向上”模式（见图3）是从建立各个部门或特定的商业问题的数据集市开始，全局性数据仓库是建立在这些数据集市的基础上。否则须改变数据窗口至预览览态下计算，计算毕，再改变回原状态。据市场研究机构META Group的研究报告，当今全球最大2000家企业中的90%都有开发企业数据仓库的计划。限于篇幅，不再赘述。一个数据立方单元的地址中至少有一个vj 等于｜Dj｜ ，其中j≥0，并且jN 。对每一维增加个值Sum，对象在Di 维上的值为 (di0,di1,……，diSUM)。数据集市的结构和数据仓库类似。用以下方法设计的自定义控件，可在父窗口中直接被使用。G为一聚集函数。删除操作的完整脚本如下：
　//注意：本自定义对象的设计只针对父窗口中
//只有一个数据窗口的情形
//如父窗口有多个数据窗口,
//则选取排序最靠前的数据窗口作为操作对象
//删除操作
dw―Here.DeleteRow(0)
　　这段程序中，真正执行删除操作的语句只涉及最后一行，其余的程序都是针对通用性所进行的设计。
　　以上讨论了两类公用对象：窗口类和控件类。当然，这两类公用对象在设计时也可以互相包含，公用窗口中可以直接使用公用控件，反过来，公用控件也可以调用公用窗口。
3　结语
　　将常用操作做成公用对象放入公用库中，在设计时直接调用或使用它们，是一种有效率和可维护性好的设计方法，在大型开发项目中，这种设计方法的优越性更为明显。在数据仓库中的元数据至少应包括以下一些内容：
　　原始数据的拥有者的信息；
　　原始数据的数据源信息（包括数据源的系统平台，数据源的网络地址等信息）；
　　数据的商业意义和典型用法；
　　数据提取程序的名称及版本；
　　被提取数据之间的依赖（或从属）关系；
　　数据从各OLTP数据库向数据仓库中载入的频率；
　　数据载入数据仓库的日期、时间；
　　载入数据仓库的数据的记录数；
　　数据仓库中数据的利用率；
　　数据转换的算法；
　　数据的保密级别；
　　数据的格式；
　　用于计算出汇总数据的商业规则；
　　数据从OLTP数据源到数据仓库的映射信息，包括：源数据域的标识、属性到属性之间的映射，属性的转换，名称的转换，关键字的转换，从多个数据源选择数据的算法逻辑等；
　　数据汇总的算法，及对算法的解释；
　　数据仓库的数据模型及其描述。当然，为了获得通用性，牺牲了一定程序运行效率。
作者简介：杨光　硕士研究生！
作者简介：李振华　讲师。
　　“自顶向下”、“自底向上”、“平行开发”这三种模式都没有考虑如何将用户的反馈信息不断地反应到数据集市和数据仓库的建设中。MOLAP直接使用特殊的数据结构（如稀疏数组）来实现多维数据立方，数组的维作为坐标轴。均从事计算机网络及应用的教学与科研。
　　主要测试结果　任意选择三个维（字段）来建立数据立方，如果使用N23算法建造数据立方大约需要14分钟的时间；而使用EN23算法，大约只需要1分钟的时间
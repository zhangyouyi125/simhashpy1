计算机应用
Computer Applications
1999年 第19卷 第7期  Vol.19 No.7 1999



中间件及其在三层客户机/服务器模型中的应用*
宋晓梁　刘东生　许满武
　　摘　要　本文介绍了中间件的五种类型及其各自的特点，并讨论了中间件在三层的客户机/服务器模型中应用的一个实例。字符流使用大量的字符集转换。
　　中间件(Middleware)作为前端客户机和后端服务器之间的一个中间层，为应用程序处理提供了如下功能，它一般包含应用逻辑，负责接收客户端的应用请求，对请求做出响应处理后将请求交给后端服务器，并负责将服务器的处理结果返回给客户端。本文主要针对这一问题，提出利用SAS软件最新发布的中间件SAS-IntrNet AppServer（应用服务器）在浏览器上实现交互式的决策分析应用。但是，只有客户机/服务器以及downsizing的概念提出之后，中间件的概念才被人们广泛地关注。在客户机/服务器环境下，一般将中间件放在位于客户机和服务器之间的中间层，负责应用逻辑的处理，从而使客户端变得精干。与此同时，中间件还可以放在客户机和服务器之间的多层应用服务器中。中间件已经成为了联结分布式计算环境中各个相对独立的系统的胶合剂。
　　中间件具有如下特点：
　　易于集成　中间件能无缝地连入应用开发环境中，应用程序可以很容易地定位和共享中间件提供的应用逻辑和数据。
　　易于移植　中间件使与平台有关的细节对于应用程序来说是透明的，因此可以在不改变应用程序代码的情况下改换计算机底层硬件、操作系统或通信协议。
　　易于演进　中间件实现的功能对应用程序来说是透明的，所以可以对局部进行改进而不会影响到系统的其它部分。
　　高可靠性　中间件应该是可靠的，需要提供接管和恢复功能，保证事务及关键性业务不被丢失。
　　易于使用　中间件能和同构或异构环境下的多种数据源通信，同时它能管理数据间的公共逻辑约束。它将用户从复杂的平台、网络、数据库选择中解放出来。JDK 1.1提供了InputStreamReader和OutputWriter两个类，用来创建基于字节流的新的Reader和Writer对象，使Reader/Writer类同目前使用字节流的其他类兼容。
1.1　基于数据库的中间件
　　基于数据库的中间件是所有中间件中最普遍、最成熟的一种。基于数据库的中间件允许应用程序同本地或异地的数据库进行通信。它提供了一系列应用程序接口API，通过中间层而不考虑操作系统及网络来访问数据库。并且在很多情况下，API被隐藏在开发工具之中而不被开发者了解。本文主要针对这一问题，提出利用SAS软件最新发布的中间件SAS-IntrNet AppServer（应用服务器）在浏览器上实现交互式的决策分析应用。通过ODBC访问数据库的方式是绝大多数应用程序使用数据库的方式，它通过使用驱动程序(driver)来提供数据库的独立性，驱动程序与具体的数据库有关，它是一个用以支持ODBC函数调用的模块(通常是一个DLL)，应用程序通过调用驱动程序所支持的函数来操作数据库，若想使应用程序操作不同类型的数据库，就要动态地链接到不同的驱动程序上。JDK 1.1提供了InputStreamReader和OutputWriter两个类，用来创建基于字节流的新的Reader和Writer对象，使Reader/Writer类同目前使用字节流的其他类兼容。
作者简介：关铨光　硕士。JDBC实际上就是一系列用于特定数据库的Java类库，它源于ODBC体系结构。
2　SAS的Web应用技术
　　SAS/IntrNet 为SAS 的Web应用提供数据服务和计算服务。OLE-DB提供了不同数据源的统一的访问点。OLE-DB的目标是提供通过OLE Automation来访问多种数据库，或在应用程序和数据库之间提供一个COM层，通过COM层的对象访问数据库。
　　在基于数据库中间件领域中，目前还提出了应用分割技术，即将用户的一些应用逻辑放到中间层，为客户机“减肥”，这也为NC(Network Computer)等的引入打下了基础，并增强了应用程序的处理性能、安全性和并发性。目前，很多数据库前端开发工具都支持应用分割技术。
作者单位：中科院安徽光机所
。这种方式不适合于高性能应用处理，因为它需要大量的数据通信，同时，当网络发生故障时，系统将不能正常工作。
1.2　基于RPC的中间件
　　RPC已经存在很长一段时间了，它沿用了用户熟悉的编程模式，从程序员的角度出发，RPC十分容易理解――程序代码调用远端过程并将结果返回。他们往往只能定期地将程序重复运行，将分析的结果（如图片和表格）静态地公布，从而使决策分析在时间和费用上增加支出。
　　RPC应用不仅可以调用在远方节点上的子程序，甚至可以在不同操作系统环境下运行。它使程序员不必考虑网络的细节，仍可采用自己熟悉的Call/Return语法。
　　RPC一般采用Call/Return模式，多用于应用程序之间的通信，而且采用同步方式。RPC程序之间的同步通信一般采用Request-Wait-Reply方式， 因此，对小型简单的不需要采用异步通信方式的应用比较适合，但对大型复杂的应用不太适合，因为它需要程序员考虑网络或系统的故障、处理多个网络连接、可移植性、缓冲及流量控制和进程之间的同步等多种问题。
1.3　基于TP Monitor 的中间件
　　TP Monitor是一种复杂的中间件产品，它为应用处理提供了一种通信机制，它允许开发者在TP Monitor环境中定义事务服务。
3.3　系统逻辑结构

3.4　功能实现
　　以下是通过SAS的应用程序发布机在浏览器上动态生成报表的一个实例，在浏览器实现对数据表进行列间运算、表间合并、旋转，生成所需要的报表动态地返回到浏览器端。客户通过Transaction RPC(TRPC)机制在TP Monitor中调用事务，TP Monitor运行事务来连接数据库，并将处理结果返回给客户端。主要研究方向：数据库技术、经济信息管理及数理统计。常见的属性包括全局事务协调、分布式两阶段提交、资源管理器支持、协调故障恢复、高可用性、安全性、网络负载平衡等。
　　在TP Monitor中，事务有一个明确的起止点，如果事务失败，TP Monitor可以回滚事务，不会使系统处于不完整、不一致状态。
计算
服务Application Dispatcher利用该“应用程序发布机”建立Web动态应用，使用户可以通过Web浏览器调用SAS的程序。如果没有指定一个Locale, JDK1.1会从环境中提取缺省的Locale(us-en)。
　　本文以广东省长途电信线路障碍的一般统计（总和和平均数）为例说明如何实现在网页上动态生成分析结果。
　　常见的TP产品有：BEA的Tuxedo、IBM的CICS、NCR的TopEnd、Microsoft的MTS等。
1.4　基于ORB(Object Request Broker)的中间件
　　基于ORB的中间件主要是采用面向对象的技术，ORB可以看作是与编程语言无关的面向对象的RPC应用。
　　java.txt 是一个完全意义上的新包。目前，ORB存在两个彼此竞争的标准：CORBA ORB和DCOM ORB。
　　java.txt 是一个完全意义上的新包。ORB特别适用于对象接口变化不频繁，不会导致代码经常被重新编译及链接的情况。他们往往只能定期地将程序重复运行，将分析的结果（如图片和表格）静态地公布，从而使决策分析在时间和费用上增加支出。如果没有指定一个Locale, JDK1.1会从环境中提取缺省的Locale(us-en)。例如：进程、线程和动态链接库等的细节；
　　存储机制：其它对象任何可以或不可使用存储的情况；
　　机器类型：任何机器型号上的不同；
　　程序语言：其它对象是以何种语言实现的；
　　操作系统：任何操作系统上的不同；
　　安全机制：其它对象本身所具有的访问控制机制。而SAS在分析预测上具有几十个专业标准预测模型，可根据用户指定的数据集自动选择最佳的预测模型，并且提供用户建造模型的工具，其分析得到的信息具有高的置信度，因此SAS成为企业理想的辅助决策软件包之一。新增的Reader和Writer除了处理16位的国际码特性以外，和其他字节流的工作是一样的。MOM提供了一个高层应用接口，为不同系统提供操作核心。MOM产品的工作主要是通过将信息以消息的方式在程序间传递来完成。Locale 类封装了局域的一些信息，如国家,语种,日期代码等。
　　消息传递在建立大型的分布式应用中比较常见。
　　若你正在开发新程序，就在以前使用InputStream和OutputStream流的地方，用相应的Reader和Writer类来代替。采用该方式，应用程序既可以订购，也可以广播。该通信模型提供了位置透明性。程序只需要简单地将消息以主题方式发送出去，由中间件来负责将消息传递给所有订购该主题的程序。MOM主要通过agents技术来实现Publish-Subscribe方式应用。
　　在实际使用过程中，该机制有以下优点：
　　1） 编写和调试程序方便
　　只需用一般的文本编辑器编写*.SAS文件，编写后无须编译即可在浏览器上调用和调试，也就是说只需文本编辑器和浏览器就可以编写和调试SAS程序。代理负责路由消息给相应的程序。由于代理可以实现消息的动态路由功能，因此，该方式能够提供较好的容错性能，但它缺乏MOM的异步特性，不太适合长时间网络断开的情况。
　　消息队列方式允许程序无需直接建立起连接即可发送和接收消息。
作者单位：中科院安徽光机所
。消息队列采用异步方式，为信息提供了一个安全的存储方式，特别适用于不是直接连接的应用，如移动用户、发送方或接收方进程可能处于不活动状态的应用。它的缺点是需要一些配置工作，性能不是很高，而且如果队列丢失，整个系统将受到影响。新增的Reader和Writer除了处理16位的国际码特性以外，和其他字节流的工作是一样的。
　　常见的MOM产品有：DEC的MessageQ、IBM的MQSeries、Microsoft的MSMQ。
2　中间件优点及具体应用
　　传统的客户机/服务器模式是一种双层模型。双层模型的物理实现方式为：一台桌面电脑当做客户机使用，而一台网络服务器则用于容纳后端数据库引擎。通过这种机制，实现了浏览器端交互式的请求，并通过请求的参数的变化来调用相应的SAS分析功能来使浏览器端的显示结果动态变化。如果没有指定一个Locale, JDK1.1会从环境中提取缺省的Locale(us-en)。
作者简介：关铨光　硕士。尽管数据访问得到了简化，但却缺乏灵活性，我们通常无法对自己与数据源的交互作用进行完全的控制，因为这种控制是自动的。他提供了处理各种文本的支持，包括文本排序，格式化日期与数值，以及分析相关语言数据。
　　双层客户机/服务器模型存在以下三个方面的限制因素：
　　不可伸缩　双层模型无法超越客户机的物理界限，而且服务器也会禁止这种模型的伸缩。
　　不能管理　由于不能封装商业规则，也不能对这些规则进行集中配置，所以常用程序的重用也不方便。
　　性能较差　因为将图形界面与数据源绑定在一起，所以会消耗客户机的主要系统资源。这对客户机来说是一个沉重的负担，会导致系统性能的下降。而SAS在分析预测上具有几十个专业标准预测模型，可根据用户指定的数据集自动选择最佳的预测模型，并且提供用户建造模型的工具，其分析得到的信息具有高的置信度，因此SAS成为企业理想的辅助决策软件包之一。三层客户机/服务器模型以构建分割式应用程序为基础。对一个应用程序进行分割以后，可将代码划分为不同的逻辑组件，在三层的客户机服务器模型中，这些逻辑组件分为三个逻辑层：用户服务、业务服务和数据服务，它们共同组成一个应用程序。我们把这种三层的设计模型称为“服务模型”。
　　三种服务的属性如下：
　　用户服务　提供信息和功能、浏览定位，保证用户界面的一致性和完整性；
　　业务服务　共享的业务政策，从数据中生成业务信息，保证业务的一致性；
　　数据服务　数据的定义、永久数据的存储和检索，保证数据的一致性。　　


图3　服务模型结构图
　　使用服务模型，可以把应用程序的需求分解成明确定义的服务。
　　若你正在开发新程序，就在以前使用InputStream和OutputStream流的地方，用相应的Reader和Writer类来代替。构件是一个或几个服务在物理上的封装，可以通过构件的接口获得这些服务。构件可以是.exe或.dll文件、数据库触发器和存储过程的集合，或者任何几个其它物理软件实体。
　　鉴于编幅，这里不给出详细的编写过程，只给出页面调用broker.exe的html文本和相应的说明(有兴趣的读者可来信索取):
<FORM ACTION="/cgi-bin/broker.exe">
<p>请输入年份：<INPUT TYPE="TEXT" NAME="year"
VALUE="98" SIZE=1></p>
<P>
请选择月份 ：<SELECT NAME="month">
<OPTION VALUE="1"> 1
<OPTION VALUE="2" SELECTED> 2
...(略)
<OPTION VALUE="11"> 11
<OPTION VALUE="12"> 12
</SELECT>
</P>
<p>
<INPUT TYPE="HIDDEN" NAME="―SERVICE"
VALUE="default">
<INPUT TYPE="HIDDEN" NAME="―PROGRAM"
VALUE="sample.gl.sas">
</p>
<INPUT TYPE="SUBMIT" VALUE="确认">
</FORM>
说明:　 broker.exe包含的主要参数为:
―SERVICE: 指定服务的参数,取值为′default′时表示为系统内定的参数；
―PROGRAM: 指定调用的SAS程序名称
4　结束语
　　以同样方式，结合SAS的其他模块（如ETS,STAT,OR，DATAMINER等）编写的用于预测、钻取或多元回归等复杂的程序，就可以在浏览器上实现动态地获取专业化的分析和预测的结果。每一个原有的在类一层的输入输出字节流，现在都有对应的Reader和Writer类，用字符流完成相似的功能。这些构件总是通用的，并且遵守公开的接口标准，所以它们可以被重用，并能被多个应用程序所共享，外界所能知道的就是它们的接口。实际上这些物理构件就是基于ORB的中间件。
　　这种基于构件的三层客户机/服务器的优点可概括为以下四个方面：
　　可重用性　许多应用程序可共享和重用封装在构件中的功能。
作者单位：关铨光　华南理工大学应用数学系　广东.广州(510641)
覃英华　广州泰克计算机软件公司　广东.广州(510665)
参考文献
［1］　SAS Institute Inc. SAS Software Solutions for theTelecommunications Industry. SAS Press,1994
［2］　美国SAS软件研究所上海办事处编. SAS 基础教程. 上海技术文献出版社,1997
收稿日期:1999-04-16
。长线障碍分析系统从省长途电信线路业务系统中获取数据。他们往往只能定期地将程序重复运行，将分析的结果（如图片和表格）静态地公布，从而使决策分析在时间和费用上增加支出。
　　在某电视台资料管理及业务处理信息系统中，我们采用了上述三层的服务模型：在客户机上的客户服务程序，在构件服务器上的业务服务程序和在数据服务器上的数据服务程序。客户服务程序主要处理表示逻辑，也就是以某种方式同用户进行交互，它基本上是一种图形用户界面。业务服务程序主要完成业务规则的控制和对数据库的访问，并且业务服务程序是以构件的形式提供给客户服务程序调用的。由于业务服务程序是以构件的形式给出的，所以一个构件能被多个客户服务程序调用，例如节目资料检索构件就能让其它各个子系统的客户服务程序调用，以便客户服务程序在检索结果集基础上进行其它处理。数据服务程序主要就是各种智能数据库所能提供的功能，例如存储过程、存储查询等等。
　　该系统的结构如图4所示。
　　鉴于编幅，这里不给出详细的编写过程，只给出页面调用broker.exe的html文本和相应的说明(有兴趣的读者可来信索取):
<FORM ACTION="/cgi-bin/broker.exe">
<p>请输入年份：<INPUT TYPE="TEXT" NAME="year"
VALUE="98" SIZE=1></p>
<P>
请选择月份 ：<SELECT NAME="month">
<OPTION VALUE="1"> 1
<OPTION VALUE="2" SELECTED> 2
...(略)
<OPTION VALUE="11"> 11
<OPTION VALUE="12"> 12
</SELECT>
</P>
<p>
<INPUT TYPE="HIDDEN" NAME="―SERVICE"
VALUE="default">
<INPUT TYPE="HIDDEN" NAME="―PROGRAM"
VALUE="sample.gl.sas">
</p>
<INPUT TYPE="SUBMIT" VALUE="确认">
</FORM>
说明:　 broker.exe包含的主要参数为:
―SERVICE: 指定服务的参数,取值为′default′时表示为系统内定的参数；
―PROGRAM: 指定调用的SAS程序名称
4　结束语
　　以同样方式，结合SAS的其他模块（如ETS,STAT,OR，DATAMINER等）编写的用于预测、钻取或多元回归等复杂的程序，就可以在浏览器上实现动态地获取专业化的分析和预测的结果。与此同时，在同一层上的构件之间也可以相互调用，这样也增加了代码的可重用性，减少了编程量，而且因为构件也是相互独立的，所以当需求改变时也只需对相应的构件进行改变。
　　若你正在开发新程序，就在以前使用InputStream和OutputStream流的地方，用相应的Reader和Writer类来代替。
作者单位：中科院安徽光机所
。主要研究方向：新型程序语言设计。
　　* 国家高新技术研究发展（863）计划及江苏省自然科学基金资助。
　　java.io 中所有的类，它们用InputStream和OutputStream流工作，都增加了相应的Reader和Writer字符流类
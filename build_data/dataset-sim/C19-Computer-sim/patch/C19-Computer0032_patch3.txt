计算机应用
Computer Applications
1999年 第19卷 第7期  Vol.19 No.7 1999



基于事件驱动状态机的多线语音应用程序设计
刘宝旨

　　摘　要　本文介绍了事件驱动状态机的工作原理，在此基础上，给出了一种多线语音应用程序设计方案。
　　关键词　计算机电话集成，状态机，多任务函数
　　
MULTI-LINE SPEECH APPLICATION PROGRAM DESIGN
BASED ON THE EVENT-DRIVEN STATE MACHINE

Liu Baozhi
Computer Center, Shandong Jining Medical College, Shandong*Jining 272113
　　Abstract　This article introduces the work principle of the event-driven state machine. Based on it, this article gives a kind of means about the multi-line speech application program design.
　　Keywords　Computer telephone integrate, State machine, Multi-task function

1　引言
　　进入九十年代,计算机声讯服务迅速发展，计算机电话集成（CTI）［1］技术应运而生。在我国,计算机声讯服务系统的研究分为两类［2］：一类是以硬件为主的计算机电话语音卡的开发和研制;另一类是以软件为主的高级开发平台及应用程序的研究。数据流中八位组字符串的任意一位都具有意义。

2　状态机
　　在声讯系统中，常采用有限状态机模式［3］来实现各种功能。状态机是一个事件驱动的程序模型，其处理条件和相关动作的逻辑都被定义在一个表中，该表描述了应用程序中所有可能的处理状态及驱使应用程序从一个状态转到另一状态的事件。
　　属性attributes――返回的特定属性列表。系统给出与功能相适应的完整的状态图，它与事件表一起，使系统得以运转。为了响应多种请求，服务器返回的响应将包括LDAPResult类型字段以指示协议操作请求的最后状态。
4　算法分析
4.1　已有的算法概述
　　如图1所示，搜索组成多边形2的弧，若当前结点为结点2，要搜索决定下一个组成多边形2的结点时，由于在结点2 处有弧c3、弧c5两条弧与结点2相连，首先必须计算弧c3、弧c5的方位角，再分别计算它们与弧c2的夹角，取夹角最小者为下一段组成多边形的弧c5，得到下一个结点7。其形式化描述如下：　　
struct state
{
int process();/*状态处理器函数、状态转移*/
int next();
/*完成初始化（RWB重新赋值）、基本语音操作处理*/
}

　　状态类型分为:语音处理状态(比如放音、录音、访问数据库等)、信令状态(对应系统处于收发信令的状态，如摘机、挂机等)及其它状态 (如空闲状态)。当一个LDAPMessage数据报的协议操作字段使用unbindRequest标签，并且其值为空值时执行解绑定操作。主要研究领域为CAD/CAM、计算机图形学、地理信息系统。
　　模式（Schema）是一个集合，其中包括了属性类型定义、对象类定义以及其它一些信息。为此，人们提出了使用目录服务管理网络上的所有资源，使网络上的所有资源在管理员、用户和应用程序面前都表现为一个有序的目录结构；用户和应用程序可以通过目录授权访问这些资源。其包格式是一个队列，队列中每一个元素的定义如下：

messageIDprotocolOpcontrols

　　LDAPMessage的功能是提供一个协议封套，其中包含了所有协议交换所必须的公共域。例如：有效/无效的访问，关键码达到最大录音时间等。
　　中断事件：键盘中断事件、通信设备中断事件等。弧的邻接表、弧-结点表如表1、表2所示。可由函数putevt()将用户自定义事件加入到事件队列中来完成。　　
3　多线语音应用程序设计原理
3.1　事件队列、事件表
　　事件队列用来识别和响应同时在多个通道上发生的行为。它就象一个管道,多个来源的事件流进同一管道。事件队列为每一个事件提供一个独特的位置，同时还保存最近发生事件的历史记录，从而允许应用程序处理同时发生在多个通道上的事件。
　　事件队列的操作基于FIFO。当应用程序使用gtevtblk()函数从事件队列中读一个事件时，最早的事件从事件队列中移出并且被置入事件块EVTBLK。数据流中八位组字符串的任意一位都具有意义。
　　事件队列记录了来自于驱动程序的事件。
表3　多边形-弧表

多边形号组成多边形的弧
11,4,6
22,4,7,8,9,5
33,5,10
46,7,11,12
58, 12,15,13
69,13,14,10


6　结论
　　此算法仅用图的拓扑信息来自动生成多边形的拓扑关系，避免了进行多边形内角的计算与比较；使用同级结点优先搜索与只对弧的连接次数小于2的弧搜索的策略，避免了对图中弧段的邻接关系表的反复搜索，减小了搜索回溯深度，减小了为保证多边形的最小性而进行比较的次数；从而使多边形拓扑关系自动生成的速度大大加快，而且算法保证了多边形的最小性，保证了搜索出所有符合条件的多边形，使算法具有完备性。快速地处理事件以便应用程序对用户的输入保持响应是很重要的。不管此列表为空还是为“*”，都表示所有的用户属性被返回。此建议系列规定了信息模型，通信协议，安全认证等各个方面。在状态转移表中，每一个状态都规定了其基于的事件发生后状态机转向的另一个状态，如果发生的事件与第一状态不存在逻辑关系，状态转移表的下一个状态将统一被看作一固定的错误状态来处理。
　　地图在数字化或经过矢量化软件自动识别后，经过数据预处理得到以下的原始数据：每一条弧的顶点坐标及终结点坐标，弧与弧的连接点，每一个多边形有一个标识点(为多边形的内点)及标识号。当多任务函数被调用时，他会返回控制权给程序以便在从执行函数到完成的这段时间里，应用程序能同时执行其它操作 ，比如，开始执行一个其它通道的函数。在搜索返回的响应队列中可能存在0个或多个的SearchResultEntry和SearchResultReference，它们之间可以以任何顺序返回。

图1
4.2　算法的分析
　　在本文的算法中，只要用图的拓扑信息来自动生成多边形的拓扑关系，不必进行多边形内角的计算与比较；算法的主要计算工作量在第三步，由于在搜索时采取同级结点、次级结点、上级结点的优先次序，平均在每一个结点处只需进行m(m+1)/2次弧的搜索比较。然而，当控制权返回给应用程序时，应用程序必须阻止另一个函数在同一个正在执行操作的通道上操作。
　　多任务函数具有以下特点：当一个多任务函数在一个通道上操作时，通道忙；当没有多任务函数在通道上操作时，通道闲。如果你试图在忙通道上执行一个多任务函数将发生E―MTACT错误。
潘云鹤　教授，博士生导师。
　　识别和响应多任务函数：多线语音应用程序能够响应同时发生在多个通道上的行为。利用拓扑关系可以确定点、线、面的空间关系及其属性，实现相关的查询与检索。事件提供关于函数的进展和完成的反馈，指明其它通道行为的发生。一般情况下，事件常被称为结束事件，因为大部分事件表示操作结束。
　　总之，多任务函数实现了多进程处理。多任务操作一旦在软件中发出一道指令，该任务立即提交给语音卡，由其在后台完成该任务，同时，程序控制权已转回应用软件的下一语句。简单地说，就是将播放这样耗时长的操作放在后台，由语音卡完成。
　　关键词　拓扑关系，多边形，GIS，弧
A GRAPH-BASED ALGORITHM FOR
GENERATING POLYGONS′ TOPOLOGICAL RELATIONSHIPS
Zhou Lixin　Yan Jing　Pan Yunhe
State Key Laboratory of CAD & CG, Zhejiang University， Zhejiang.Hangzhou 310027
　　Abstract　A graph-based algorithm for generating polygons′ topological relationships in GIS automatically is presented in this paper. The algorithm needs only a graph′s topological information, avoids computing and comparing the polygons′ interior angles. The algorithm speeds up the generation of polygons′ topological relationships by taking some effective measures according to the graph′s topological features. Finally, an actual example is also shown in the paper.
　　Keywords　Topological relationships, Polygon, GIS, Arc
1　引言
　　地理信息系统（GIS）是近年来发展迅速的一门边缘学科，GIS研究是国家科技发展计划中的重中之重项目。
3.4　状态机逻辑流程图
　　状态机逻辑流程图是状态转移表的图形表示，一般地,它分为事件驱动、当前状态和下一个状态三大处理模块。图示如下:　　


图1
　　在系统中，每一个通道定义一个状态机。大多数情况下，所有的通道将有同样的状态逻辑，并且所有的通道可以复制一样的状态机结构。应用程序使用状态机来管理每一个通道的程序流。
　　实际执行的程序流主要由表中的数据而不是程序的逻辑决定的，这反映了事件驱动的原理。
　　通道状态机的建立步骤：
　　为每一个通道列出所有可能的状态；
　　列出所有可能的改变通道状态的事件；
　　创建一个状态转换表，该表为每一个状态定义了基于当前发生的事件的下一个状态；
　　利用状态转换表，设计处理事件的程序流程。
3.5　状态机的扩充性
　　事件驱动的状态机具有良好的开放性,根据用户的要求可对其增加相应的状态,以完成功能扩展。对于增加的某个状态,应根据状态机的事件将其加入状态转移表中，其具体状态处理仍然要分为当前状态和下一个状态, 并给出对应状态的状态出口处理。以密码设置为例介绍状态增加后的转移流程图如下：
　　状态处理描述：
　　
4　结束语
　　利用上述设计方法,我们开发出一个综合性的医疗信息声讯系统，该系统除了具备一般的声音录制和回放功能外，利用状态机的扩充性，通过增加状态，使用户可以通过电话访问文本信息，通过电话查询数据库等。在每一个结点处，若结点的度为m，则在这一算法中，必须进行如下计算：利用公式
ψ=arctg［(y2-y1)/(x2-x1)］
计算m次反正切；作m(m+1)/2次角度的比较。弧的邻接表、弧-结点表如表1、表2所示。研究方向：计算机网络、多媒体技术。
　　作者单位：刘宝旨（山东济宁医学院计算机中心　山东．济宁 272113）
参考文献
［1］　王晶如,等.计算机电话综合系统的构成与应用.现代电信科技, 1997；(7)
［2］　张延平.电话语音系统的集成和设计.世界电信，1997；(2)
［3］　Voice software reference for MS-DOS.Dialogic Corporation, 1995 
　　收稿日期:1999-01-07(修改稿)

计算机工程
COMPUTER ENGINEERING
1999年  第25卷 第7期 Vol.25 No.5 1999



Windows NT环境下远程诊断系统的实现
魏小勇 张根度
摘要 详细阐述了NT下SNMP的工作原理,并讨论了基于SNMP的远程诊断系统在Windows NT环境下的构造方法,包括NT对远程访问的支持、NT的SNMP实现框架等内容。
1.1　OIM对象模型
　　OIM对象模型［11］是Versatile系统的公共数据模型。软件厂商为了提高自己产品的竞争力，往往需要投入大量资金和人力用于技术支持人员的培训和提供迅捷的服务响应。为了提高服务效率，降低技术支持成本，有必要对应用系统运行中的故障加以分类，并对不同类别的问题施以不同的解决对策。
　　应用系统投入现场运行后，用户可能提出的问题很多，其诱发原因大体上可分为以下3类：①用户对软件的使用不熟练，不知道如何操作以完成所需功能；②软件参数配置不当或外部的软/硬件故障；③软件内部逻辑错误。
　　第一类问题可以通过加强用户培训，编写清晰详尽的用户手册来解决；第三类问题只能通过开发人员的查错纠错来解决。在应用系统经过实践考验，逐步趋于稳定运行之后，第二类问题就成为系统故障的主体。第2节给出全局动态字典的构造方法。远程诊断就是用于这一目的。应用系统分布的地理范围越广，越能够体现远程诊断在整个技术支持体系中的重要性。
2　基于SNMP的远程诊断
2.1　远程诊断与SNMP
　　远程诊断的关键在于，诊断主机能够取得被诊断系统的实时运行状态。诊断主机与被诊断系统之间的信息交换涉及到诊断信息结构、诊断信息传输协议和底层通信等几个方面。简单网络管理协议SNMP为这几个方面制订了统一的标准。使用SNMP开发诊断系统能够降低系统复杂性，并为诊断系统在不同硬件/操作系统上互操作提供了有利条件。为了准确地发现路由器、E-mail系统以及其他网络设备中的设计错误,就必须在进行TCP/IP产品的互操作测试之前来进行协议的一致性测试。
　　被管理节点可以是主机、路由器、网桥、网络打印机或其他有能力与外界交换状态信息的网络设备。在远程诊断中，被管理节点主要指运行被诊断系统进程的主机。为了能够直接被SNMP管理，被管理节点必须运行一个SNMP管理进程，又称为SNMP代理(Agent)。
　　显然,查询2的结果OIM对象包含查询1的结果OIM对象。管理工作由管理机完成。但是,模板不会“屏蔽”数据库中的对象,也就是说,数据库中有的对象,模板中必有沿同类路径的同类对象。而且,我们可以直接访问端系统中的IP模块所提供的服务接口,实现上测试器UT,用来驱动IP模块主动发送IP数据报以及检查IP模块是否能够正确上送（重组好的）IP数据报。
　　(1) Versatile定期检查缓存中OIM对象所涉及的局部视图是否改变,根据变化情况修改缓存 中的内容。
　　每个被管理设备维护一个或多个变量用于描述自身状态。一致性关系定义了协议描述的迹和实现的迹之间的关系。网络上可能存在的对象在管理信息库MIB(Management Information Base)中定义。管理机使用SNMP协议与代理进行交互，询问代理维护的对象状态，或在必要时修改它们的值。参考实现可通过下面几种消息类型和消息机制来通信:
　　starttest:开始一个测试例的执行;
　　stoptest:终止一个测试例的执行;
　　frame-send-out:TE发送一个ASP/PDU;
　　frame-receive:TE接收一个ASP/PDU;
　　quit:退出测试例执行过程。ck=1表示数据源经包装后支持opk;ck=0表示数据源经包装后不支持opk。为了便于不同厂商产品的交互，这些对象必须用一种独立于厂商的标准来定义。另一方面，网络传输也需要一种标准对所传数据进行编码。▲
　　随着计算机网络的普及和WWW的出现,人们的注意力逐渐由多库集成［1,2］转向多数据源集成。ASN.1并非完美的数据表示方法，它的编码规则以减少网络传输量为优化基准，却忽视了传输双方CPU为编码和解码所付出的高昂代价。另外,我们也对国外进口路由器进行了实际的测试。
　　其中，前3项工作对于任何一个SNMP系统都是相同的，只有最后两项因不同的SNMP应用而异。各数据源支持的子查询树发往相应数据源执行,子查询结果在全局结点汇总。另一种是仅向各数据源发送它们均能完成的查询(文献［6］中称其为“least common denominator”),其余查询由全局查询处理器完成。这样的工作量比例使技术决策人员难以下决心来使用SNMP作为构造个人计算机应用系统远程诊断的基石，即使SNMP有诸多理论上的优点。
　　令人欣慰的是，Windows NT 4.0对基于PSTN的TCP/IP和SNMP的支持使这种局面得到了彻底改观。现在，软件开发人员只要集中精力在最后两项工作，也是一个诊断系统的实质性工作上，就能够建造一个简洁、高效、具有SNMP所有优点的远程诊断系统。在查询处理的过程中,Versatile利用缓存来存放用户对全局视图的查询结果,利用元数据仓库保存DBA(database administrator)提供的查询关系向量和各种数据源的查询能力向量。
3　NT下基于SNMP远程诊断系统的实现
3.1　中心诊断主机与远程被诊断系统之间的TCP/IP通信
　　Windows NT支持远程访问服务RAS(Remote Access Service)。RAS使远程计算机能够像直接连在局域网上一样使用网络资源。因此,虽然模板可能与数据库中对象的准确结构不完全一致,但作为元数据使用仍然是合理的。RAS支持多路复用，能将多条物理电话连接复用至一条逻辑RAS连接，从而获得较高的信道速率。一方面采用基于缓存和数据源能力的查询分解和优化策略,以便充分利用数据源的查询能力,简化包装器的设计,并取得较高的查询效率。Windows NT 4.0的自动拨号特性(AutoDial Feature)使得常规网卡与Modem的区别对上层TCP/IP用户完全透明。
　　假设有一套远程诊断系统。中心诊断主机与各被诊断系统都通过Modem连接在公用电话网上。定时器触发诊断主机A向被诊断主机B查询状态信息。诊断进程向IP层发送目标地址为B的IP报文。由于A、B不连接在同一局域网上，所以发送操作会因目标地址不可达而失败，于是自动拨号机制启动。自动拨号在主机A与B之间建立RAS连接，RAS连接成功后，主机A上的Modem变成一块具有IP地址的虚拟网卡，使主机A在逻辑上同时连接两个局域网，无论这两个局域网在地理位置上相差多么遥远。对TCP/IP以上的应用程序，整个从IP到RAS的映射过程是透明的，也就是说，在NT 4.0上开发SNMP远程诊断系统，对开发者而言，完全可以将"远程"两字抛至脑后，远程与本地的差距将由操作系统来弥补。另外,我们还先后对自行研制开发的路由器原型Ⅰ和原型Ⅱ的IP模块进行了一致性测试,并对这3种产品的测试结果进行了比较,图6是路由器原型Ⅰ和原型Ⅱ测试结果的比较示意图。一致性关系定义了协议描述的迹和实现的迹之间的关系。
　　(2) MGMTAPI.DLL：它是一个动态连接库，处理管理方的ASN.1的编码与解码，并将SNMP的GET、GETNEXT、SET命令包装成函数调用形式供管理程序开发者使用。
Key words：Heterogeneous data source,data integration,dynamic dictionary,query decomposition,query optimization,query capability,cache。它运行在管理机上，与MGMTAPI.DLL配合为管理程序开发者提供服务。
　　(4) SNMPAPI.DLL：它是SNMP的外围动态库，提供了一组工具函数，以期简化扩展代理库及管理程序的开发。这些工具函数包括内存管理、对象标识符管理、变量链表管理等。
　　在用户开发的远程诊断系统中，为了支持自定义的MIB，必须为该MIB编写一个动态连接库，然后将此动态库联入SNMP服务。一个SNMP扩展动态库可以同时支持ASN.1对象命名树中的多棵子树。以下假设用户编写了一个支持ASN.1对象命名树中根为 .1.3.6.1.4.1.12 的子树的SNMP扩展动态库，动态库名为USERMIB.DLL。下面说明NT下SNMP的工作机制。
　　图1示出了一个简单的SNMP诊断系统的框架。由于PCO1和PCO2都被集成在测试器中,因此,我们只需利用TE来执行两个PCO上的测试事件,便可容易地控制两个LT的协调过程。
所以,只要选用适当的测试集和参考实现,PITS就可以用不同的测试方法对不同的协议进行测试。椭圆形表示NT提供的系统模块，矩形表示需要用户自己开发的模块。

图1 简单SNMP诊断系统的框架
　　用户开发的USERMIB.DLL必须遵循NT-SNMP扩展动态库的规范，为了理解方便，有必要对此规范及MGMTAPI中的服务函数做简单介绍。SNMP扩展动态库是Win32的动态连接库，因此，它必须遵循Win32 DLL的开发规范[3]。除此而外，SNMP扩展动态库还应该为以下函数提供实现代码：
　　(1) SnmpExtensionInit：当SNMP服务启动时，可扩展代理   (SNMP.EXE)会调用扩展动态库的SnmpExtensionInit函数，以完成代理与扩展库之间的双边初始化工作。为了准确地发现路由器、E-mail系统以及其他网络设备中的设计错误,就必须在进行TCP/IP产品的互操作测试之前来进行协议的一致性测试。
　　(2) SnmpExtensionQuery：当可扩展代理收到管理机发出的GET、GETNEXT或SET请求时，它将根据各扩展库所支持的视图来选择适当的扩展库，然后调用该扩展库的SnmpExtensionQuery函数。扩展库在此函数中完成对象的查询或设置，再将结果返回给可扩展代理。PITS系统是以TTCN测试集为基础来组织它的测试过程,在测试中并行解释执行测试例。
　　MGMTAPI.DLL为管理方提供了一组函数，用于完成SNMP管理操作。
　　(1) SnmpMgrOpen：初始化通信套接字及相关数据结构，开始与指定代理之间的SNMP会话。一方面采用基于缓存和数据源能力的查询分解和优化策略,以便充分利用数据源的查询能力,简化包装器的设计,并取得较高的查询效率。
　　(3) SnmpMgrClose：关闭通信套接字，释放相关系统资源，结束SNMP会话。
Table 3 One of test cases for IP relay system
表3 IP中继系统测试例之一

Nr.LabelBehavior descriptionConstraint Ref.VerdictComments
1　Pco1。
COMMENTS:(有关PDU约束的细节,参见图4);
(1) sour-addr field:=Tester-sour,dest-addr field:=lut-in,sour-route［1］:=Tester-dest;
(2) sour-addr field:=Tester-sour,dest-addr field:=Tester-dest,sour-route［1］:=lut-out。
　　下面举例说明诊断主机A与被诊断主机B使用SNMP通信的具体过程。
　　通常情况下，诊断进程由定时器触发，启动一次诊断会话。主机A的诊断进程调用SnmpMgpOpen连接到被诊断主机B上，然后用SnmpMgrRequest查询名为 .1.3.6.1.4.1.12.2.1 的对象状态。主机B上的可扩展代理收到相应的SNMP请求，发现被操作对象包含在USERMIB.DLL所支持的视图中，于是调用USERMIB.DLL的SnmpExtensionQuery函数来获取相应的对象状态，再将结果返回给诊断主机A。主机A格式化返回结果，作为SnmpMgrRequest的返回值传送给诊断进程。状态信息收集完成后，诊断进程调用SnmpMgrClose结束本次SNMP会话。
　　查询2。在本节中,我们将介绍一种用于IP中继系统测试的方法和它的测试结构。PITS系统是以TTCN测试集为基础来组织它的测试过程,在测试中并行解释执行测试例。Timeout Tm-01　Fail　

Test Case Name:IP-REASSEMBLE-02; Group:IP/END/IP-RES;
Purpose:To verify that send two sub-datagrams disorderly,
IUT can correctly reassemble them to a whole datagram。该信号触发诊断进程的一系列SnmpMgrGetRrap调用，这些调用导致被诊断主机上可扩展代理对USERMIB.DLL中SnmpExtensionTrap的函数调用。在Versatile系统中,局部视图由局部数据源的DBA定义,它向系统提供可共享的OIM对象,某个数据源提供的可共享OIM对象的模板集合构成该数据源的局部动态字典。
4　结束语
　　目前，Microsoft Windows系列对SNMP的支持仅限于NT4.0，而一般的应用系统既包含运行NT的高档服务器，也包含运行Windows 95和Windows  3.x的中低档计算机。经过基于PICS和PIXIT（protocol implementation extra information for testing）的选择,测试执行TE（test execution）对所选择的测试例进行解释执行。
　　总而言之，NT4.0对RAS与SNMP的全面支持使远程诊断系统的开发变得规范、易行，在此基础上开发标准化的远程诊断系统是一件很有意义的工作，它将使基于个人计算机的应用软件的技术支持走上一个新台阶。终端用户的每次查询仅针对某个全局视图,即仅使用OIM对象代数的单目操作,该限制符合实际情况,也为缓存的实现提供了方便
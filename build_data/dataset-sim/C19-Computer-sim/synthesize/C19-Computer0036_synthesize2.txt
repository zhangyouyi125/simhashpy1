测试代码不发生改变源代码的结构，从而保证源代码的逻辑完整性和一致性如果某些界面类对象与另一系统的界面类对象通信，它们就组成不同应用系统之间的边界在测试执行时刻，模拟执行器在界面类对象状态空间内模拟被测对象的运行，与被测对象同步
3.2　系统应用软件的构成和功能
　　在代理服务器这台计算机中需要安装如下软件：
　　. Window NT4.0 Server版操作系统（附加 Pack 3包）计算机工程
COMPUTERENGINEERING
1999年　第25卷　第7期　Vol.25　No.5　1999



技术研究
顾玉良　王立福
摘要　目前,大量OO应用软件彩用图形用户用户界面,对这类软件的测试尚缺乏有效的技术。分析了这类软件的特点，基于用户-应用和应用系统-系统环境交互的视角，提出了一种界面类状况测试建模技术，从面支持这类软件的测试。
关键词　面向对象软件测试测试建模状况数学模型
The Technical Research of Test Modeling of User Interface Object Class
Gu Yuliang Wang Lifu
Dept.of Computer,Capital Normal Univ.Beijing 100037
Computer Dept.of Beijing Univ.Beijing 100037
Abstract：Until now,there is few technical support to testing of OO software with GUI. on features of interaction between user and application system and features of interaction between application system and system surrounding,the paper prompts a techinique of state modeling of the user interface objects.
Key words：Object-oriented software testing;Testing modeling;State model
　　测试建模建立被测对象的模型,被测对象模型可以根据规约建立,也可以根据程序源代码生成。原则上,功能和行为模型应该根据规约建立,但是,规约通常缺少支持测试的特性,同时,规约一般具有和矛盾性。虽然许多面向对象方式提供了(功能)行为建模的方法,但在实践中,有相当数量的软件没有完整的文档,难于为测试提供必要的支持。如果发现一个新的交互类型，则生成一个变迁表示与该交互对应的状态转换。
　　状态切换图是描述行为模型的常用工具。目前,用状态切换图进行测试建模时主要存在以下问题：
　　・对于实现的对象类,没有一种好的准则识别对象状态及其状态转换,测试分析人员很难为一些类的对象建立状态模型,尤其在文档不完备时,建立对象状态模型更加困难；
　　・当对一组类的对象进行状态建模时,模型的规模难于控制；
　　・缺乏对建立被测对象的控制和观察机制的支持。
　　为解决以上问题,本文提出了一种界面类对象状态建模技术,以支持具有图形界面的面向对象软件的测试。在任何时刻，同类的对象中，只有其中一个处于活动状态。从用户角度来看,用户界面可以看作是应用系统本身。。在应用系统的每个界面类中，了处理用户交互消息的方法。。所以，应用系统的界面类对象通过系统环境，最终与用户发生交互。。
　　直接对系统环境、类库对象和非界面类对象建模非常困难，且难于控制模型规模。为此，考察界面类对象的行为，通过界面类对象来看应用系统的行为，据此实现应用系统的测试。
　　. Proxy Server 2.0代理软件。
2　界面类对象交互状态模型
　　界面类对象交互状态模型是一种对象状态模型，它描述了对象类中所有对象的共同的行为。
　　一个单位或企业的网络要想与Internet连接，可以采用两种连接方式，第一种方式，根据自己企业网中计算机数向ISP商申请IP，然后给每一台计算机都配置相应的IP，这样这个企业网中的计算机都可以上Internet，这种企业网络结构如图1所示。。
　　定义1 OSN是一个五元组(P，T，F，p0，M0)，它满足如下条件：
　　(1)　P 是位置集；
　　(2)　T 是有限社会变迁集；
　　(3)　p0∈P，M0={p0}是起始标识，称p0是初始位置；标识是包含一个位置的集合；
　　(4)　OSN没有孤立元素，P￠,T≠￠，A≠￠；
　　(5)　Fс(P×T)∪(T×P)是关系集合；
　　(6)　任何位置至少有一个前继和一个后继，即：对p∈P，有*p≠￠，p*≠￠；
　　(7)　任何变迁至少有一个后继，有且仅有一个前继，即：对t∈T，有*t≠￠，t*≠￠，且如果ョp1∈*t，p1∈*t，则p1=p2。。在任何时刻，子网的当前标识M={p}，p∈P，表示对应的界面类对象正处于该p表示的交互状态。
　　对一个OSN，如果其中包含的变迁数|T|=n，根据定义1(6)(7)，可以得到|P|的上限，|P|≤n。证明方法如下：把该OSN中从T到P的所有关系去掉，于是,对p∈P，存在多于一个t∈T与p对应，所以，|P|≤|T|，即|P|≤n。由于|T|的数量较少，所以，|P|+|T|的数量较少。 
作者简介:张　庄　高级工程师。。
　　(2)　新标识产生规则 变迁t触发后，把当前标识M变为标识M'={p}，并且满足p∈t*。
　　(3)　触发序列完整性规则 一个完整的触发序列引致子网从p0到p0的1次或多次，它是子网执行的必要条件。
3　界面类对象生存周期状态模型
　　OSN描述界面类对象生存期间的交互状态及其转换。为了实施测试，还需要描述界面类对象的实例化及生存周期的状态变化过程。根据界面类对象的特点，用图1中的状态转换图之一表示界面类对象生存周期状态模型。

图1 界面类对象生存周期状态转换图
　　为表示界面类对象之间的关系，需要描述对象生成和接收的消息。但在实际的应用系统中，消息生成和传递过程非常复杂，在状态建模中，只需在测试空间内模拟它们的等价效果。所以，把非界面类对象、相关类库对象、系统环境看作是界面类对象之间、界面类对象与用户之间通信的“信道”，在其中传递两类与实际消息序列等价的消息：
　　(1)　用户交互消息(UM，缩写交互消息)
　　用户交互消息由用户与系统交互动作导致，传递到界面类对象并触发其状态转换。
　　(2)　界面类对象消息(IM)
　　界面类对象消息等价于界面类对象之间的消息序列，一个界面类对象“产生消息"，经由“信道"传递到另一个界面类对象(或自身)。
　　被测对象控制和观察机制的建立：
　　・由模拟执行器、控制器和插装代码实现对界面类对象的动态模拟和跟踪；
　　・利用交互驱动器产生交互事件，控制被测对象的运行；
　　・在界面类对象交互状态模型中，用等待用户交互的阶段定义对象状态，在对象等待交互时刻，模拟执行器与被测对象之间可以进行数据交换。
　　如图1所示，一个界面类对象处于如下状态之一：进入状态(Start)、活动状态(Active)、暂停状态(Pause)和终止状态(Dead)，每个生存周期的状态转换事件可以导致一个IM消息序列。
　　进入状态是一个瞬态，表示对象创建的初始状态。New消息导致实例化一个对象，该过程完成对象从进入系统到准备接受消息的转换，即对象进入活动状态。
　　一个界面类对象处于暂停状态时，存在于内存中，但当前不能响应UM消息，可以响应IM消息。在任何时刻，可以有多个同类界面类对象处于暂停状态。对处于活动状态的对象发Pause消息，则该对象进入暂停状态，对象当前状态被保存。
　　一个界面类对象处于活动状态时，可以响应用户交互消息和界面类对象消息。
　　第二种连接方式，向ISP商申请2个IP采用代理服务的方法，民营企业网的所有计算机都用自己定义的内部IP地址，当内部网的计算机想上Internet时，必须通过代理服务方式把内部IP转成正规的IP然后进入Inernet，如图4：


图4
　　在以上两种方式（图1、图4）中，第一种计费是对每台计算机的IP进行统计然后打印出各台计算机使用的情况，对使用者来讲所有Internet功能都能实现，没有限制。
　　. SQL Server 6.5数据库服务软件。
　　终止状态是一个瞬态，表示界面类对象从系统中消失。对处于活动状态或暂停状态的对象发Stop消息，该对象进入终止状态。。
　　(2)　对一个OSN，首先给出一个初始位置p0，表示在此状态时对象准备响应消息。


图1
　　在图1网络结构中要想实现对每一台计算机进行计费可以有两种方法，第一种将装有计费软件的计算机接到主干线，该计费软件主要特点必须定时到Router中取各个IP包数据，然后把各IP包数据贮放到本机中。
　　目前,测试建模技术对建立可控制性和可观察性缺乏支持;在如何支持成和系统测试等方面缺乏研究[1][5]。
　　・标识位置p∈P。。每个变迁可以有若干后继，但只可以有一个前继。如果若干变迁对应同一个前继，表示在该状态下可以响应不同类型的交互，从而发生不同的状态转换。
　　・连接位置和变迁。一般地，初始位置对应于一个值状态检查点，当界面类对象发生一个状态转换序列，而到达初始位置时，可以要求模拟执行器对它产生一个值状态检查。
　　(3)　确定子网之间的消息关联对一个OSN，考察所有已标识的变迁。如果该变迁的发生可能导致其它子网的变迁发生，则定义一个IM消息，把该变迁与目标变迁相关联。如果该变迁的发生可能导致其它界面类对象的生存周期状态转换，则根据该转换的类型，定义相应的预定义消息IM，把该变迁与目标子网相关联。
　　在该界面类对象的生存周期状态转换图中，对于4个预定义消息引起的状态转换，分别生成可能导致的IM消息，并根据消息把该子网与目标子网或目标子网的变迁相关联。
　　对每一个界面类重复(2)(3)，直至完成所有子网的定义。在确定消息时，可能目标子网还没有生成，则该工作在目标子网生成后继续。
　　(4)　检查一致性  对以上标识的所有子网的位置和变迁，按OSN的定义进行一致性检查。
　　界面类对象生存周期状态转换图和交互状态转换图体现了界面类对象区别于非界面类对象的一些重要特性:
　　・容易确定各个用户交互类型及对应状态；
　　・用户交互导致了界面类对象的状态转换，通过模拟用户交互，可以驱动界面类对象(可控制性)。。
5　相关工作
　　基于以上技术，实现了一个支持具有图形界面的面向对象软件测试的原型系统JB-OOTE。这里，通过介绍测试执行系统，说明界面类对象状态模型如何支持和实现被测对象控制和观察机制。测试执行系统的结构如图2所示。

图2　测试执行系统
　　模拟执行器是测试执行工具的核心部分。
　　界面类对象的状态转换规则可以用子网的运转规则表示，包括如下几个规则：
　　(1)　触发规则 对p∈*t，子网的变迁t在标识M=*t下是可触发的。对应于每一个界面类对象，生成一个对应的模拟对象，用三元组<对象标识，对象值状态标识，子网标识>表示。
　　为了便于对上网用户的管理，我们利用NT增设一个用户组，属于这个组的成员都允许它们上Internet，企业网的系统管理员只要对该组的成员进行增加、删除、更改。
3.2　系统软件的构成和功能
　　在代理服务器这台计算机中需要安装如下软件：
　　. Window NT4.0 Server版操作系统（附加 Pack 3包）。对于模拟系统中当前活动的子网，其每个位置是一个检查点，在每个检查点上，可以由测试脚本定义所需的检查，由模拟执行器实施相应的检查。检查的类型包括界面检查、界面类对象状态检查、断言检查和报告检查。可能导致界面类对象产生消息的事件包括: 界面类对象交互状态转换事件和生存周期状态转换事件。根据上面确定的关系，生成关系e∈A，连接相关的位置p∈P和变迁t∈T。当每次状态转换后，可以根据所达位置的含义，进行交互状态检查、界面检查、断言检查和报告检查。
　　不需要专门在程序中建立复杂的控制逻辑，用程序插装工具对方法进行插装；在界面类中增加了用于对象值状态检查的方法DoCheck(...)，检查的内容由测试设计决定。。。在测试代码中建立的控制器用于接受执行器的指令，并控制指定的界面类对象执行状态检查，进行有关数据的传送和处理。。该技术体现了对象封装、通信和动态特征，使得对象状态易于识别，模型规模容易控制，并且支持建立被测对象的控制和观察机制。
*本项研究得到国家"九五"重点科技攻关项目资助
作者简介：顾玉良 男，34岁，博士生，主研领域为软件工程和软件测试
作者：顾玉良　首都师范大学计算机系北京100037
　　　　　王立福　北京大学计算机系北京100037
参考文献
1　Arnold TR,Fuson WA.Testing in a  Perfect World.Comm.of ACM,1994,37(9)：79
2　Binder RV.State-based Testing.Object Magazine,1995,5(4)：78
3　Binder RV.The FREE  Approach for System Testing.Object Magazine,1996,5(9)：73
4　Hsia P.Testing of Object-oriented Programs.YIGA'97 Seminar：65
5　Murphy GC,Townsend P,Wong PS.Experiences with Cluster and Class Testing.Communication of ACM，1994，37(9)：39
收稿：1998-08-03

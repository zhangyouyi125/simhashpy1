如果发现一个新的交互类型，则生成一个变迁表示与该交互对应的状态转换根据上面确定的关系，生成关系e∈A，连接相关的位置p∈P和变迁t∈T原型系统把源代码转换为测试代码，除了必要的状态检查的方法代码由用户编写，其余工作可以由原型系统自动完成电脑工程
COUTERENGINEERING
1999年　第25卷　第7期　Vol.25　No.5　1999



界面试验可视化技术研究
顾玉良　王立福
摘要　目前,大量OO应用软件彩用图形界面,对这软件的测试尚缺乏有效的技术支持。针对这种计费的网络内部结构，我们用VB5.0开发的计费软件可以以多种方式统计出使用者上网的数据量和费用。
关键词　面向第一一类软件测试测试建模状况模型
The Technical Research of Test Modeling of User Interface Object Class
Gu Yuliang Wang Lifu
Dept.of Computer,Capital Normal Univ.Beijing 100037
Computer Dept.of Beijing Univ.Beijing 100037
Abstract：Until now,there is few technical support to testing of OO software with GUI.Based on features of interaction between user and application system and features of interaction between application system and system environment,the paper prompts a techinique of state modeling of the user interface objects.
Key words：Object-oriented software testing;Testing modeling;State model
　　测试建模建立被测对象的模型,被测对象模型可以根据建立,也可以根据程序生成。。
作者单位:张　厝　福建省经济信息中心　福建*福州（350003）
收稿日期:1999-02-10
。。
　　不需要专门在程序中建立复杂的控制逻辑，用程序插装工具对方法进行插装；在界面类中增加了用于对象值状态检查的方法DoCheck(...)，检查的内容由测试设计决定。。
　　为解决以上问题,本文提出了一种界面类对象状态建模技术,以支持具有图形界面的面向对象软件的测试。
1　建模范围和测试特征的选取
　　OO软件是基于消息控制系统、由事件驱动的,与用户直接交互的是一些界面部件,它们具有规范的特征,作为用户与软件系统的USB,为系统提供交互数据和显示外部可见的系统状态。从用户角度来看,用户界面可以看作是应用系统本身。进一步说，用户与应用系统的交互是由窗口系统控制的，类库扩充了这种控制机制。在应用系统的每个界面类中，包含了处理用户交互消息的方法。当应用系统时，系统的用户与窗口进行交互，系统环境产生并传递相应的用户交互消息，由应用系统的界面类对象进行处理。所以，应用系统的界面类对象通过系统环境，最终与用户发生交互。如果某些界面类对象与另一系统的界面类对象通信，它们就组成不同应用系统之间的边界。
　　直接对系统环境、类库对象和非界面类对象建模非常困难，且难于控制模型规模。检查的类型包括界面检查、界面类对象状态检查、断言检查和报告检查。所以，本文选取应用系统的界面类对象进行测试建模，基于界面类对象的特点，采用交互状态转换图和生存周期状态转换图描述界面类对象行为模型。
2　界面类对象交互状态模型
　　界面类对象交互状态模型是一种对象状态模型，它描述了对象类中所有对象的共同的行为。其中包括两个基本概念:交互状态表达界面类对象等待用户交互所处的阶段，在一个交互状态下，界面类对象可以等待不同类型的交互;状态转换表示界面类对象从一个交互状态到下一个交互状态的变化过程，由消息到达事件触发，体现对象的动态特性。界面类对象交互状态模型用下面定义的OSN(Object State Net，本文称为)表示。这种计费方法投资少，很适合在中、小企业的使用。
　　这里，用位置表示界面类对象的交互状态;变迁表示界面类对象的状态转换;p0表示界面类对象创建完成后的初始状态，在该状态下，对象准备响应消息。在任何时刻，子网的当前标示M={p}，p∈P，表示对应的界面类对象正处于该p表示的交互状态。。证明方法如下：把该OSN中从T到P的所有关系去掉，于是,对p∈P，存在多于一个t∈T与p对应，所以，|P|≤|T|，即|P|≤n。。一个应用软件的界面类数量也较少，从而使模型的规模得到了有效控制。
　　界面类对象的状态转换规则可以用子网的运转规则表示，包括如下几个规则：
　　(1)　触发规则 对p∈*t，子网的变迁t在标识M=*t下是可触发的。
　　(2)　新标识产生规则 变迁t触发后，把当前标识M变为标识M'={p}，并且满足p∈t*。
　　(3)　触发序列完整性规则 一个完整的触发序列引致子网从p0到p0的1次或多次环行，它是子网执行的必要条件。。为了实施测试，还需要描述界面类对象的实例化及生存周期的状态变化过程。根据界面类对象的特点，用图1中的状态转换图之一表示界面类对象生存周期状态模型。

图1 界面类对象生存周期状态转换图
　　为表示界面类对象之间的关系，需要描述对象生成和接收的消息。


图1
　　在图1网络结构中要想实现对每一台计算机进行计费可以有两种方法，第一种将装有计费软件的计算机接到主干线，该计费软件主要特点必须定时到Router中取各个IP包数据，然后把各IP包数据贮放到本机中。所以，把非界面类对象、相关类库对象、系统环境看作是界面类对象之间、界面类对象与用户之间通信的“信道”，在其中传递两类与实际消息序列等价的消息：
　　(1)　用户交互消息(UM，简称交互消息)
　　用户交互消息由用户与系统交互动作导致，传递到界面类对象并触发其状态转换。
　　(2)　界面类对象消息(IM)
　　界面类对象消息等价于界面类对象之间的消息序列，一个界面类对象“产生消息"，经由“信道"传递到另一个界面类对象(或自身)。
2　系统设计原理
　　Internet目前采用TCP/IP协议进行网络通信，在Internet网中的每一台计算机都必须拥有唯一的一个只属于自己的IP作为主机门牌号，这样所有Internet网上的计算机都可以通过这个IP地址找到这台主机与其通讯交换信息。
　　如图1所示，一个界面类对象处于如下状态之一：进入状态(Start)、活动状态(Active)、暂停状态(Delete)和终止状态(Dead)，每个生存周期的状态转换事件可以导致一个IM消息序列。
　　进入状态是一个瞬态，表示对象创建的初始状态。New消息导致实例化一个对象，该过程完成对象从进入系统到准备接受消息的转换，即对象进入活动状态。
　　一个界面类对象处于暂停状态时，存在于内存中，但当前不能响应UM消息，可以响应IM消息。在任何时刻，可以有多个同类界面类对象处于暂停状态。
　　为了便于对上网用户的管理，我们利用NT设置一个用户组，属于这个组的成员都允许它们上Internet，企业网的系统管理员只要对该组的成员进行增加、删除、更改。。在任何时刻，同类的对象中，只有其中一个处于活动状态。如果对处于暂停状态的对象发Continue消息，或实例化一个对象，该对象进入活动状态，对象从保存或初始的状态运行。
　　终止状态是一个瞬态，表示界面类对象从系统中消失。对处于活动状态或暂停状态的对象发Stop消息，该对象进入终止状态。。
　　(2)　对一个OSN，首先给出一个初始位置p0，表示在此状态时对象准备响应消息。
　　解决以上问题最有效的措施是采用计费机制约束入网用户，谁能上网谁不能上网，对每位上网用户详细纪录他们的使用情况，因此用户只有需要时才上Internet，这样才能达到企业网与Internet网连接的真正目的。
　　(4)　检查一致性  对以上标识的所有子网的位置和变迁，按OSN的定义进行一致性检查。
　　・标识位置p∈P。对于已经标识的变迁，存在等待该交互类型的状态和转换发生后的状态，如果相应的位置尚未生成，则生成之。每个变迁可以有若干后继，但只可以有一个前继。如果若干变迁对应同一个前继，表示在该状态下可以响应不同类型的交互，从而发生不同的状态转换。
　　・连接位置和变迁。。。如果该变迁的发生可能导致其它子网的变迁发生，则定义一个IM消息，把该变迁与目标变迁相关联。如果该变迁的发生可能导致其它界面类对象的生存周期状态转换，则根据该转换的类型，定义相应的预定义消息IM，把该变迁与目标子网相关联。


图1
　　在图1网络结构中要想实现对每一台计算机进行计费可以有两种方法，第一种将装有计费软件的计算机接到主干线，该计费软件主要特点必须定时到Router中取各个IP包数据，然后把各IP包数据贮放到本机中。
　　对每一个界面类重复(2)(3)，直至完成所有子网的定义。在确定消息时，可能目标子网还没有生成，则该工作在目标子网生成后继续。。
　　界面类对象生存周期状态转换图和交互状态转换图体现了界面类对象区别于非界面类对象的一些重要特性:
　　・容易确定各个用户交互类型及对应状态；
　　・用户交互导致了界面类对象的状态转换，通过用户交互，可以驱动界面类对象(可控制性)。可执行的测试用例是由界面类对象的状态转换序列表示的；
　　・可在运行时刻跟踪界面类对象的地址，从而支持对象跟踪和对象状态检查(可观察性)；
　　・在运行时刻，界面类对象的数量有限，从而支持在运行时刻演示每一个界面类对象。
5　相关工作
　　基于以上技术，实现了一个支持具有图形界面的面向对象软件测试的原型系统JB-OOTE。。测试执行系统的结构如图2所示。

图2　测试执行系统
　　模拟执行器是测试执行工具的核心部分。在测试执行时刻，模拟执行器在界面类对象状态空间内模拟被测对象的运行，与被测对象同步。对应于每一个界面类对象，生成一个对应的模拟对象，用三元组<对象标识，对象状态标识，子网标识>表示。模拟对象包含了用于驱动、状态跟踪和检查所需的最少信息，其状态表示了运行时刻的界面类对象的正确状态。
　　执行器动态地维护每个模拟对象，跟踪被测对象的状态，与被测对象之间传递命令和数据。对于模拟系统中当前活动的子网，其每个位置是一个检查点，在每个检查点上，可以由测试脚本定义所需的检查，由模拟执行器实施相应的检查。虽然许多面向对象方法提供了(功能)行为建模的方法,但在实践中,有相当数量的软件没有完整的文档,难于为测试提供必要的支持。
　　被测对象控制和观察机制的建立：
　　・由模拟执行器、控制器和插装代码实现对界面类对象的动态模拟和跟踪；
　　・利用交互驱动器产生交互事件，控制被测对象的运行；
　　・在界面类对象交互状态模型中，用等待用户交互的阶段定义对象状态，在对象等待交互时刻，模拟执行器与被测对象之间可以进行数据交换。一般地，初始位置对应于一个值状态检查点，当界面类对象发生一个状态转换序列，而到达初始位置时，可以要求模拟执行器对它产生一个值状态检查。当每次状态转换后，可以根据所达位置的含义，进行交互状态检查、界面检查、断言检查和报告检查。
　　状况转换图是描述行为模型的常用工具。原则上,功能和行为模型应该根据建立,但是,规约通常缺少支持测试的特性,同时,规约一般具有多义性和矛盾性。测试代码不改变源代码的结构，从而保证源代码的逻辑完整性和一致性。在测试代码中建立的控制器用于接受执行器的指令，并控制指定的界面类对象执行状态检查，进行有关数据的传送和处理。
6　结束语
　　针对具有图形界面的面向对象软件的测试，本文提出了一种界面类对象状态建模技术。
　　关键词　网络结构，网络连接
1　引言
　　随着Internet的普及，越来越多的单位或企业纷纷将自己的企业网与Internet网连接，这样就给企业网络管理带来了许多问题：安全问题，配置管理，计费管理等。
*本项研究得到国家"九五"重点科技攻关项目资助
简介：顾玉良 男，34岁，研究生，主研领域为软件工程和软件测试
作者单位：顾玉良　首都师范大学计算机系北京100037
　　　　　王立福　北京大学计算机系北京100037
参考文献
1　Arnold TR,Fuson WA.Testing in a  Perfect Asia.Comm.of ACM,1994,37(9)：79
2　 .State-based Testing.Object Magazine,1995,5(4)：78
3　Binder RV.The FREE  Approach for System Testing.Object Magazine,1996,5(9)：73
4　Hsia P.Testing of Object-oriented Programs.YIGA'97 Seminar：65
5　Murphy GC,Townsend P,Wong PS.Experiences with Cluster and Class Testing.Communication of ACM，1994，37(9)：39
收稿日期：1998-08-03

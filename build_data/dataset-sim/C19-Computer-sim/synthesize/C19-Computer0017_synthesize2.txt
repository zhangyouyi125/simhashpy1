此时的点不再是真正的几何点，而是画素（图像基本元素）
三、图层使绘图速度加快
　　我们在画墙体、轴线等时，需要用到不同的横向，如实线、点划线、虚线等不同线型，利用电脑绘图，你必须先设定线条的线型，电脑才能画出你所要的线型来计算机应用
COMPUTER APPLICATIONS
1999年 第19卷 第6期 Vol.19 No.6 1999



用开发虚拟制造自然环境（一）
周杰韩　杜润生　吴波
　　摘　要　本文介绍了几何数据的数据结构、存储与基本原理。图形用户接口GDI为应用程序提供了一套独立于设备的标准绘图指令集。。它是各种CAD绘图软件进行设计的基本保证，正确、合理地使用图层，是发挥如AutoCADR14、Photoshop、lightscape、天正等CAD软件巨大功能的重要标志，也只有正确的使用了图层，才能将各种绘图软件的强大功能发挥得淋漓尽致。
二、图层赋予图形特定的含义
　　CAD给往年的手工设计带来了巨大的变革。几何学上的点是没有大小的。线段的表明实际上用有限个点来产生图形，因而每个点都有一定的大小。。。显示屏如同由像素组成的二维数组。每个像素对应数组的一个元素。每个像素有一个地址，对应数组的下标。像素暗度值对应元素值。设定显示屏上每一像素的亮度可以产生一幅图像。Win32应用程序在Windows95环境下都被分隔成了用户方式与核心模式。一个分辨率较高的显示设备若在x和y方向各有1000个像素，则这个显示屏将含有100万个像素。为了显示每一点的亮暗，每一像素需要1比特的亮度信息，其存储空间至少需要100万/8个字节。用来存储像素亮度数组的称为帧缓冲器。。近年来，作为工业标准图形，在CAD/CAM等需要高级的三维对象可视化和图形绘制领域得到广泛应用。其次应用程序把图形信息写入帧缓冲器，由帧缓冲器直接传送到显示设备。帧缓冲器的存取地址与光栅扫描信号同步地产生。由于OpenGL本身与硬件及操作系统的底层软件无关，从而使图形应用程序获得较高的可移植性。强度大小决定像素的显示明暗。编写应用程序过程中，用符合语言的约定方式把OpenGL嵌入到相应的语言之中。。每一次扫描帧缓冲器都使屏幕得到刷新。由于光栅显示控制系统利用直接存储器存取（DMA）硬件不断地扫描帧缓冲器，并把图形显示出来，因而图像生成不受中央处理器（CPU）控制。
1.4　显示设备驱动程序与应用程序的可移植性
　　应用中，应用程序编写的几何图形信息不是直接改变帧缓冲器的内容而是作为标准显示指令存入显示文件中，然后利用显示设备驱动程序解释显示指令以产生需要的图象。
二、图层赋予图形特定的含义
　　CAD给以往的手工设计带来了巨大的变革。若应用程序可以产生标准显示文件代码，那么每个带有驱动程序的具体显示设备就能运行应用程序，从而提高了应用程序的可移植性。显示设备与显示驱动程序通常由硬件商一起提供。
1.5　应用程序图形显示步骤
　　帧缓冲器数组直接与显示屏内容相对应，并且以亮度编码的形式保存了被显示的图形。图形应用程序的实现步骤包括：首先由初始化程序分配显示设备和存储器。光栅显示是利用读取发生器每秒钟扫描帧缓冲器30到60次，将领袖像素亮度的信息一行一行取出，然后送往显示器。空帧缓冲器对应空白的显示屏。最后由结束图形程序释放显示设备包括重新分配存储器。
2　Windows环境下的图形显示
2.1　Windows环境下的虚屏显示
　　在MS-应用中，图形和文本程序不仅常常直接写到视屏上，而且这样做时经常绕过BIOS屏幕调用。然而在Windows环境下避免了这种状况。首先在多任务Windows环境下物理视屏是一个共享资源。所有应用程序的显示活动，都必须通过Windows 函数来操作。如果通过CAD的特有功能，如“属性”、“扩展数据”、“图层”等，尽管我们没有对这一正方形作任何的注释，我们都可以十分方便地了解这些功能赋予它特殊的物理意义。其次在Windows环境下屏幕操作根本不写到物理视屏上，即使使用API函数时也是这样。而且任何出访输出设备的函数都留在GDI的服务器方，从而保证了入侵应用程序不能直接访问到其它应用程序的屏幕数据。最后Windows把虚拟屏幕映像到物理显示屏上。
2.2　图形接口（GDI）的客户/服务器本质
　　Windows将应用程序从具体输出设备中分离出来。在MS-DOS中，应用程序负责管理为所有输出设备编程。Windows应用程序不负责对输出设备编程。从插件角度论述Windows图形设备接口GDI的客户本质及虚屏幕技术。利用图层在图纸空间的特性，我们只需一个总图，就可以十分快捷的通过“查封”当前视窗的某些图层来达到此目的，却不影响当前视窗的这些已关闭的图层在其它视窗中的正确显示。
1.2　几何图形信息的存储

图1　帧与图像显示
　　一幅图像是由有限数量的像素组成。在用户模式下禁止直接取用图形设备资源，而是交给操作系统核心模式来完成。这种模式称为GDI的客户/服务器模式如图2。GDI的客户/服务器模式有效地将应用程序彼此分离，从而提高了Windows 环境的安全特性。应用程序请求写文本或图形的操作，都是将信息写到虚拟屏幕也称为设备环境DC。含义丰富，功能强大，不会用“图层”的人也能用CAD进行设计，但对CAD的认识一定还处在一个较低的水平上，使用CAD工作时会感到操作步骤多、修改难、工作量大等；如果能深刻领会“图层”这一有着特殊意义的概念，会察觉工作立刻变得简单、方便、快捷起来，设计水平也会随之大幅提高，随着各种CAD绘图软件诞生、经济发展，“图层”的应用越来越广泛，并日益显示出其无比强大生命力，今天可以这么说，没有图层就没有CAD。
1.3　几何图形信息的显示
　　光栅显示是用得较多的图形显示方法。Direct3D为应用程序员提供了程序和图形输入输出设备之间的功能接口，定义了一个独立于语言的图形核心系统。帧缓冲器地址用来输出水平与垂直偏转信号控制阴极射线管电子束的偏转。OpenGL在图形应用中的地位如图3所示。帧缓冲器的用来输出视屏信号控制阴极射线管电子束强度。

图3
3.2　OpenGL客户/服务器图形显示方式
　　OpenGL通过客户/服务器方式实现图形显示。应用程序作为客户工作并调用OpenGL API。特别是在photoshop5.0中更是增加“文字图层”这一功能，在“文字图层”中我们可以对文字做许多声效的处理，利用文字图层中Effects(制造效果)功能，我们可以将在以往旧版的photoshop中需要许多步骤才能完成的文字特殊效果如文字阴影一步就“搞定”。OpenGL服务模块调用Win32设备驱动接口来使用驱动程序。一个OpenGL服务程序往往同时维护几个OpenGL环境。OpenGL环境是OpenGL客户 所处的OpenGL状态。。所有的OpenGL调用都通过环境来完成。OpenGL着色环境与设备环境有相同的像素格式。在为一个设备环境设置好了像素格式后就可以产生一个与之的着色环境。通过给出的设备环境，着色环境就可以在设备环境指出的设备上绘图。其逻辑模式如图4。。 
注：国家教委博士点资助。
作者简介：周杰韩　博士研究生。。